=begin
#ChartHop API

#REST API for ChartHop

OpenAPI spec version: V1.0.0
Contact: support@charthop.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.25

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::GroupApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'GroupApi' do
  before do
    # run before each test
    @instance = SwaggerClient::GroupApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GroupApi' do
    it 'should create an instance of GroupApi' do
      expect(@instance).to be_instance_of(SwaggerClient::GroupApi)
    end
  end

  # unit tests for create_group
  # Create a group
  # 
  # @param org_id Org identifier (either id or slug)
  # @param type Group type
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scenario_id Scenario id to create the group in
  # @option opts [Date] :date Effective date of group creation
  # @option opts [Object] :body 
  # @return [nil]
  describe 'create_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_group
  # Delete a group
  # 
  # @param org_id Org identifier (either id or slug)
  # @param type Group type
  # @param group_id Group id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scenario_id Scenario id to update the group in
  # @option opts [Date] :date Effective date of group update
  # @return [nil]
  describe 'delete_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_groups
  # Find groups in the organization of a certain type
  # 
  # @param org_id Org identifier (either id or slug)
  # @param type Group type
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scenario_id Scenario id to query
  # @option opts [Date] :date Date to search as of
  # @option opts [String] :from Group id to start paginating from
  # @option opts [Integer] :limit Number of results to return
  # @option opts [String] :fields Fields to retrieve, comma-separated
  # @option opts [BOOLEAN] :include_all Include all groups, including deleted groups
  # @option opts [String] :format Data format to use; default is json, can also use json-extended or json-readable
  # @return [ResultsData]
  describe 'find_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_group
  # Return a particular group by id
  # 
  # @param org_id Org identifier (either id or slug)
  # @param type Group type
  # @param group_id Group id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scenario_id Scenario id to query
  # @option opts [Date] :date Date
  # @option opts [String] :fields Fields to retrieve, comma-separated
  # @option opts [String] :format Data format to use; default is json, can also use json-extended or json-readable
  # @return [Hash<String, Object>]
  describe 'get_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for import_csv1
  # Import data from CSV file
  # 
  # @param org_id Org identifier (either id or slug)
  # @param type Group type
  # @param [Hash] opts the optional parameters
  # @option opts [File] :file 
  # @option opts [Date] :date Date to update as of
  # @return [Process]
  describe 'import_csv1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_group
  # Update a group
  # 
  # @param org_id Org identifier (either id or slug)
  # @param type Group type
  # @param group_id Group id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scenario_id Scenario id to update the group in
  # @option opts [Date] :date Effective date of group update
  # @option opts [Object] :body 
  # @return [nil]
  describe 'update_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
