=begin
#ChartHop API

#REST API for ChartHop

OpenAPI spec version: V1.0.0
Contact: support@charthop.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.25

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::ReportChartApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ReportChartApi' do
  before do
    # run before each test
    @instance = SwaggerClient::ReportChartApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReportChartApi' do
    it 'should create an instance of ReportChartApi' do
      expect(@instance).to be_instance_of(SwaggerClient::ReportChartApi)
    end
  end

  # unit tests for create_chart
  # Create a new chart in a report
  # 
  # @param org_id Org identifier (either id or slug)
  # @param report_id Report id
  # @param [Hash] opts the optional parameters
  # @option opts [CreateReportChart] :body Report chart data to create
  # @return [ReportChart]
  describe 'create_chart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_chart
  # Delete a chart from a report
  # 
  # @param org_id Org identifier (either id or slug)
  # @param chart_id Chart id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_chart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for export_chart_data
  # Export a particular chart&#39;s data
  # 
  # @param org_id Org identifier (either id or slug)
  # @param report_id Report id
  # @param chart_id Chart id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start_date Start date, inclusive
  # @option opts [String] :end_date End date, exclusive
  # @option opts [String] :interval Interval
  # @option opts [String] :scenario_id Scenario id
  # @option opts [BOOLEAN] :project_hires Project future hires
  # @option opts [String] :format Data format to use; default is json, can also use html
  # @return [nil]
  describe 'export_chart_data test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_charts
  # Return all of the charts for a particular report
  # 
  # @param org_id Org identifier (either id or slug)
  # @param report_id Report id
  # @param [Hash] opts the optional parameters
  # @return [ResultsReportChart]
  describe 'find_charts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_chart
  # Return a particular report chart by id
  # 
  # @param org_id Org identifier (either id or slug)
  # @param chart_id Chart id
  # @param [Hash] opts the optional parameters
  # @return [ReportChart]
  describe 'get_chart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_chart
  # Update an existing report chart
  # 
  # @param org_id Org identifier (either id or slug)
  # @param chart_id Chart id
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateReportChart] :body Chart data to update
  # @return [nil]
  describe 'update_chart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
