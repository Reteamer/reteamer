=begin
#ChartHop API

#REST API for ChartHop

OpenAPI spec version: V1.0.0
Contact: support@charthop.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.25

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::OrgConfigApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'OrgConfigApi' do
  before do
    # run before each test
    @instance = SwaggerClient::OrgConfigApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrgConfigApi' do
    it 'should create an instance of OrgConfigApi' do
      expect(@instance).to be_instance_of(SwaggerClient::OrgConfigApi)
    end
  end

  # unit tests for create_org_config
  # Create an org config if it doesn&#39;t exist
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [CreateOrgConfig] :body Org config to create
  # @return [OrgConfig]
  describe 'create_org_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_org_config
  # Delete an org config
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_org_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_org_config
  # Return config for a given org
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @return [OrgConfig]
  describe 'get_org_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_org_config
  # Update an existing org config
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateOrgConfig] :body Sort data to update
  # @return [nil]
  describe 'update_org_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
