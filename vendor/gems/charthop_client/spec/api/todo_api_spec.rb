=begin
#ChartHop API

#REST API for ChartHop

OpenAPI spec version: V1.0.0
Contact: support@charthop.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.25

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::TodoApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TodoApi' do
  before do
    # run before each test
    @instance = SwaggerClient::TodoApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TodoApi' do
    it 'should create an instance of TodoApi' do
      expect(@instance).to be_instance_of(SwaggerClient::TodoApi)
    end
  end

  # unit tests for delete_todo
  # Delete todo
  # 
  # @param org_id Org identifier (either id or slug)
  # @param todo_id Todo id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_todo test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_todos
  # Return all existing todos
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user_id Todo User id
  # @option opts [String] :goal_id Goal id
  # @option opts [String] :status Todo.Status. (PENDING/DONE)
  # @option opts [String] :type Todo.Type of todo (form)
  # @option opts [String] :entity_id Entity Id
  # @option opts [String] :target_id Target Id
  # @option opts [Integer] :limit Number of results to return
  # @return [ResultsTodo]
  describe 'find_todos test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_todos_summary
  # Return the todos for a given goal
  # 
  # @param org_id Org identifier (either id or slug)
  # @param goal_id Goal id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'find_todos_summary test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_my_todos
  # Return the todos for the current user
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :goal_id Goal id
  # @option opts [String] :status Todo.Status. (PENDING/ACTIVE)
  # @option opts [String] :type Todo.Type of todo (form)
  # @option opts [String] :entity_id Entity Id
  # @option opts [String] :target_id Target Id
  # @option opts [Integer] :limit Number of results to return
  # @return [ResultsTodo]
  describe 'get_my_todos test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for query_todos
  # Query todos for goals in the organization
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user_id Todo User id
  # @option opts [String] :goal_id Goal id
  # @option opts [String] :status Todo.Status. (PENDING/DONE)
  # @option opts [String] :type Todo.Type. (FORM_SUBMIT/CHANGE_APPROVE)
  # @option opts [String] :entity_id Entity Id
  # @option opts [String] :target_id Target Id
  # @option opts [Integer] :limit Number of results to return
  # @option opts [String] :fields Fields to retrieve, comma-separated
  # @option opts [String] :format Data format to use; default is json, can also use json-extended or json-readable
  # @option opts [String] :from Job id to start paginating from
  # @return [ResultsData]
  describe 'query_todos test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remind_todo
  # Send a reminder notification for a particular todo
  # 
  # @param org_id Org identifier (either id or slug)
  # @param todo_id Todo id
  # @param [Hash] opts the optional parameters
  # @option opts [TodoRemindRequest] :body 
  # @return [nil]
  describe 'remind_todo test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_form_from_goal
  # Delete todo
  # 
  # @param org_id Org identifier (either id or slug)
  # @param goal_id Goal id
  # @param form_id Form id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_form_from_goal test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
