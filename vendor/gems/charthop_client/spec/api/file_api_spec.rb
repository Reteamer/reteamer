=begin
#ChartHop API

#REST API for ChartHop

OpenAPI spec version: V1.0.0
Contact: support@charthop.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.25

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::FileApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'FileApi' do
  before do
    # run before each test
    @instance = SwaggerClient::FileApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FileApi' do
    it 'should create an instance of FileApi' do
      expect(@instance).to be_instance_of(SwaggerClient::FileApi)
    end
  end

  # unit tests for delete_file
  # Delete a file
  # 
  # @param org_id Org identifier (either id or slug)
  # @param file_id File id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_file
  # Download a file
  # 
  # @param org_id Org identifier (either id or slug)
  # @param file_id File id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_files
  # Returns metadata about a file
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :entity_id Entity id
  # @option opts [String] :entity_type Entity type
  # @option opts [Integer] :limit Number of results to return
  # @option opts [String] :from From result id
  # @return [ResultsFileEntity]
  describe 'find_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_file_metadata
  # Returns metadata about a file
  # 
  # @param org_id Org identifier (either id or slug)
  # @param file_id File id
  # @param [Hash] opts the optional parameters
  # @return [FileEntity]
  describe 'get_file_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_file
  # Upload a new file
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :entity_id entity id (if not passed, defaults to user id)
  # @option opts [String] :entity_type entity type (if not passed, defaults to user)
  # @option opts [String] :field field name - can leave blank for a general upload
  # @option opts [String] :sensitive file sensitivity level - defaults to PERSONAL
  # @option opts [File] :file 
  # @return [FileEntity]
  describe 'upload_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
