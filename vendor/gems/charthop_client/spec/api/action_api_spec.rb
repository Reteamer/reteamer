=begin
#ChartHop API

#REST API for ChartHop

OpenAPI spec version: V1.0.0
Contact: support@charthop.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.25

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::ActionApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ActionApi' do
  before do
    # run before each test
    @instance = SwaggerClient::ActionApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ActionApi' do
    it 'should create an instance of ActionApi' do
      expect(@instance).to be_instance_of(SwaggerClient::ActionApi)
    end
  end

  # unit tests for create_action
  # Create an action
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [CreateAction] :body Action data to create
  # @return [Action]
  describe 'create_action test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_action
  # Delete an action
  # 
  # @param org_id Org identifier (either id or slug)
  # @param action_id Action id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_action test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_actions
  # Return all actions in the organization paginated
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :from Action id to start paginating from
  # @option opts [Integer] :limit Number of results to return
  # @return [ResultsAction]
  describe 'find_actions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_action
  # Return a particular action by id
  # 
  # @param org_id Org identifier (either id or slug)
  # @param action_id Action id
  # @param [Hash] opts the optional parameters
  # @return [Action]
  describe 'get_action test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for run_action
  # Run an action - for testing
  # 
  # @param org_id Org identifier (either id or slug)
  # @param action_id Action id
  # @param [Hash] opts the optional parameters
  # @option opts [ActionRunRequest] :body 
  # @return [nil]
  describe 'run_action test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_action
  # Update an existing action
  # 
  # @param org_id Org identifier (either id or slug)
  # @param action_id Action id
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateAction] :body Action data to update
  # @return [nil]
  describe 'update_action test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
