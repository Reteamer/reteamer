=begin
#ChartHop API

#REST API for ChartHop

OpenAPI spec version: V1.0.0
Contact: support@charthop.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.25

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::ImportApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ImportApi' do
  before do
    # run before each test
    @instance = SwaggerClient::ImportApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ImportApi' do
    it 'should create an instance of ImportApi' do
      expect(@instance).to be_instance_of(SwaggerClient::ImportApi)
    end
  end

  # unit tests for import_data_csv
  # Import data from CSV file
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [File] :file 
  # @option opts [String] :scenario_id scenario id to import into
  # @option opts [BOOLEAN] :skip_errors whether to skip erroneous rows, or reject the entire upload if any are invalid (default)
  # @option opts [BOOLEAN] :upsert whether to create persons/jobs that are not matched
  # @option opts [BOOLEAN] :create_groups whether to create groups that are not matched
  # @option opts [BOOLEAN] :disable_sync_hire_date whether to disable adjusting dates of hires in cases where the start dates differ
  # @option opts [String] :update_types types of updates to apply (default all: title,comp,group,relationship,data,other)
  # @option opts [String] :notify_user_ids comma-separated list of user ids who should be notified when the import is complete
  # @option opts [String] :notify_app_name name of the app that should be listed in the notify
  # @option opts [BOOLEAN] :delta_upload run a delta sync?
  # @option opts [BOOLEAN] :validate_delta_upload run a delta sync in validation mode?
  # @option opts [Date] :default_change_date date of the changes - if not presented on the csv file
  # @option opts [BOOLEAN] :disable_overwrite_person disable overwriting changes to persons&#39; data -- only update data if the person field is null
  # @option opts [BOOLEAN] :import_dry_run import dry run
  # @option opts [BOOLEAN] :import_after_dry_run whether to automatically import if dry run succeeds
  # @option opts [String] :parent_process_id process id of parent process
  # @option opts [String] :import_source self identified source caller into this method
  # @return [Process]
  describe 'import_data_csv test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for import_data_csv_with_file_path
  # Import data from CSV file
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :file_path filePath
  # @option opts [String] :scenario_id scenario id to import into
  # @option opts [BOOLEAN] :skip_errors whether to skip erroneous rows, or reject the entire upload if any are invalid (default)
  # @option opts [BOOLEAN] :upsert whether to create persons/jobs that are not matched
  # @option opts [BOOLEAN] :create_groups whether to create groups that are not matched
  # @option opts [BOOLEAN] :disable_sync_hire_date whether to disable adjusting dates of hires in cases where the start dates differ
  # @option opts [String] :update_types types of updates to apply (default all: title,comp,group,relationship,data,other)
  # @option opts [String] :notify_user_ids comma-separated list of user ids who should be notified when the import is complete
  # @option opts [String] :notify_app_name name of the app that should be listed in the notify
  # @option opts [BOOLEAN] :delta_upload run a delta sync?
  # @option opts [BOOLEAN] :validate_delta_upload run a delta sync in validation mode?
  # @option opts [Date] :default_change_date date of the changes - if not presented on the csv file
  # @option opts [BOOLEAN] :disable_overwrite_person disable overwriting changes to persons&#39; data -- only update data if the person field is null
  # @option opts [BOOLEAN] :import_dry_run import dry run
  # @option opts [BOOLEAN] :import_after_dry_run whether to automatically import if dry run succeeds
  # @option opts [String] :parent_process_id process id of parent process
  # @option opts [String] :import_source self identified source caller into this method
  # @return [Process]
  describe 'import_data_csv_with_file_path test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for import_history_csv
  # Import history data from CSV file
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [File] :file 
  # @option opts [String] :scenario_id scenario id to import into
  # @option opts [BOOLEAN] :skip_errors whether to skip erroneous rows, or reject the entire upload if any are invalid (default)
  # @option opts [BOOLEAN] :create_groups whether to create groups that are not matched
  # @option opts [String] :notify_user_ids comma-separated list of user ids who should be notified when the import is complete
  # @option opts [String] :notify_app_name name of the app that should be listed in the notify
  # @return [Process]
  describe 'import_history_csv test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
