=begin
#ChartHop API

#REST API for ChartHop

OpenAPI spec version: V1.0.0
Contact: support@charthop.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.25

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::StockApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'StockApi' do
  before do
    # run before each test
    @instance = SwaggerClient::StockApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of StockApi' do
    it 'should create an instance of StockApi' do
      expect(@instance).to be_instance_of(SwaggerClient::StockApi)
    end
  end

  # unit tests for delete_stock_price
  # Delete a stock price
  # 
  # @param id Stock entry id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_stock_price test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_stock_prices
  # Return the history of stock prices
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :symbol Symbol to query
  # @option opts [String] :type Types of valuations to retrieve
  # @option opts [Date] :from Date to start from
  # @option opts [Integer] :limit Number of results to return
  # @return [ResultsStockPrice]
  describe 'find_stock_prices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_stock_price
  # Get a stock price as of a particular date
  # 
  # @param symbol Stock symbol
  # @param date Date to update information for
  # @param type Type of stock price to retrieve (for example &#39;public&#39;)
  # @param [Hash] opts the optional parameters
  # @return [StockPrice]
  describe 'get_stock_price test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upsert_stock
  # Upsert a stock price
  # 
  # @param symbol Stock symbol
  # @param date Date to update information for
  # @param type Type of stock price to upsert
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateStockPrice] :body Stock price data to create
  # @return [StockPrice]
  describe 'upsert_stock test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
