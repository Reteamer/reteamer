=begin
#ChartHop API

#REST API for ChartHop

OpenAPI spec version: V1.0.0
Contact: support@charthop.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.25

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::CategoryApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CategoryApi' do
  before do
    # run before each test
    @instance = SwaggerClient::CategoryApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CategoryApi' do
    it 'should create an instance of CategoryApi' do
      expect(@instance).to be_instance_of(SwaggerClient::CategoryApi)
    end
  end

  # unit tests for create_category
  # Create a category
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [CreateCategory] :body Category data to create
  # @return [Category]
  describe 'create_category test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_category
  # Delete a category
  # 
  # @param org_id Org identifier (either id or slug)
  # @param category_id Category id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_category test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_categories
  # Return categories that are available to the organization
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type (Optional) Return only built-in or custom categories
  # @option opts [BOOLEAN] :unsorted (Optional) Return categories array unsorted
  # @return [ResultsCategory]
  describe 'get_categories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_category
  # Return a particular category by id
  # 
  # @param org_id Org identifier (either id or slug)
  # @param category_id Category id
  # @param [Hash] opts the optional parameters
  # @return [Category]
  describe 'get_category test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_category
  # Update an existing category
  # 
  # @param org_id Org identifier (either id or slug)
  # @param category_id Category id
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateCategory] :body Category data to update
  # @return [nil]
  describe 'update_category test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
