=begin
#ChartHop API

#REST API for ChartHop

OpenAPI spec version: V1.0.0
Contact: support@charthop.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.25

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::CommentApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CommentApi' do
  before do
    # run before each test
    @instance = SwaggerClient::CommentApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CommentApi' do
    it 'should create an instance of CommentApi' do
      expect(@instance).to be_instance_of(SwaggerClient::CommentApi)
    end
  end

  # unit tests for create_comment
  # Post a comment
  # 
  # @param org_id Org identifier (either id or slug)
  # @param [Hash] opts the optional parameters
  # @option opts [CreateComment] :body Comment data to create
  # @return [Comment]
  describe 'create_comment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_comment
  # Delete a comment
  # 
  # @param org_id Org identifier (either id or slug)
  # @param comment_id Comment id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_comment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_comments
  # Return comments on a particular entity paginated
  # 
  # @param org_id Org identifier (either id or slug)
  # @param entity_id Entity id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :from Comment id to start paginating from
  # @option opts [Integer] :limit Number of results to return
  # @return [ResultsComment]
  describe 'find_comments test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_comment
  # Return a particular comment by id
  # 
  # @param org_id Org identifier (either id or slug)
  # @param comment_id Comment id
  # @param [Hash] opts the optional parameters
  # @return [Comment]
  describe 'get_comment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
