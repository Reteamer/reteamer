=begin
#ChartHop API

#REST API for ChartHop

OpenAPI spec version: V1.0.0
Contact: support@charthop.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.25

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::UserApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UserApi' do
  before do
    # run before each test
    @instance = SwaggerClient::UserApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UserApi' do
    it 'should create an instance of UserApi' do
      expect(@instance).to be_instance_of(SwaggerClient::UserApi)
    end
  end

  # unit tests for change_password
  # Change a user&#39;s password, or switch a user to SSO
  # 
  # @param user_id User id
  # @param [Hash] opts the optional parameters
  # @option opts [ChangePasswordRequest] :body 
  # @return [nil]
  describe 'change_password test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_user
  # Create a new user
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateUser] :body User data to create
  # @return [User]
  describe 'create_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_users
  # Return all users within an org or across orgs
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :org_id Org id to search within
  # @option opts [String] :from User id to start from
  # @option opts [Integer] :limit Number of results to return
  # @option opts [String] :sort Sort by
  # @return [ResultsUser]
  describe 'find_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_me
  # Return the currently logged in user
  # 
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'get_me test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_me_view
  # Return the user the user is currently viewing as
  # 
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'get_me_view test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user
  # Return a particular user by id
  # 
  # @param user_id User id
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'get_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_by_person_id
  # Return a particular user by its corresponding person id
  # 
  # @param person_id Person id to fetch user for
  # @param [Hash] opts the optional parameters
  # @option opts [String] :org_id Org id to search within
  # @return [User]
  describe 'get_user_by_person_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for revoke_user_token
  # Revoke a user&#39;s access token
  # 
  # @param user_id User id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'revoke_user_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_reset_email
  # Send a password reset email
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [EmailRequest] :body User email address
  # @return [nil]
  describe 'send_reset_email test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for signup_user
  # Sign up for a new ChartHop account
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [SignupRequest] :body Signup information
  # @return [nil]
  describe 'signup_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user
  # Update an existing user
  # 
  # @param user_id User id
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateUser] :body User data to update
  # @return [nil]
  describe 'update_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
