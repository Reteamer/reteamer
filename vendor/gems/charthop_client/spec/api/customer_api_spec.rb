=begin
#ChartHop API

#REST API for ChartHop

OpenAPI spec version: V1.0.0
Contact: support@charthop.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.25

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::CustomerApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CustomerApi' do
  before do
    # run before each test
    @instance = SwaggerClient::CustomerApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CustomerApi' do
    it 'should create an instance of CustomerApi' do
      expect(@instance).to be_instance_of(SwaggerClient::CustomerApi)
    end
  end

  # unit tests for create_customer
  # Create a new customer
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateCustomer] :body Customer data to create
  # @return [Customer]
  describe 'create_customer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_customers
  # Return all visible customers, paginated by name
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :from Customer id to start from
  # @option opts [Integer] :limit Number of results to return
  # @option opts [String] :status Customer.Status. (ACTIVE/INACTIVE/TRAIL)
  # @return [ResultsCustomer]
  describe 'find_customers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_charthop_subscription
  # Returns information about the Charthop subscription for the given customer
  # 
  # @param customer_id Customer id
  # @param [Hash] opts the optional parameters
  # @return [Subscription]
  describe 'get_charthop_subscription test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_customer
  # Return a particular customer by id
  # 
  # @param customer_id Customer id
  # @param [Hash] opts the optional parameters
  # @return [Customer]
  describe 'get_customer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_customer_invoices
  # Returns a list of all the invoices for the given customer
  # 
  # @param customer_id Customer id
  # @param [Hash] opts the optional parameters
  # @return [InvoiceResponse]
  describe 'get_customer_invoices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_customer
  # Update an existing customer
  # 
  # @param customer_id Customer id
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateCustomer] :body Customer data to update
  # @return [nil]
  describe 'update_customer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_subscription
  # @param customer_id Customer id
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateSubscription] :body Subscription data to update
  # @return [nil]
  describe 'update_subscription test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
