%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: avatars_square.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Irie
%%CreationDate: 26/06/2015
%%BoundingBox: 0 0 878 818
%%HiResBoundingBox: 0 0 877.7706 817.7354
%%CropBox: 0 0 877.7706 817.7354
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   xmp:MetadataDate="2015-06-26T20:31:06-04:00"
   xmp:ModifyDate="2015-06-26T15:01:50-04:00"
   xmp:CreateDate="2015-06-26T15:01:49-04:00"
   xmp:CreatorTool="Adobe Illustrator CS6 (Macintosh)"
   xmpMM:InstanceID="xmp.iid:B03DF9B2DC24681180838EC072CB26AF"
   xmpMM:DocumentID="xmp.did:BBD63BD6412268118083B38BE8CC3A7B"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 10.01">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Cartoon Avatars</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Irina Mir</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Set of diverse avatars. Different nationalities, clothes and hair styles. Cute and simple flat cartoon style.</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>head</rdf:li>
     <rdf:li>face</rdf:li>
     <rdf:li>avatar</rdf:li>
     <rdf:li>people</rdf:li>
     <rdf:li>business</rdf:li>
     <rdf:li>man</rdf:li>
     <rdf:li>woman</rdf:li>
     <rdf:li>person</rdf:li>
     <rdf:li>happy</rdf:li>
     <rdf:li>diverse</rdf:li>
     <rdf:li>diversity</rdf:li>
     <rdf:li>ethnic</rdf:li>
     <rdf:li>group</rdf:li>
     <rdf:li>businessman</rdf:li>
     <rdf:li>professional</rdf:li>
     <rdf:li>work</rdf:li>
     <rdf:li>cheerful</rdf:li>
     <rdf:li>businesspeople</rdf:li>
     <rdf:li>young</rdf:li>
     <rdf:li>suit</rdf:li>
     <rdf:li>smart</rdf:li>
     <rdf:li>caucasian</rdf:li>
     <rdf:li>staff</rdf:li>
     <rdf:li>colleagues</rdf:li>
     <rdf:li>company</rdf:li>
     <rdf:li>african american</rdf:li>
     <rdf:li>formal</rdf:li>
     <rdf:li>casual</rdf:li>
     <rdf:li>black</rdf:li>
     <rdf:li>hispanic</rdf:li>
     <rdf:li>hindu</rdf:li>
     <rdf:li>asian</rdf:li>
     <rdf:li>turban</rdf:li>
     <rdf:li>beard</rdf:li>
     <rdf:li>race</rdf:li>
     <rdf:li>nationality</rdf:li>
     <rdf:li>cartoon</rdf:li>
     <rdf:li>flat</rdf:li>
     <rdf:li>cute</rdf:li>
     <rdf:li>male</rdf:li>
     <rdf:li>female</rdf:li>
     <rdf:li>glasses</rdf:li>
     <rdf:li>set</rdf:li>
     <rdf:li>collection</rdf:li>
     <rdf:li>profile picture</rdf:li>
     <rdf:li>user</rdf:li>
     <rdf:li>interface</rdf:li>
     <rdf:li>web</rdf:li>
     <rdf:li>vector</rdf:li>
     <rdf:li>illustration</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="240"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA8AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqh7/&#xA;AFHT9OtXu7+5itLWMVknndY41+bMQBgJpIFsA1P/AJyD/K2xmMI1N7tlNGa2gkdB/syFU/7EnKzm&#xA;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"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:1E09D30E42236811808399B78B0EE520"
    stRef:documentID="xmp.did:E2AD40D28B206811808387323CE3A681"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:15367B94022168118083A697D000D963"
      stEvt:when="2015-04-10T20:20:44-03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:E73627BCCD2168118083A697D000D963"
      stEvt:when="2015-04-13T20:00:56-03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:007134FF642968118083F964DA86D81D"
      stEvt:when="2015-04-13T20:10:31-03:00"
      stEvt:softwareAgent="Adobe Bridge CS6 (Macintosh)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:B9BEBAF1672968118083F964DA86D81D"
      stEvt:when="2015-04-13T20:12:24-03:00"
      stEvt:softwareAgent="Adobe Bridge CS6 (Macintosh)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:E93627BCCD2168118083A697D000D963"
      stEvt:when="2015-04-13T20:17:06-03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:01801174072068118083BBBBED5F0CD0"
      stEvt:when="2015-04-13T20:34:23-03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:F77F117407206811822AE0679C256E31"
      stEvt:when="2015-04-13T21:09:54-03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:F87F117407206811822AE0679C256E31"
      stEvt:when="2015-04-13T21:10:47-03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:02801174072068118083EA55D007C936"
      stEvt:when="2015-04-13T21:13:46-03:00"
      stEvt:softwareAgent="Adobe Bridge CS6 (Macintosh)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:06801174072068118083EA55D007C936"
      stEvt:when="2015-04-13T21:14:19-03:00"
      stEvt:softwareAgent="Adobe Bridge CS6 (Macintosh)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:213EC78D59206811822A8F92A716DD05"
      stEvt:when="2015-05-10T13:27:48-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:253EC78D59206811822A8F92A716DD05"
      stEvt:when="2015-05-10T15:33:43-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:FF508D274C20681180839F70521555CB"
      stEvt:when="2015-05-12T17:37:23-04:00"
      stEvt:softwareAgent="Adobe Bridge CS6 (Macintosh)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:01518D274C20681180839F70521555CB"
      stEvt:when="2015-05-12T17:37:54-04:00"
      stEvt:softwareAgent="Adobe Bridge CS6 (Macintosh)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:DFAD40D28B206811808387323CE3A681"
      stEvt:when="2015-06-04T13:52:03-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:E2AD40D28B206811808387323CE3A681"
      stEvt:when="2015-06-04T14:46-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1E09D30E42236811808399B78B0EE520"
      stEvt:when="2015-06-04T17:00:44-04:00"
      stEvt:softwareAgent="Adobe Bridge CS6 (Macintosh)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:BBD63BD6412268118083B38BE8CC3A7B"
      stEvt:when="2015-06-26T15:01:50-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:B03DF9B2DC24681180838EC072CB26AF"
      stEvt:when="2015-06-26T20:31:06-04:00"
      stEvt:softwareAgent="Adobe Bridge CS6 (Macintosh)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="877.770508"
    stDim:h="817.735352"
    stDim:unit="Points"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="35"
         xmpG:green="31"
         xmpG:blue="32"/>
        <rdf:li
         xmpG:swatchName="R=51 G=25 B=7"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="51"
         xmpG:green="24"
         xmpG:blue="7"/>
        <rdf:li
         xmpG:swatchName="R=134 G=91 B=47"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="133"
         xmpG:green="91"
         xmpG:blue="47"/>
        <rdf:li
         xmpG:swatchName="R=255 G=204 B=153"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="255"
         xmpG:green="204"
         xmpG:blue="153"/>
        <rdf:li
         xmpG:swatchName="R=60 G=49 B=63"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="59"
         xmpG:green="49"
         xmpG:blue="63"/>
        <rdf:li
         xmpG:swatchName="R=84 G=72 B=90"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="84"
         xmpG:green="72"
         xmpG:blue="89"/>
        <rdf:li
         xmpG:swatchName="R=176 G=173 B=178"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="175"
         xmpG:green="172"
         xmpG:blue="177"/>
        <rdf:li
         xmpG:swatchName="R=58 G=30 B=10"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="58"
         xmpG:green="29"
         xmpG:blue="10"/>
        <rdf:li
         xmpG:swatchName="R=186 G=134 B=99"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="186"
         xmpG:green="133"
         xmpG:blue="98"/>
        <rdf:li
         xmpG:swatchName="R=79 G=47 B=25"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="79"
         xmpG:green="47"
         xmpG:blue="24"/>
        <rdf:li
         xmpG:swatchName="R=50 G=24 B=6"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="49"
         xmpG:green="24"
         xmpG:blue="5"/>
        <rdf:li
         xmpG:swatchName="R=86 G=50 B=23"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="86"
         xmpG:green="49"
         xmpG:blue="22"/>
        <rdf:li
         xmpG:swatchName="R=89 G=119 B=42"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="89"
         xmpG:green="119"
         xmpG:blue="42"/>
        <rdf:li
         xmpG:swatchName="R=70 G=89 B=28"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="70"
         xmpG:green="89"
         xmpG:blue="28"/>
        <rdf:li
         xmpG:swatchName="R=224 G=170 B=121"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="223"
         xmpG:green="170"
         xmpG:blue="121"/>
        <rdf:li
         xmpG:swatchName="R=71 G=44 B=24"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="70"
         xmpG:green="43"
         xmpG:blue="24"/>
        <rdf:li
         xmpG:swatchName="R=140 G=116 B=84"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="140"
         xmpG:green="116"
         xmpG:blue="84"/>
        <rdf:li
         xmpG:swatchName="R=173 G=142 B=108"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="172"
         xmpG:green="142"
         xmpG:blue="107"/>
        <rdf:li
         xmpG:swatchName="R=163 G=110 B=70"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="163"
         xmpG:green="110"
         xmpG:blue="70"/>
        <rdf:li
         xmpG:swatchName="R=107 G=70 B=45"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="107"
         xmpG:green="70"
         xmpG:blue="45"/>
        <rdf:li
         xmpG:swatchName="R=137 G=99 B=73"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="137"
         xmpG:green="98"
         xmpG:blue="73"/>
        <rdf:li
         xmpG:swatchName="R=165 G=121 B=68"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="165"
         xmpG:green="121"
         xmpG:blue="68"/>
        <rdf:li
         xmpG:swatchName="R=193 G=148 B=76"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="193"
         xmpG:green="147"
         xmpG:blue="75"/>
        <rdf:li
         xmpG:swatchName="R=255 G=182 B=159"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="255"
         xmpG:green="182"
         xmpG:blue="158"/>
        <rdf:li
         xmpG:swatchName="R=198 G=142 B=117"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="198"
         xmpG:green="142"
         xmpG:blue="117"/>
        <rdf:li
         xmpG:swatchName="R=255 G=212 B=174"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="255"
         xmpG:green="212"
         xmpG:blue="174"/>
        <rdf:li
         xmpG:swatchName="R=216 G=109 B=37"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="216"
         xmpG:green="109"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=170 G=83 B=53"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="170"
         xmpG:green="82"
         xmpG:blue="52"/>
        <rdf:li
         xmpG:swatchName="R=214 G=114 B=148"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="214"
         xmpG:green="114"
         xmpG:blue="147"/>
        <rdf:li
         xmpG:swatchName="R=252 G=176 B=149"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="251"
         xmpG:green="175"
         xmpG:blue="149"/>
        <rdf:li
         xmpG:swatchName="R=255 G=156 B=189"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="255"
         xmpG:green="156"
         xmpG:blue="188"/>
        <rdf:li
         xmpG:swatchName="R=221 G=148 B=122"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="221"
         xmpG:green="147"
         xmpG:blue="121"/>
        <rdf:li
         xmpG:swatchName="R=142 G=95 B=53"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="142"
         xmpG:green="94"
         xmpG:blue="52"/>
        <rdf:li
         xmpG:swatchName="R=175 G=103 B=81"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="175"
         xmpG:green="103"
         xmpG:blue="80"/>
        <rdf:li
         xmpG:swatchName="R=45 G=126 B=158"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="45"
         xmpG:green="126"
         xmpG:blue="158"/>
        <rdf:li
         xmpG:swatchName="R=30 G=94 B=139"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="29"
         xmpG:green="93"
         xmpG:blue="138"/>
        <rdf:li
         xmpG:swatchName="R=19 G=71 B=104"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="19"
         xmpG:green="70"
         xmpG:blue="103"/>
        <rdf:li
         xmpG:swatchName="R=243 G=180 B=62"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="242"
         xmpG:green="179"
         xmpG:blue="61"/>
        <rdf:li
         xmpG:swatchName="R=198 G=59 B=33"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="198"
         xmpG:green="59"
         xmpG:blue="33"/>
        <rdf:li
         xmpG:swatchName="R=163 G=38 B=22"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="163"
         xmpG:green="38"
         xmpG:blue="22"/>
        <rdf:li
         xmpG:swatchName="R=150 G=34 B=75"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="149"
         xmpG:green="33"
         xmpG:blue="75"/>
        <rdf:li
         xmpG:swatchName="R=57 G=159 B=133"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="56"
         xmpG:green="158"
         xmpG:blue="133"/>
        <rdf:li
         xmpG:swatchName="R=194 G=151 B=109"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="193"
         xmpG:green="151"
         xmpG:blue="109"/>
        <rdf:li
         xmpG:swatchName="R=181 G=172 B=158"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="181"
         xmpG:green="172"
         xmpG:blue="158"/>
        <rdf:li
         xmpG:swatchName="R=153 G=130 B=110"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="153"
         xmpG:green="130"
         xmpG:blue="110"/>
        <rdf:li
         xmpG:swatchName="R=215 G=188 B=166"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="214"
         xmpG:green="188"
         xmpG:blue="165"/>
        <rdf:li
         xmpG:swatchName="R=76 G=47 B=25"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="75"
         xmpG:green="47"
         xmpG:blue="24"/>
        <rdf:li
         xmpG:swatchName="R=109 G=74 B=43"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="109"
         xmpG:green="73"
         xmpG:blue="42"/>
        <rdf:li
         xmpG:swatchName="R=124 G=124 B=137"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="124"
         xmpG:green="124"
         xmpG:blue="137"/>
        <rdf:li
         xmpG:swatchName="R=96 G=95 B=109"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="96"
         xmpG:green="94"
         xmpG:blue="109"/>
        <rdf:li
         xmpG:swatchName="R=104 G=75 B=117"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="103"
         xmpG:green="75"
         xmpG:blue="117"/>
        <rdf:li
         xmpG:swatchName="R=242 G=186 B=148"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="242"
         xmpG:green="186"
         xmpG:blue="147"/>
        <rdf:li
         xmpG:swatchName="R=244 G=205 B=152"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="244"
         xmpG:green="205"
         xmpG:blue="151"/>
        <rdf:li
         xmpG:swatchName="R=232 G=172 B=93"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="232"
         xmpG:green="172"
         xmpG:blue="93"/>
        <rdf:li
         xmpG:swatchName="R=28 G=97 B=140"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="28"
         xmpG:green="96"
         xmpG:blue="140"/>
        <rdf:li
         xmpG:swatchName="R=170 G=33 B=75"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="170"
         xmpG:green="33"
         xmpG:blue="75"/>
        <rdf:li
         xmpG:swatchName="R=137 G=130 B=126"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="137"
         xmpG:green="130"
         xmpG:blue="126"/>
        <rdf:li
         xmpG:swatchName="R=109 G=102 B=98"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="109"
         xmpG:green="102"
         xmpG:blue="98"/>
        <rdf:li
         xmpG:swatchName="R=198 G=107 B=79"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="198"
         xmpG:green="107"
         xmpG:blue="79"/>
        <rdf:li
         xmpG:swatchName="R=193 G=48 B=101"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="193"
         xmpG:green="48"
         xmpG:blue="101"/>
        <rdf:li
         xmpG:swatchName="R=156 G=214 B=229"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="156"
         xmpG:green="214"
         xmpG:blue="229"/>
        <rdf:li
         xmpG:swatchName="R=95 G=164 B=183"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="95"
         xmpG:green="164"
         xmpG:blue="183"/>
        <rdf:li
         xmpG:swatchName="R=107 G=50 B=11"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="107"
         xmpG:green="50"
         xmpG:blue="11"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                             
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -817.735 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 817.735 li
877.771 817.735 li
877.771 0 li
cp
clp
877.771 817.735 mo
0 817.735 li
0 0 li
877.771 0 li
877.771 817.735 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
488.368 137.635 mo
488.866 137.151 496.577 131.696 496.431 133.481 cv
496.124 137.282 499.62 134.307 501.448 135.112 cv
503.339 135.946 504.737 139.143 506.839 140.374 cv
510.286 142.393 518.157 145.698 521.456 141.77 cv
522.786 145.735 528.194 147.153 530.948 143.821 cv
536.056 147.514 541.923 142.708 541.29 137.061 cv
544.468 141.079 554.015 134.461 549.888 128.577 cv
555.31 128.764 556.739 120.754 551.839 119.065 cv
555.739 115.938 553.386 108.026 548.247 107.89 cv
550.931 104.741 548.021 99.2114 544.14 98.8628 cv
545.774 95.5239 542.964 93.0981 539.626 93.5259 cv
541.224 89.938 540.21 82.7739 530.86 85.1157 cv
536.497 75.7173 520.425 67.271 512.964 71.7134 cv
510.987 63.3325 499.048 65.1626 496.903 70.0728 cv
495.185 67.4868 489.011 67.0024 489.456 71.1421 cv
484.185 66.4575 468.536 72.5405 473.478 80.0044 cv
462.225 80.4595 457.034 91.9087 461.577 95.188 cv
454.04 94.0952 452.458 102.625 455.833 107.502 cv
449.626 107.106 447.499 118.419 452.438 121.219 cv
448.388 128.016 453.209 131.288 456.231 130.629 cv
453.709 134.764 458.157 142.254 463.59 138.897 cv
462.03 146.924 470.669 147.801 472.187 144.233 cv
475.692 152.112 485.458 140.458 488.368 137.635 cv
cp
.2 .098039 .027451 rgb
f
530.712 92.9204 mo
524.866 84.6353 518.868 84.3784 509.194 83.9771 cv
498.679 83.9771 li
489.003 84.3784 483.003 84.6353 477.161 92.9204 cv
471.313 101.214 473.528 103.364 473.989 113.368 cv
474.339 120.926 469.821 115.624 472.948 136.645 cv
476.073 157.667 494.329 164.409 503.935 164.409 cv
513.542 164.409 530.429 158.772 534.927 136.645 cv
539.425 114.518 533.532 120.926 533.884 113.368 cv
534.343 103.364 536.558 101.214 530.712 92.9204 cv
cp
.556863 .372549 .207843 rgb
f
509.825 178.797 mo
498.044 178.797 li
498.044 161.551 li
509.825 161.551 li
509.825 178.797 li
cp
f
503.458 153.862 mo
500.015 153.862 496.017 153.016 493.827 150.596 cv
493.384 150.106 493.421 149.348 493.911 148.905 cv
494.403 148.461 495.159 148.499 495.604 148.989 cv
497.185 150.739 500.747 151.7 504.694 151.426 cv
507.731 151.219 510.312 150.292 511.114 149.118 cv
511.487 148.571 512.231 148.43 512.78 148.805 cv
513.325 149.178 513.466 149.922 513.091 150.469 cv
511.841 152.297 508.763 153.549 504.854 153.815 cv
504.405 153.846 503.937 153.862 503.458 153.862 cv
cp
.337255 .196078 .090196 rgb
f
490.968 131.133 mo
490.968 133.92 489.063 136.178 486.716 136.178 cv
484.37 136.178 482.464 133.92 482.464 131.133 cv
482.464 128.348 484.37 126.086 486.716 126.086 cv
489.063 126.086 490.968 128.348 490.968 131.133 cv
cp
.227451 .117647 .039216 rgb
f
492.081 122.17 mo
491.722 122.17 491.366 122.022 491.11 121.734 cv
489.907 120.376 488.284 120.069 487.132 120.047 cv
485.323 120.018 483.429 120.708 482.423 121.767 cv
481.929 122.286 481.108 122.307 480.591 121.814 cv
480.071 121.321 480.05 120.501 480.544 119.982 cv
482.063 118.379 484.618 117.418 487.177 117.456 cv
489.538 117.497 491.624 118.405 493.05 120.014 cv
493.524 120.551 493.476 121.37 492.94 121.844 cv
492.692 122.064 492.386 122.17 492.081 122.17 cv
cp
f
516.847 122.026 mo
516.565 122.026 516.284 121.936 516.048 121.75 cv
515.485 121.307 515.386 120.493 515.827 119.93 cv
516.919 118.54 518.979 117.611 521.206 117.503 cv
523.556 117.395 525.718 118.219 527.259 119.836 cv
527.753 120.354 527.733 121.174 527.216 121.668 cv
526.696 122.163 525.876 122.143 525.384 121.625 cv
524.015 120.188 522.255 120.043 521.329 120.093 cv
519.663 120.172 518.366 120.894 517.868 121.531 cv
517.612 121.856 517.231 122.026 516.847 122.026 cv
cp
f
525.353 131.133 mo
525.353 133.92 523.446 136.18 521.101 136.18 cv
518.753 136.18 516.847 133.92 516.847 131.133 cv
516.847 128.346 518.753 126.086 521.101 126.086 cv
523.446 126.086 525.353 128.346 525.353 131.133 cv
cp
f
489.931 142.147 mo
489.931 144.438 487.243 146.295 483.925 146.295 cv
480.608 146.295 477.923 144.438 477.923 142.147 cv
477.923 139.856 480.608 137.999 483.925 137.999 cv
487.243 137.999 489.931 139.856 489.931 142.147 cv
cp
.686275 .403922 .317647 rgb
f
529.894 142.147 mo
529.894 144.438 527.206 146.295 523.888 146.295 cv
520.573 146.295 517.886 144.438 517.886 142.147 cv
517.886 139.856 520.573 137.999 523.888 137.999 cv
527.206 137.999 529.894 139.856 529.894 142.147 cv
cp
f
512.647 170.391 mo
509.825 167.536 li
509.825 167.536 505.089 170.922 503.837 171.325 cv
502.583 170.922 498.044 167.536 498.044 167.536 cv
495.376 170.145 li
490.917 172.7 li
492.558 181.977 516.497 182.454 517.87 172.952 cv
512.647 170.391 li
cp
1 1 1 rgb
f
498.173 178.725 mo
495.247 170.999 li
495.116 170.655 495.29 170.27 495.636 170.139 cv
495.979 170.01 496.364 170.184 496.495 170.526 cv
498.685 176.305 li
503.36 171.553 li
503.618 171.292 504.042 171.288 504.304 171.545 cv
504.565 171.805 504.571 172.227 504.312 172.491 cv
498.173 178.725 li
cp
.690196 .678431 .698039 rgb
f
509.448 178.676 mo
503.36 172.491 li
503.103 172.227 503.106 171.805 503.368 171.545 cv
503.63 171.288 504.054 171.292 504.312 171.553 cv
509.036 176.354 li
511.563 170.75 li
511.716 170.415 512.112 170.264 512.448 170.415 cv
512.784 170.567 512.931 170.961 512.78 171.299 cv
509.448 178.676 li
cp
f
521.239 174.893 mo
520.394 174.202 519.392 173.54 518.087 172.809 cv
517.915 172.711 517.692 172.743 517.552 172.887 cv
514.323 176.19 509.019 178.241 503.704 178.241 cv
498.298 178.241 493.886 176.184 491.282 172.446 cv
491.153 172.262 490.909 172.202 490.712 172.307 cv
489.321 173.042 488.247 173.694 487.333 174.362 cv
487.233 174.434 487.167 174.543 487.153 174.667 cv
487.138 174.788 487.175 174.911 487.253 175.006 cv
491.216 179.752 496.347 182.477 503.837 182.477 cv
503.837 182.477 514.341 183.227 521.29 175.536 cv
521.37 175.444 521.411 175.325 521.403 175.204 cv
521.394 175.083 521.335 174.969 521.239 174.893 cv
cp
.27451 .34902 .109804 rgb
f
544.353 109.987 mo
543.976 103.088 538.116 93.5581 532.495 90.2153 cv
531.88 89.8491 530.952 89.5337 529.901 89.3237 cv
529.081 82.9712 519.948 76.3853 518.769 82.8481 cv
520.198 75.0161 503.06 73.6772 501.849 81.5874 cv
496.409 76.0825 482.022 77.6978 481.483 85.686 cv
473.497 80.77 466.452 90.7153 463.672 97.0005 cv
461.467 101.987 459.831 108.163 461.163 113.602 cv
461.68 115.715 463.465 115.016 465.346 116.209 cv
468.007 117.895 468.948 120.094 471.839 120.986 cv
477.923 122.862 482.464 115.877 483.763 111.682 cv
483.763 111.682 492.081 114.547 495.942 107.043 cv
501.849 112.219 510.077 103.406 509.593 101.825 cv
513.769 106.569 518.655 103.378 523.155 99.0835 cv
521.276 105.734 525.353 109.059 527.991 108.332 cv
524.851 112.219 528.983 118.691 533.521 116.375 cv
531.36 121.872 536.548 129.184 540.671 126.086 cv
544.784 122.995 544.612 114.761 544.353 109.987 cv
cp
.2 .098039 .027451 rgb
f
526.567 183.512 mo
524.509 177.104 523.397 175.782 518.087 172.809 cv
517.915 172.711 517.692 172.743 517.552 172.887 cv
514.323 176.19 509.019 178.241 503.704 178.241 cv
498.298 178.241 493.886 176.184 491.282 172.446 cv
491.153 172.262 490.909 172.202 490.71 172.307 cv
484.751 175.461 483.536 176.567 481.304 183.512 cv
526.567 183.512 li
cp
.34902 .466667 .164706 rgb
f
136.847 175.284 mo
136.847 175.284 121.308 178.956 120.328 179.551 cv
120.226 179.505 120.435 179.544 120.328 179.551 cv
103.252 175.401 li
95.3447 178.099 90.4468 180.196 87.374 183.441 cv
153.06 183.441 li
149.945 180.155 144.945 178.039 136.847 175.284 cv
cp
.235294 .192157 .247059 rgb
f
139.291 133.21 mo
138.233 139.225 141.8 144.233 147.26 145.313 cv
152.721 146.393 158.002 143.133 159.059 137.118 cv
160.117 131.103 156.55 125.352 151.09 124.271 cv
145.631 123.192 140.349 127.194 139.291 133.21 cv
cp
1 .8 .6 rgb
f
101.197 133.21 mo
102.255 139.225 98.689 144.233 93.228 145.313 cv
87.7681 146.393 82.4868 143.133 81.4307 137.118 cv
80.3721 131.103 83.939 125.352 89.3989 124.271 cv
94.8574 123.192 100.14 127.194 101.197 133.21 cv
cp
f
147.49 92.688 mo
142.158 85.4463 133.847 80.6904 125.02 80.3398 cv
125.019 80.3398 124.846 80.3325 124.563 80.3213 cv
124.573 79.9761 li
124.573 79.9761 122.433 80.0605 120.224 80.1484 cv
118.014 80.0605 115.875 79.9761 115.875 79.9761 cv
115.884 80.3213 li
115.601 80.3325 115.428 80.3398 115.426 80.3398 cv
106.6 80.6904 98.2881 85.4463 92.9575 92.688 cv
87.623 99.9365 86.9136 109.066 87.334 117.81 cv
87.6519 124.417 88.8213 135.082 89.1494 141.688 cv
94.5029 161.716 107.823 165.138 120.224 165.138 cv
132.625 165.138 146.388 161.716 151.297 141.688 cv
151.625 135.082 152.794 124.417 153.113 117.81 cv
153.532 109.066 152.824 99.9365 147.49 92.688 cv
cp
f
128.851 181.23 mo
111.593 181.23 li
111.593 160.099 li
128.851 160.099 li
128.851 181.23 li
cp
f
115.891 179.393 mo
119.674 176.565 li
119.64 176.537 li
119.358 176.307 119.316 175.891 119.546 175.608 cv
119.667 175.461 119.837 175.382 120.014 175.37 cv
111.593 170.151 li
109.72 171.919 li
110.283 174.211 li
107.517 183.441 li
108.364 183.509 118.262 183.441 118.262 183.441 cv
115.891 179.393 li
cp
1 1 1 rgb
f
124.097 180.179 mo
119.674 176.565 li
115.891 179.393 li
118.262 183.441 li
118.262 183.441 119.166 183.441 120.213 183.441 cv
121.261 183.441 122.164 183.441 122.164 183.441 cv
124.097 180.179 li
cp
.235294 .192157 .247059 rgb
f
111.429 183.441 mo
111.238 183.441 111.048 183.601 110.917 183.441 cv
110.687 183.158 110.728 182.796 111.011 182.565 cv
119.64 175.515 li
119.922 175.282 120.339 175.325 120.57 175.608 cv
120.8 175.891 120.758 176.307 120.476 176.537 cv
111.847 183.441 li
111.724 183.542 111.576 183.441 111.429 183.441 cv
cp
.690196 .678431 .698039 rgb
f
107.337 130.585 mo
107.337 133.181 105.564 135.286 103.375 135.286 cv
101.188 135.286 99.4131 133.181 99.4131 130.585 cv
99.4131 127.987 101.188 125.882 103.375 125.882 cv
105.564 125.882 107.337 127.987 107.337 130.585 cv
cp
.227451 .117647 .039216 rgb
f
141.381 130.585 mo
141.381 133.181 139.608 135.286 137.419 135.286 cv
135.232 135.286 133.457 133.181 133.457 130.585 cv
133.457 127.987 135.232 125.882 137.419 125.882 cv
139.608 125.882 141.381 127.987 141.381 130.585 cv
cp
f
97.835 121.955 mo
97.5088 121.955 97.1816 121.835 96.9263 121.593 cv
96.3975 121.091 96.3755 120.255 96.8774 119.726 cv
99.1426 117.339 105.774 115.862 109.667 118.552 cv
110.267 118.966 110.417 119.789 110.003 120.39 cv
109.587 120.989 108.766 121.14 108.166 120.726 cv
105.324 118.763 100.206 120.056 98.793 121.544 cv
98.5337 121.817 98.1851 121.955 97.835 121.955 cv
cp
f
143.228 122.065 mo
142.879 122.065 142.532 121.929 142.272 121.655 cv
140.249 119.532 135.423 119.591 132.533 121.774 cv
131.951 122.214 131.123 122.099 130.683 121.517 cv
130.244 120.935 130.359 120.106 130.941 119.667 cv
134.923 116.659 141.236 116.739 144.185 119.834 cv
144.687 120.362 144.667 121.198 144.139 121.701 cv
143.883 121.944 143.556 122.065 143.228 122.065 cv
cp
f
120.453 155.024 mo
117.013 155.024 113.142 154.128 110.873 151.886 cv
110.353 151.374 110.349 150.537 110.861 150.019 cv
111.375 149.499 112.21 149.494 112.729 150.007 cv
114.625 151.88 118.843 152.81 122.765 152.218 cv
125.387 151.821 127.381 150.784 128.098 149.442 cv
128.443 148.8 129.244 148.558 129.886 148.901 cv
130.529 149.245 130.771 150.046 130.427 150.688 cv
129.286 152.823 126.705 154.293 123.16 154.829 cv
122.318 154.956 121.402 155.024 120.453 155.024 cv
cp
.729412 .52549 .388235 rgb
f
89.2803 125.359 mo
89.5239 120.516 88.5137 107.862 94.2275 105.582 cv
96.7363 104.581 101.648 105.627 104.16 105.872 cv
113.241 106.759 124.868 106.983 133.976 106.399 cv
138.258 106.124 144.454 105 146.47 105.275 cv
151.959 106.025 151.275 116.13 151.323 120.637 cv
151.345 122.721 151.323 124.707 151.299 126.792 cv
151.284 128.015 151.289 129.238 151.266 130.46 cv
151.257 130.957 151.295 132.292 151.979 132.215 cv
152.744 132.127 153.023 129.458 153.139 128.891 cv
154.043 124.563 154.477 119.821 155.652 115.612 cv
157.58 108.704 159.048 98.4468 156.556 92.7202 cv
155.845 91.082 151.804 86.0278 147.791 86.3359 cv
151.811 78.3926 143.813 74.2036 137.31 73.9399 cv
126.81 73.5127 118.148 75.897 108.341 79.1919 cv
102.905 81.0181 98.6841 83.2505 94.0513 86.7974 cv
90.0532 89.8569 87.9688 92.4941 86.7617 97.2739 cv
84.1904 107.457 85.9868 119.042 87.4771 129.261 cv
87.6274 130.291 87.7656 131.348 88.0269 132.358 cv
88.5967 134.56 89.3906 132.988 89.3657 131.618 cv
89.3286 129.526 89.1748 127.454 89.2803 125.359 cv
cp
.309804 .184314 .098039 rgb
f
124.097 180.179 mo
122.164 183.441 li
127.626 183.441 li
124.097 180.179 li
cp
1 1 1 rgb
f
127.98 181.646 mo
130.034 173.407 li
130.308 171.866 li
130.308 171.866 128.726 170.108 128.851 170.151 cv
128.968 170.191 121.308 174.841 120.328 175.436 cv
120.378 175.459 120.431 175.478 120.476 175.515 cv
127.98 181.646 li
cp
f
119.546 175.608 mo
119.316 175.891 119.358 176.307 119.64 176.537 cv
119.674 176.565 li
124.097 180.179 li
127.626 183.441 li
127.98 181.646 li
120.476 175.515 li
120.431 175.478 120.378 175.459 120.328 175.436 cv
120.226 175.39 120.122 175.363 120.014 175.37 cv
119.837 175.382 119.667 175.461 119.546 175.608 cv
cp
.690196 .678431 .698039 rgb
f
109.72 171.919 mo
107.804 172.624 li
107.802 172.625 107.795 172.625 107.793 172.626 cv
103.62 174.168 li
103.507 174.2 103.421 174.29 103.397 174.404 cv
103.252 175.401 li
102.376 183.441 li
102.35 183.568 112.658 183.441 112.658 183.441 cv
110.283 174.211 li
109.72 171.919 li
cp
.329412 .282353 .352941 rgb
f
136.847 175.284 mo
136.718 174.404 li
136.695 174.29 136.609 174.2 136.497 174.168 cv
132.323 172.626 li
132.315 172.623 132.287 172.622 132.271 172.622 cv
130.308 171.866 li
130.034 173.407 li
127.98 181.646 li
127.626 183.441 li
127.626 183.441 li
138.018 183.441 li
138.128 183.369 136.847 175.284 136.847 175.284 cv
cp
f
383.535 368.301 mo
366.277 368.301 li
366.277 347.17 li
383.535 347.17 li
383.535 368.301 li
cp
1 .8 .6 rgb
f
388.335 361.278 mo
387.966 361.155 387.304 360.909 387.304 360.909 cv
387.304 360.909 383.41 357.18 383.535 357.223 cv
383.66 357.266 374.906 362.573 374.906 362.573 cv
366.277 357.223 li
362.541 360.745 li
362.541 360.745 360.918 361.465 360.121 361.733 cv
349.911 365.165 344.251 367.463 341.043 371.776 cv
408.767 371.776 li
405.42 367.276 399.404 364.983 388.335 361.278 cv
cp
.776471 .231373 .129412 rgb
f
393.975 321.28 mo
392.918 327.295 396.484 332.304 401.944 333.384 cv
407.405 334.464 412.685 331.204 413.742 325.189 cv
414.8 319.174 411.234 313.422 405.773 312.344 cv
400.315 311.262 395.033 315.266 393.975 321.28 cv
cp
1 .8 .6 rgb
f
355.88 321.28 mo
356.938 327.295 353.373 332.304 347.912 333.384 cv
342.451 334.464 337.17 331.204 336.114 325.189 cv
335.056 319.174 338.622 313.422 344.082 312.344 cv
349.541 311.262 354.824 315.266 355.88 321.28 cv
cp
f
402.173 280.757 mo
396.842 273.518 388.531 268.761 379.703 268.41 cv
379.703 268.41 379.53 268.404 379.246 268.392 cv
379.256 268.046 li
379.256 268.046 377.116 268.131 374.907 268.219 cv
372.698 268.131 370.558 268.046 370.558 268.046 cv
370.567 268.392 li
370.283 268.404 370.112 268.41 370.11 268.41 cv
361.284 268.761 352.971 273.518 347.641 280.757 cv
342.305 288.006 341.597 297.136 342.017 305.88 cv
342.334 312.487 343.504 323.152 343.833 329.758 cv
349.187 349.787 362.506 353.208 374.906 353.208 cv
387.308 353.208 401.072 349.787 405.981 329.758 cv
406.309 323.152 407.478 312.487 407.797 305.88 cv
408.217 297.136 407.509 288.006 402.173 280.757 cv
cp
f
362.02 318.657 mo
362.02 321.252 360.248 323.358 358.058 323.358 cv
355.871 323.358 354.095 321.252 354.095 318.657 cv
354.095 316.059 355.871 313.956 358.058 313.956 cv
360.248 313.956 362.02 316.059 362.02 318.657 cv
cp
.227451 .117647 .039216 rgb
f
396.065 318.657 mo
396.065 321.252 394.292 323.358 392.103 323.358 cv
389.916 323.358 388.14 321.252 388.14 318.657 cv
388.14 316.059 389.916 313.956 392.103 313.956 cv
394.292 313.956 396.065 316.059 396.065 318.657 cv
cp
f
352.519 309.147 mo
352.193 309.147 351.866 309.026 351.611 308.784 cv
351.082 308.282 351.059 307.446 351.56 306.917 cv
353.826 304.53 360.457 303.053 364.349 305.743 cv
364.95 306.159 365.1 306.981 364.685 307.581 cv
364.271 308.18 363.449 308.333 362.848 307.917 cv
360.007 305.952 354.889 307.247 353.477 308.735 cv
353.218 309.008 352.869 309.147 352.519 309.147 cv
cp
.419608 .27451 .176471 rgb
f
397.912 309.256 mo
397.564 309.256 397.215 309.12 396.956 308.848 cv
394.931 306.723 390.109 306.782 387.217 308.965 cv
386.635 309.405 385.808 309.29 385.368 308.708 cv
384.927 308.127 385.042 307.297 385.625 306.858 cv
389.608 303.85 395.919 303.93 398.869 307.026 cv
399.371 307.555 399.351 308.389 398.822 308.893 cv
398.567 309.137 398.24 309.256 397.912 309.256 cv
cp
f
344.722 313.423 mo
344.967 308.58 343.224 296.381 349.619 293.645 cv
352.072 292.594 354.756 292.536 357.232 292.78 cv
366.18 293.656 374.518 298.033 390.145 295.503 cv
398.841 294.097 401.102 292.593 403.442 290.745 cv
404.409 289.981 404.64 304.134 404.684 308.639 cv
404.703 310.724 404.681 312.709 404.653 314.793 cv
404.636 316.017 404.64 317.24 404.618 318.461 cv
404.607 318.959 404.5 320.217 406.134 320.215 cv
407.334 320.213 407.486 317.036 407.531 316.458 cv
408.23 307.308 408.576 302.361 408.168 293.821 cv
407.973 289.694 408.051 289.77 407.711 286.1 cv
410.314 284.041 411.957 280.304 411.963 275.887 cv
410.665 276.882 407.843 277.687 407.843 277.687 cv
410.109 274.818 411.968 270.232 411.394 264.849 cv
408.932 267.174 406.298 268.277 402.983 267.984 cv
403.854 266.542 404.593 264.581 402.991 261.912 cv
401.512 263.903 398.807 265.121 394.989 265.763 cv
386.67 267.167 370.874 256.476 351.002 271.192 cv
344.043 276.346 341.453 285.758 341.444 294.796 cv
341.431 306.534 341.435 303.131 341.423 314.735 cv
341.422 315.776 341.496 319.426 342.698 320.241 cv
343.859 321.029 344.746 319.855 344.726 318.729 cv
344.693 317.01 344.616 315.519 344.722 313.423 cv
cp
.537255 .388235 .286275 rgb
f
364.052 337.542 mo
368.723 350.629 385.783 345.938 386.723 336.831 cv
364.052 337.542 li
cp
1 1 1 rgb
f
365.684 338.592 mo
367.537 342.385 370.871 344.528 375.021 344.528 cv
375.022 344.528 li
379.8 344.528 384.208 341.635 385.365 337.973 cv
365.684 338.592 li
cp
375.022 346.729 mo
375.021 346.729 li
369.392 346.729 365.015 343.516 363.015 337.911 cv
362.897 337.581 362.945 337.211 363.142 336.922 cv
363.341 336.631 363.666 336.454 364.017 336.442 cv
386.689 335.731 li
386.997 335.709 387.312 335.848 387.529 336.081 cv
387.746 336.313 387.85 336.627 387.818 336.944 cv
387.26 342.34 381.52 346.729 375.022 346.729 cv
cp
.729412 .52549 .388235 rgb
f
365.953 371.776 mo
362.275 361.612 li
362.148 361.266 362.328 360.881 362.675 360.756 cv
363.021 360.631 363.407 360.809 363.532 361.157 cv
366.56 369.524 li
374.457 362.909 li
374.74 362.672 375.162 362.709 375.398 362.993 cv
375.635 363.276 375.598 363.698 375.316 363.934 cv
365.953 371.776 li
cp
.639216 .14902 .086275 rgb
f
383.812 371.776 mo
374.457 363.934 li
374.173 363.698 374.136 363.276 374.373 362.993 cv
374.611 362.709 375.032 362.672 375.316 362.909 cv
383.217 369.528 li
386.282 361.26 li
386.41 360.913 386.795 360.737 387.14 360.864 cv
387.488 360.993 387.664 361.377 387.536 361.725 cv
383.812 371.776 li
cp
f
375.517 364.194 mo
375.517 363.825 375.218 363.524 374.849 363.524 cv
374.48 363.524 374.18 363.825 374.18 364.194 cv
374.18 370.733 374.524 371.055 374.55 371.776 cv
374.669 371.776 374.787 371.776 374.906 371.776 cv
375.235 371.776 375.56 371.78 375.888 371.776 cv
375.861 371.043 375.517 370.708 375.517 364.194 cv
cp
f
135.322 363.55 mo
135.322 363.55 119.783 367.222 118.802 367.816 cv
118.701 367.771 118.91 367.81 118.802 367.816 cv
101.727 363.667 li
93.8193 366.364 88.9214 368.461 85.8486 371.707 cv
151.535 371.707 li
148.419 368.42 143.419 366.305 135.322 363.55 cv
cp
.54902 .454902 .329412 rgb
f
127.326 369.496 mo
110.068 369.496 li
110.068 348.364 li
127.326 348.364 li
127.326 369.496 li
cp
.878431 .666667 .47451 rgb
f
114.366 367.658 mo
118.149 364.831 li
118.115 364.803 li
117.833 364.572 117.791 364.156 118.021 363.874 cv
118.142 363.727 118.312 363.647 118.489 363.636 cv
110.068 358.417 li
108.194 360.185 li
108.757 362.477 li
105.991 371.707 li
106.839 371.775 116.737 371.707 116.737 371.707 cv
114.366 367.658 li
cp
1 1 1 rgb
f
122.572 368.444 mo
118.149 364.831 li
114.366 367.658 li
116.737 371.707 li
116.737 371.707 117.64 371.707 118.688 371.707 cv
119.736 371.707 120.638 371.707 120.638 371.707 cv
122.572 368.444 li
cp
.278431 .172549 .094118 rgb
f
109.904 371.707 mo
109.712 371.707 109.523 371.867 109.392 371.707 cv
109.162 371.423 109.203 371.062 109.486 370.831 cv
118.115 363.78 li
118.397 363.548 118.814 363.591 119.044 363.874 cv
119.275 364.156 119.233 364.572 118.951 364.803 cv
110.322 371.707 li
110.199 371.807 110.05 371.707 109.904 371.707 cv
cp
.690196 .678431 .698039 rgb
f
122.572 368.444 mo
120.638 371.707 li
126.101 371.707 li
122.572 368.444 li
cp
1 1 1 rgb
f
126.455 369.912 mo
128.508 361.673 li
128.783 360.132 li
128.783 360.132 127.201 358.374 127.326 358.417 cv
127.443 358.457 119.783 363.106 118.802 363.701 cv
118.853 363.725 118.906 363.743 118.951 363.78 cv
126.455 369.912 li
cp
f
118.021 363.874 mo
117.791 364.156 117.833 364.572 118.115 364.803 cv
118.149 364.831 li
122.572 368.444 li
126.101 371.707 li
126.455 369.912 li
118.951 363.78 li
118.906 363.743 118.853 363.725 118.802 363.701 cv
118.701 363.655 118.596 363.629 118.489 363.636 cv
118.312 363.647 118.142 363.727 118.021 363.874 cv
cp
.690196 .678431 .698039 rgb
f
108.194 360.185 mo
106.279 360.89 li
106.277 360.891 106.27 360.891 106.268 360.892 cv
102.094 362.434 li
101.982 362.466 101.896 362.556 101.872 362.67 cv
101.727 363.667 li
100.851 371.707 li
100.824 371.833 111.132 371.707 111.132 371.707 cv
108.757 362.477 li
108.194 360.185 li
cp
.678431 .556863 .423529 rgb
f
135.322 363.55 mo
135.193 362.67 li
135.169 362.556 135.083 362.466 134.971 362.434 cv
130.797 360.892 li
130.79 360.889 130.761 360.888 130.746 360.888 cv
128.783 360.132 li
128.508 361.673 li
126.455 369.912 li
126.101 371.707 li
126.101 371.707 li
136.493 371.707 li
136.603 371.634 135.322 363.55 135.322 363.55 cv
cp
f
164.84 296.493 mo
164.84 296.493 162.754 296.468 159.792 292.464 cv
158.25 290.38 155.033 278.82 147.553 271.324 cv
141.286 265.047 131.502 261.08 116.708 261.08 cv
89.4009 261.08 85.7666 278.684 85.7666 278.684 cv
85.7666 278.684 73.8188 284.755 75.8965 310.86 cv
75.8965 310.86 76.0435 320.465 80.9009 330.084 cv
85.7578 339.704 82.6211 343.045 80.7266 343.632 cv
77.8662 344.519 85.5547 347.988 88.1855 345.309 cv
88.1855 345.309 88.9951 348.229 86.5674 349.782 cv
84.9155 350.838 92.3872 352.364 96.876 349.123 cv
96.1792 350.551 95.2529 351.917 94.7104 352.624 cv
99.0342 353.855 102.78 349.99 103.297 345.869 cv
103.392 345.117 103.34 344.356 103.116 343.693 cv
105.789 343.868 133.262 345.675 134.323 345.869 cv
135.438 346.07 138.828 353.633 147.477 352.344 cv
153.819 351.399 146.871 351.488 148.287 344.53 cv
148.287 344.53 151.604 346.139 154.071 344.141 cv
156.523 342.152 150.716 343.632 152.95 335.708 cv
152.95 335.708 165.489 321.331 159.215 298.92 cv
159.215 298.92 162.352 300.236 164.84 296.493 cv
cp
.2 .098039 .027451 rgb
f
95.4019 352.368 mo
95.7158 352.423 96.0322 352.451 96.3447 352.451 cv
99.8765 352.451 102.494 349.008 102.895 345.817 cv
102.986 345.096 102.931 344.406 102.733 343.822 cv
102.69 343.695 102.713 343.553 102.796 343.446 cv
102.878 343.339 102.997 343.28 103.143 343.289 cv
106.228 343.491 133.305 345.272 134.395 345.471 cv
134.802 345.544 135.174 345.982 135.849 346.776 cv
137.424 348.633 140.359 352.087 145.538 352.087 cv
146.147 352.087 146.781 352.039 147.42 351.944 cv
147.932 351.868 149.433 351.644 149.769 351.434 cv
149.709 351.317 149.541 351.105 149.4 350.929 cv
148.612 349.938 147.149 348.095 147.89 344.449 cv
147.916 344.327 147.996 344.223 148.109 344.167 cv
148.219 344.111 148.35 344.111 148.465 344.166 cv
148.476 344.171 149.668 344.737 151.097 344.737 cv
152.155 344.737 153.07 344.431 153.815 343.826 cv
154.261 343.467 154.283 343.331 154.283 343.325 cv
154.261 343.259 154.04 343.077 153.878 342.944 cv
152.918 342.154 151.126 340.684 152.559 335.598 cv
152.577 335.541 152.605 335.487 152.645 335.442 cv
152.767 335.3 164.962 320.957 158.825 299.03 cv
158.784 298.881 158.831 298.72 158.947 298.617 cv
159.063 298.515 159.228 298.487 159.371 298.548 cv
159.375 298.549 159.851 298.741 160.553 298.741 cv
160.553 298.741 li
161.517 298.741 162.889 298.38 164.156 296.751 cv
163.262 296.451 161.556 295.528 159.466 292.705 cv
159.005 292.08 158.441 290.753 157.664 288.917 cv
155.766 284.438 152.587 276.942 147.265 271.609 cv
140.561 264.891 130.279 261.484 116.708 261.484 cv
102.772 261.484 95.2114 266.185 91.3223 270.129 cv
87.1133 274.396 86.1743 278.724 86.1636 278.767 cv
86.1382 278.887 86.0596 278.989 85.9517 279.045 cv
85.835 279.105 74.2725 285.348 76.2988 310.829 cv
76.3022 310.949 76.5068 320.482 81.2632 329.902 cv
84.4292 336.176 84.1577 339.702 83.3716 341.555 cv
82.6299 343.303 81.3604 343.86 80.8467 344.019 cv
80.5522 344.11 80.502 344.2 80.5005 344.2 cv
80.5127 344.596 82.7212 345.902 85.2642 345.902 cv
86.0718 345.902 87.187 345.749 87.8979 345.025 cv
87.9985 344.922 88.1494 344.88 88.2876 344.918 cv
88.4277 344.954 88.5391 345.062 88.5767 345.202 cv
88.5859 345.233 89.4277 348.407 86.812 350.105 cv
87.1387 350.321 88.2446 350.675 90.0762 350.675 cv
92.5918 350.675 94.9854 349.99 96.6392 348.795 cv
96.7915 348.686 96.9961 348.695 97.1382 348.814 cv
97.2798 348.933 97.3232 349.134 97.2407 349.301 cv
96.6841 350.44 95.9673 351.57 95.4019 352.368 cv
cp
96.3447 353.26 mo
95.7646 353.26 95.1792 353.177 94.5991 353.012 cv
94.4717 352.977 94.3691 352.877 94.3262 352.75 cv
94.2852 352.623 94.3081 352.483 94.3892 352.376 cv
94.7734 351.877 95.3086 351.102 95.8184 350.233 cv
93.6743 351.303 91.3833 351.485 90.0762 351.485 cv
88.6758 351.485 86.2334 351.231 85.9551 350.277 cv
85.9102 350.129 85.8638 349.751 86.3486 349.441 cv
87.8442 348.484 87.9629 346.927 87.8945 346.058 cv
87.2104 346.487 86.3164 346.711 85.2642 346.711 cv
82.9941 346.711 79.8916 345.548 79.7051 344.313 cv
79.6689 344.087 79.6904 343.531 80.6064 343.246 cv
80.9238 343.149 81.9995 342.715 82.6265 341.239 cv
83.3447 339.542 83.5688 336.263 80.54 330.267 cv
75.6987 320.676 75.4927 310.963 75.4907 310.866 cv
73.5264 286.182 83.9014 279.285 85.4185 278.415 cv
85.9248 276.499 90.9111 260.674 116.708 260.674 cv
130.502 260.674 140.976 264.162 147.838 271.039 cv
153.271 276.482 156.487 284.068 158.409 288.601 cv
159.138 290.319 159.712 291.675 160.118 292.224 cv
162.883 295.963 164.833 296.087 164.853 296.088 cv
164.999 296.094 165.133 296.179 165.198 296.309 cv
165.264 296.439 165.261 296.595 165.178 296.717 cv
163.622 299.059 161.802 299.55 160.553 299.55 cv
160.553 299.55 li
160.264 299.55 160.005 299.523 159.788 299.487 cv
162.801 310.857 160.939 320.081 158.814 325.857 cv
156.615 331.839 153.778 335.353 153.315 335.902 cv
152.067 340.409 153.521 341.603 154.392 342.319 cv
154.753 342.615 155.094 342.894 155.092 343.33 cv
155.09 343.775 154.703 344.149 154.326 344.456 cv
153.43 345.18 152.343 345.546 151.097 345.546 cv
150.048 345.546 149.129 345.286 148.598 345.093 cv
148.144 348.046 149.318 349.523 150.034 350.425 cv
150.418 350.909 150.722 351.29 150.551 351.724 cv
150.359 352.211 149.767 352.413 147.538 352.745 cv
146.859 352.845 146.188 352.897 145.538 352.897 cv
139.984 352.897 136.892 349.256 135.231 347.3 cv
134.842 346.843 134.4 346.322 134.238 346.265 cv
133.414 346.115 114.194 344.826 103.651 344.133 cv
103.76 344.69 103.778 345.297 103.697 345.92 cv
103.256 349.45 100.318 353.26 96.3447 353.26 cv
cp
f
146.114 283.376 mo
141.098 276.158 131.969 270.836 123.337 270.494 cv
123.337 270.494 123.168 270.487 122.892 270.476 cv
122.901 270.137 li
122.901 270.137 120.809 270.221 118.649 270.307 cv
116.489 270.221 114.397 270.137 114.397 270.137 cv
114.406 270.476 li
114.13 270.487 113.961 270.494 113.961 270.494 cv
105.33 270.836 96.4146 276.311 91.1841 283.376 cv
82.5205 295.076 86.397 321.256 88.27 330.472 cv
93.5039 350.051 106.525 353.396 118.649 353.396 cv
130.773 353.396 144.229 350.051 149.029 330.472 cv
150.901 322.259 154.965 296.103 146.114 283.376 cv
cp
.878431 .666667 .47451 rgb
f
105.625 319.856 mo
105.625 322.453 103.851 324.559 101.664 324.559 cv
99.4761 324.559 97.7007 322.453 97.7007 319.856 cv
97.7007 317.26 99.4761 315.155 101.664 315.155 cv
103.851 315.155 105.625 317.26 105.625 319.856 cv
cp
.227451 .117647 .039216 rgb
f
139.669 319.856 mo
139.669 322.453 137.894 324.559 135.707 324.559 cv
133.519 324.559 131.746 322.453 131.746 319.856 cv
131.746 317.26 133.519 315.155 135.707 315.155 cv
137.894 315.155 139.669 317.26 139.669 319.856 cv
cp
f
96.1226 311.228 mo
95.7944 311.228 95.4683 311.106 95.2144 310.864 cv
94.6851 310.362 94.6616 309.526 95.1636 308.998 cv
97.4292 306.61 104.062 305.136 107.955 307.823 cv
108.554 308.239 108.705 309.062 108.291 309.661 cv
107.876 310.261 107.052 310.412 106.455 309.997 cv
103.613 308.034 98.4937 309.327 97.0796 310.815 cv
96.8198 311.089 96.4702 311.228 96.1226 311.228 cv
cp
f
141.515 311.338 mo
141.167 311.338 140.82 311.2 140.56 310.929 cv
138.535 308.804 133.71 308.863 130.82 311.047 cv
130.238 311.486 129.41 311.371 128.968 310.789 cv
128.531 310.207 128.646 309.379 129.228 308.939 cv
133.21 305.931 139.523 306.011 142.472 309.106 cv
142.974 309.634 142.955 310.47 142.427 310.974 cv
142.171 311.218 141.843 311.338 141.515 311.338 cv
cp
f
118.673 344.454 mo
118.343 344.454 118.021 344.446 117.708 344.431 cv
113.902 344.237 110.796 343.008 109.189 341.059 cv
108.726 340.496 108.804 339.663 109.369 339.2 cv
109.931 338.735 110.763 338.815 111.228 339.378 cv
112.33 340.716 114.865 341.641 117.843 341.792 cv
121.507 341.981 125.007 340.993 126.74 339.279 cv
127.261 338.767 128.095 338.772 128.609 339.29 cv
129.123 339.81 129.117 340.646 128.597 341.158 cv
126.126 343.601 122.019 344.454 118.673 344.454 cv
cp
.639216 .431373 .27451 rgb
f
92.6382 294.266 mo
92.6382 294.266 95.4717 300.856 103.97 302.822 cv
103.97 302.822 104.78 300.944 100.53 287.792 cv
100.53 287.792 110.716 300.944 127.241 302.822 cv
123.215 291.901 li
123.215 291.901 129.764 297.924 142.216 303.736 cv
149.907 307.326 155.371 306.516 155.371 306.516 cv
155.371 306.516 163.162 261.281 107.258 269.174 cv
107.258 269.174 75.8965 273.375 83.937 317.104 cv
83.937 317.104 91.4248 307.218 92.6382 294.266 cv
cp
.2 .098039 .027451 rgb
f
119.522 267.44 mo
119.518 267.44 li
115.692 267.44 111.528 267.753 107.146 268.372 cv
106.696 268.433 95.9028 269.984 88.4834 280.205 cv
82.0479 289.071 80.2505 301.535 83.1416 317.251 cv
83.1973 317.567 83.438 317.819 83.7505 317.893 cv
83.8115 317.907 83.874 317.914 83.937 317.914 cv
84.1865 317.914 84.4272 317.799 84.5815 317.594 cv
84.8745 317.208 91.3472 308.542 93.1538 296.707 cv
94.75 298.929 98.0142 302.275 103.789 303.61 cv
103.848 303.625 103.909 303.632 103.97 303.632 cv
104.288 303.632 104.584 303.445 104.714 303.144 cv
104.91 302.688 105.25 300.531 102.406 291.078 cv
106.43 295.124 115.085 302.255 127.149 303.626 cv
127.182 303.63 127.212 303.632 127.241 303.632 cv
127.489 303.632 127.724 303.519 127.878 303.322 cv
128.053 303.102 128.099 302.806 128.002 302.542 cv
125.009 294.426 li
127.939 296.685 133.594 300.605 141.875 304.471 cv
147.343 307.022 151.747 307.404 153.884 307.404 cv
154.891 307.404 155.464 307.32 155.489 307.316 cv
155.834 307.265 156.108 306.997 156.168 306.653 cv
156.285 305.984 158.875 290.151 149.217 278.686 cv
142.929 271.225 132.94 267.44 119.522 267.44 cv
119.522 267.44 li
cp
119.522 268.249 mo
161.957 268.252 155.371 306.516 155.371 306.516 cv
155.371 306.516 154.843 306.594 153.884 306.594 cv
151.758 306.594 147.515 306.209 142.216 303.736 cv
129.764 297.924 123.215 291.901 123.215 291.901 cv
127.241 302.822 li
110.716 300.944 100.53 287.792 100.53 287.792 cv
104.78 300.944 103.97 302.822 103.97 302.822 cv
95.4717 300.856 92.6382 294.266 92.6382 294.266 cv
91.4248 307.218 83.937 317.104 83.937 317.104 cv
75.8965 273.375 107.258 269.174 107.258 269.174 cv
111.745 268.54 115.819 268.249 119.522 268.249 cv
119.522 268.249 li
cp
f
127.647 352.091 mo
124.855 352.815 121.847 352.142 121.606 350.05 cv
121.319 347.586 117.041 347.586 116.753 350.05 cv
116.511 352.142 113.986 352.708 111.138 352.243 cv
109.484 351.973 108.201 350.933 107.763 350.884 cv
106.628 350.759 106.696 351.849 107.712 352.955 cv
108.572 353.89 109.583 354.63 110.698 355.228 cv
115.363 357.731 123.034 357.63 127.697 355.126 cv
128.607 354.637 131.552 352.626 131.572 351.893 cv
131.617 350.017 128.744 351.808 127.647 352.091 cv
cp
f
762.877 174.784 mo
751.474 174.784 li
751.474 157.176 li
762.877 157.176 li
762.877 174.784 li
cp
1 .8 .6 rgb
f
796.89 139.772 mo
796.89 150.292 805.113 158.91 800.064 170.278 cv
793.729 184.544 784.769 182.412 784.769 183.512 cv
729.741 183.512 li
729.741 183.512 718.077 183.6 713.336 168.438 cv
709.619 156.553 716.255 150.292 716.255 140.809 cv
715.677 114.008 li
715.677 94.1875 730.458 72.9355 756.642 72.9355 cv
756.642 72.9355 li
784.917 72.9355 797.609 94.1875 797.609 114.008 cv
796.89 139.772 li
cp
.909804 .67451 .364706 rgb
f
783.938 90.5449 mo
778.094 82.2578 772.095 82.0039 762.42 81.6016 cv
751.905 81.6016 li
742.229 82.0039 736.229 82.2578 730.388 90.5449 cv
724.538 98.8379 723.751 91.5195 724.212 101.523 cv
724.562 109.08 722.05 113.248 725.175 134.27 cv
728.301 155.293 744.193 162.034 757.161 162.034 cv
770.073 162.034 784.652 156.399 789.15 134.27 cv
793.646 112.145 786.76 118.553 787.109 110.992 cv
787.569 100.988 789.783 98.8379 783.938 90.5449 cv
cp
1 .8 .6 rgb
f
762.877 174.784 mo
751.474 174.784 li
751.474 157.176 li
762.877 157.176 li
762.877 174.784 li
cp
f
784.769 183.512 mo
781.838 175.54 777.556 169.456 766.19 165.665 cv
766.098 165.633 766.002 165.643 765.911 165.674 cv
765.878 165.659 765.837 165.637 765.803 165.62 cv
765.71 165.352 765.452 165.18 765.153 165.209 cv
765.132 165.213 765.114 165.225 765.095 165.231 cv
764.229 164.715 763.272 164.049 763.272 164.049 cv
760.222 169.45 li
760.073 169.379 li
757.21 174.399 li
754.542 169.542 li
754.362 169.622 li
751.237 164.049 li
751.237 164.049 750.269 164.723 749.399 165.241 cv
749.369 165.231 749.344 165.213 749.312 165.209 cv
749.008 165.178 748.737 165.364 748.653 165.647 cv
748.636 165.655 748.615 165.667 748.599 165.674 cv
748.507 165.643 748.411 165.633 748.318 165.665 cv
736.953 169.456 732.673 175.54 729.741 183.512 cv
784.769 183.512 li
cp
1 .611765 .741176 rgb
f
756.43 152.307 mo
752.272 152.307 748.754 150.749 746.95 148.09 cv
746.579 147.542 746.722 146.799 747.269 146.426 cv
747.813 146.057 748.56 146.198 748.932 146.747 cv
750.345 148.831 753.312 150.022 756.863 149.905 cv
760.218 149.805 763.276 148.53 764.3 146.807 cv
764.638 146.237 765.372 146.051 765.94 146.389 cv
766.509 146.727 766.696 147.461 766.358 148.03 cv
764.894 150.495 761.195 152.172 756.936 152.297 cv
756.767 152.303 756.598 152.307 756.43 152.307 cv
cp
.729412 .52549 .388235 rgb
f
743.157 136.333 mo
743.157 138.624 740.469 140.483 737.152 140.483 cv
733.835 140.483 731.147 138.624 731.147 136.333 cv
731.147 134.042 733.835 132.184 737.152 132.184 cv
740.469 132.184 743.157 134.042 743.157 136.333 cv
cp
.988235 .690196 .584314 rgb
f
783.119 136.333 mo
783.119 138.624 780.432 140.483 777.116 140.483 cv
773.8 140.483 771.11 138.624 771.11 136.333 cv
771.11 134.042 773.8 132.184 777.116 132.184 cv
780.432 132.184 783.119 134.042 783.119 136.333 cv
cp
f
757.198 176.266 mo
757.096 176.266 756.991 176.239 756.896 176.184 cv
756.602 176.016 756.499 175.645 756.667 175.35 cv
760.073 169.379 li
765.446 171.926 li
764.629 165.901 li
764.583 165.565 764.817 165.254 765.153 165.209 cv
765.495 165.176 765.798 165.399 765.843 165.735 cv
766.965 174.004 li
760.573 170.973 li
757.731 175.956 li
757.618 176.155 757.411 176.266 757.198 176.266 cv
cp
.839216 .447059 .580392 rgb
f
776.095 96.2031 mo
776.095 96.2031 761.331 109.67 720.318 118.5 cv
720.318 118.5 719.735 84.4785 740.009 80.4883 cv
760.28 76.5 781.426 84.1328 781.426 84.1328 cv
781.426 84.1328 794.895 102.361 793.646 123.711 cv
793.646 123.711 781.676 120.145 776.095 96.2031 cv
cp
.909804 .67451 .364706 rgb
f
777.772 128.766 mo
777.772 131.555 777.46 130.115 773.521 130.115 cv
769.579 130.115 769.269 131.555 769.269 128.766 cv
769.269 125.979 771.175 123.717 773.521 123.717 cv
775.866 123.717 777.772 125.979 777.772 128.766 cv
cp
.227451 .117647 .039216 rgb
f
743.388 128.766 mo
743.388 131.555 743.077 130.115 739.136 130.115 cv
735.194 130.115 734.886 131.555 734.886 128.766 cv
734.886 125.979 736.79 123.717 739.136 123.717 cv
741.483 123.717 743.388 125.979 743.388 128.766 cv
cp
f
733.905 119.805 mo
733.509 119.805 733.116 119.623 732.862 119.279 cv
732.437 118.701 732.558 117.891 733.134 117.463 cv
735.544 115.68 742.792 115.043 745.403 117.574 cv
745.917 118.074 745.931 118.895 745.433 119.408 cv
744.933 119.924 744.112 119.934 743.598 119.438 cv
742.008 117.896 736.245 118.389 734.676 119.549 cv
734.443 119.719 734.173 119.805 733.905 119.805 cv
cp
.729412 .52549 .388235 rgb
f
768.494 119.66 mo
768.077 119.66 767.667 119.457 767.417 119.086 cv
767.018 118.492 767.176 117.686 767.771 117.287 cv
770.33 115.564 776.761 114.688 780.62 117.287 cv
781.215 117.686 781.373 118.492 780.973 119.086 cv
780.571 119.682 779.766 119.838 779.172 119.438 cv
776.247 117.471 770.966 118.262 769.218 119.438 cv
768.995 119.588 768.744 119.66 768.494 119.66 cv
cp
f
757.812 175.653 mo
757.812 175.495 li
757.315 174.592 li
754.542 169.542 li
754.362 169.622 li
749.014 171.965 li
749.837 165.901 li
749.878 165.596 749.684 165.323 749.399 165.241 cv
749.369 165.231 749.344 165.213 749.312 165.209 cv
749.008 165.178 748.737 165.364 748.653 165.647 cv
748.644 165.676 748.627 165.702 748.622 165.735 cv
747.505 173.965 li
754.008 171.114 li
756.586 175.809 li
756.571 177.95 757.261 179.793 756.933 183.512 cv
758.153 183.512 li
758.492 179.674 757.812 177.831 757.812 175.653 cv
cp
.839216 .447059 .580392 rgb
f
754.414 268.378 mo
751.119 260.08 730.48 264.265 729.061 274.669 cv
714.799 277.119 713.176 292.068 716.771 301.234 cv
712.645 300.986 710 308.968 713.732 312.228 cv
705.283 313.478 705.283 323.166 709.67 326.623 cv
702.668 330.583 704.828 341.226 710.68 341.945 cv
703.166 345.722 707.322 356.613 713.066 356.658 cv
710.15 366.767 719.629 371.408 724.061 367.804 cv
724.191 371.132 729 371.301 731.85 371.193 cv
735.322 371.063 774.813 369.664 776.48 370.123 cv
778.535 370.687 776.494 370.213 778.732 371.193 cv
782.305 372.756 792.285 371.408 792.053 364.416 cv
796.947 367.503 802.434 362.175 798.813 355.033 cv
804.262 355.677 808.625 350.007 804.273 343.134 cv
810.248 340.06 808.625 331.894 804.998 330.898 cv
810.082 329.164 809.748 322.429 804.469 319.656 cv
807.217 317.548 805.531 312.158 801.178 311.666 cv
802.766 305.81 798.209 302.677 794.252 303.136 cv
798.209 301.984 798.654 294.167 792.582 293.574 cv
798.209 287.683 790.754 278.328 785.475 278.207 cv
787.617 259.314 758.703 262.908 754.414 268.378 cv
cp
.847059 .427451 .145098 rgb
f
731.916 317.91 mo
732.506 322.673 729.762 326.931 725.785 327.425 cv
721.809 327.917 718.105 324.455 717.516 319.691 cv
716.926 314.929 719.672 310.667 723.65 310.177 cv
727.625 309.683 731.326 313.146 731.916 317.91 cv
cp
1 .831373 .682353 rgb
f
779.369 317.91 mo
778.779 322.673 781.523 326.931 785.5 327.425 cv
789.477 327.917 793.18 324.455 793.77 319.691 cv
794.359 314.929 791.613 310.667 787.637 310.177 cv
783.658 309.683 779.959 313.146 779.369 317.91 cv
cp
f
780.148 288.349 mo
774.305 280.062 768.375 279.271 758.699 278.871 cv
750.119 280.201 li
740.441 280.603 736.771 279.23 730.932 287.517 cv
725.084 295.812 725.342 289.958 725.805 299.964 cv
726.154 307.523 721.637 302.22 724.762 323.242 cv
727.889 344.263 746.145 351.005 755.748 351.005 cv
765.357 351.005 782.244 345.369 786.742 323.242 cv
791.238 301.115 785.348 307.523 785.697 299.964 cv
786.158 289.958 785.996 296.644 780.148 288.349 cv
cp
f
762.086 371.193 mo
750.305 371.193 li
749.859 347.558 li
761.641 347.558 li
762.086 371.193 li
cp
f
733.299 308.767 mo
732.902 308.767 732.512 308.585 732.256 308.24 cv
731.83 307.664 731.951 306.853 732.527 306.427 cv
734.938 304.644 742.186 304.007 744.799 306.539 cv
745.311 307.037 745.324 307.859 744.828 308.373 cv
744.326 308.888 743.506 308.898 742.992 308.402 cv
741.402 306.861 735.637 307.353 734.07 308.513 cv
733.836 308.683 733.568 308.767 733.299 308.767 cv
cp
.666667 .32549 .207843 rgb
f
767.889 308.623 mo
767.471 308.623 767.061 308.421 766.811 308.05 cv
766.412 307.455 766.568 306.648 767.164 306.25 cv
769.723 304.529 776.154 303.652 780.016 306.25 cv
780.607 306.648 780.766 307.455 780.365 308.05 cv
779.965 308.644 779.16 308.802 778.566 308.402 cv
775.643 306.433 770.361 307.226 768.611 308.402 cv
768.389 308.55 768.139 308.623 767.889 308.623 cv
cp
f
777.166 317.73 mo
777.166 320.517 776.854 319.08 772.914 319.08 cv
768.973 319.08 768.662 320.517 768.662 317.73 cv
768.662 314.941 770.568 312.681 772.914 312.681 cv
775.26 312.681 777.166 314.941 777.166 317.73 cv
cp
.227451 .117647 .039216 rgb
f
741.746 328.744 mo
741.746 331.035 739.057 332.892 735.74 332.892 cv
732.424 332.892 729.736 331.035 729.736 328.744 cv
729.736 326.453 732.424 324.593 735.74 324.593 cv
739.057 324.593 741.746 326.453 741.746 328.744 cv
cp
1 .713726 .623529 rgb
f
781.709 328.744 mo
781.709 331.035 779.021 332.892 775.705 332.892 cv
772.389 332.892 769.701 331.035 769.701 328.744 cv
769.701 326.453 772.389 324.593 775.705 324.593 cv
779.021 324.593 781.709 326.453 781.709 328.744 cv
cp
f
742.783 317.73 mo
742.783 320.517 742.471 319.08 738.529 319.08 cv
734.588 319.08 734.279 320.517 734.279 317.73 cv
734.279 314.941 736.184 312.681 738.529 312.681 cv
740.875 312.681 742.783 314.941 742.783 317.73 cv
cp
.227451 .117647 .039216 rgb
f
742.783 317.507 mo
742.783 320.292 740.879 322.55 738.531 322.55 cv
736.184 322.55 734.279 320.292 734.279 317.507 cv
734.279 314.718 736.184 312.458 738.531 312.458 cv
740.879 312.458 742.783 314.718 742.783 317.507 cv
cp
f
777.166 317.507 mo
777.166 320.292 775.26 322.55 772.914 322.55 cv
770.568 322.55 768.662 320.292 768.662 317.507 cv
768.662 314.718 770.568 312.458 772.914 312.458 cv
775.26 312.458 777.166 314.718 777.166 317.507 cv
cp
f
747.061 335.654 mo
748.697 345.382 762.803 343.386 763.521 335.654 cv
747.061 335.654 li
cp
1 1 1 rgb
f
748.32 336.652 mo
749.648 340.875 753.695 341.226 754.986 341.226 cv
758.035 341.226 761.402 339.63 762.316 336.652 cv
748.32 336.652 li
cp
754.988 343.222 mo
754.986 343.222 754.986 343.222 754.986 343.222 cv
751.281 343.22 746.996 341.277 746.078 335.82 cv
746.029 335.529 746.109 335.234 746.299 335.009 cv
746.49 334.785 746.768 334.656 747.061 334.656 cv
763.521 334.656 li
763.803 334.656 764.07 334.773 764.26 334.982 cv
764.449 335.189 764.541 335.466 764.516 335.746 cv
764.064 340.601 759.27 343.222 754.988 343.222 cv
cp
.776471 .556863 .458824 rgb
f
726.457 303.554 mo
732.322 305.833 741.533 295.214 739.016 287.21 cv
738.768 290.41 754.086 296.326 758.855 288.958 cv
760.031 298.156 771.357 300.089 775.16 296.478 cv
774.996 303.31 782.484 308.783 785.137 305.97 cv
783.543 307.66 785.797 313.951 789.793 313.951 cv
795.779 313.951 790.689 302.935 790.346 300.089 cv
789.266 291.169 784.801 281.484 777.201 276.304 cv
776.717 275.974 776.219 275.664 775.705 275.376 cv
763.563 268.587 754.377 275.654 740.408 277.205 cv
728.771 278.498 721.918 286.183 719.91 297.072 cv
719.277 300.513 719.117 304.238 719.756 307.687 cv
720.088 309.466 721.512 312.929 723.045 313.97 cv
727.439 316.947 727.559 305.943 726.457 303.554 cv
cp
.847059 .427451 .145098 rgb
f
778.732 371.193 mo
776.035 363.232 774.34 363.107 764.908 358.884 cv
764.783 358.83 761.561 356.96 761.561 356.96 cv
755.707 368.734 li
752.838 363.511 li
749.779 356.96 li
749.779 356.96 747.029 358.619 746.936 358.66 cv
737.055 363.058 736.203 363.203 733.496 371.193 cv
778.732 371.193 li
cp
.611765 .839216 .898039 rgb
f
764.508 359.115 mo
764.461 358.767 764.145 358.537 763.795 358.572 cv
763.447 358.619 763.205 358.939 763.252 359.285 cv
764.098 365.513 li
758.547 362.88 li
755.586 368.066 li
752.832 363.046 li
747.117 365.552 li
747.971 359.285 li
748.016 358.939 747.773 358.619 747.428 358.572 cv
747.078 358.535 746.762 358.767 746.715 359.115 cv
745.561 367.619 li
752.279 364.671 li
755.02 369.666 li
755.027 369.679 755.041 369.683 755.049 369.695 cv
755.096 369.769 755.156 369.835 755.234 369.886 cv
755.271 369.91 755.311 369.919 755.35 369.935 cv
755.424 369.964 755.5 369.996 755.576 369.996 cv
755.576 369.996 li
755.578 369.996 755.578 369.996 755.578 369.996 cv
755.678 369.996 755.783 369.97 755.881 369.916 cv
755.881 369.916 li
755.896 369.908 755.906 369.892 755.92 369.882 cv
755.992 369.833 756.053 369.775 756.098 369.707 cv
756.105 369.695 756.119 369.689 756.127 369.677 cv
759.064 364.527 li
765.666 367.658 li
764.508 359.115 li
cp
.372549 .643137 .717647 rgb
f
289.59 147.346 mo
289.59 167.166 275.598 182.196 255.777 182.196 cv
239.395 182.196 li
219.576 182.196 205.583 167.166 205.583 147.346 cv
206.62 116.728 li
206.62 96.9087 223.913 75.6567 247.587 75.6567 cv
247.587 75.6567 li
273.216 75.6567 288.552 96.9087 288.552 116.728 cv
289.59 147.346 li
cp
.309804 .184314 .098039 rgb
f
253.995 180.084 mo
242.214 180.084 li
242.214 161.895 li
253.995 161.895 li
253.995 180.084 li
cp
1 .8 .6 rgb
f
270.724 183.51 mo
268.295 176.339 267.019 175.45 259.898 172.09 cv
259.859 171.818 li
259.842 171.737 259.781 171.672 259.701 171.651 cv
256.731 170.553 li
256.726 170.551 256.705 170.551 256.695 170.55 cv
255.298 170.012 li
255.291 170.047 li
254.588 169.5 249.318 177.531 248.064 177.912 cv
246.812 177.531 241.433 169.58 240.659 170.09 cv
240.649 170.049 li
239.286 170.551 li
239.286 170.552 239.28 170.552 239.279 170.553 cv
236.31 171.651 li
236.229 171.672 236.169 171.737 236.151 171.818 cv
236.097 172.193 li
229.153 175.505 227.861 176.503 225.487 183.51 cv
270.724 183.51 li
cp
.235294 .192157 .247059 rgb
f
255.291 170.047 mo
254.588 169.5 253.995 168.995 253.995 168.995 cv
253.995 168.995 249.26 171.483 248.006 171.864 cv
246.753 171.483 242.214 168.995 242.214 168.995 cv
242.214 168.995 241.433 169.58 240.659 170.09 cv
241.05 171.68 li
243.586 183.51 li
243.868 183.51 253.147 183.514 253.429 183.51 cv
255.104 171.11 li
255.291 170.047 li
cp
1 1 1 rgb
f
274.881 93.2661 mo
269.037 84.98 263.037 84.7231 253.363 84.3228 cv
242.849 84.3228 li
233.172 84.7231 227.173 84.98 221.331 93.2661 cv
215.482 101.559 217.698 103.709 218.159 113.713 cv
218.508 121.271 213.99 115.968 217.116 136.991 cv
220.243 158.012 238.499 164.754 248.104 164.754 cv
257.711 164.754 274.598 159.117 279.096 136.991 cv
283.594 114.864 277.702 121.271 278.053 113.713 cv
278.512 103.709 280.727 101.559 274.881 93.2661 cv
cp
1 .8 .6 rgb
f
247.628 154.208 mo
244.184 154.208 240.187 153.362 237.997 150.942 cv
237.553 150.451 237.591 149.694 238.081 149.25 cv
238.573 148.807 239.327 148.845 239.771 149.334 cv
241.354 151.083 244.917 152.043 248.862 151.772 cv
251.901 151.565 254.481 150.636 255.285 149.463 cv
255.657 148.917 256.4 148.776 256.948 149.151 cv
257.494 149.523 257.635 150.268 257.262 150.813 cv
256.01 152.643 252.932 153.893 249.024 154.161 cv
248.574 154.191 248.106 154.208 247.628 154.208 cv
cp
.729412 .52549 .388235 rgb
f
235.137 131.479 mo
235.137 134.265 233.233 136.524 230.886 136.524 cv
228.538 136.524 226.632 134.265 226.632 131.479 cv
226.632 128.693 228.538 126.432 230.886 126.432 cv
233.233 126.432 235.137 128.693 235.137 131.479 cv
cp
.227451 .117647 .039216 rgb
f
236.249 122.515 mo
235.892 122.515 235.535 122.368 235.278 122.079 cv
234.075 120.721 232.452 120.413 231.301 120.393 cv
229.483 120.362 227.597 121.052 226.593 122.112 cv
226.1 122.629 225.278 122.652 224.761 122.159 cv
224.241 121.667 224.22 120.846 224.712 120.327 cv
226.233 118.724 228.776 117.758 231.347 117.801 cv
233.708 117.842 235.793 118.75 237.22 120.36 cv
237.694 120.896 237.646 121.715 237.108 122.19 cv
236.862 122.409 236.556 122.515 236.249 122.515 cv
cp
f
261.016 122.372 mo
260.736 122.372 260.454 122.281 260.217 122.094 cv
259.654 121.653 259.555 120.838 259.998 120.275 cv
261.088 118.885 263.15 117.956 265.375 117.848 cv
267.73 117.737 269.888 118.563 271.428 120.18 cv
271.922 120.7 271.902 121.52 271.385 122.013 cv
270.867 122.506 270.047 122.489 269.552 121.969 cv
268.184 120.534 266.424 120.391 265.5 120.438 cv
263.832 120.518 262.537 121.239 262.037 121.875 cv
261.781 122.202 261.4 122.372 261.016 122.372 cv
cp
f
269.521 131.479 mo
269.521 134.266 267.615 136.524 265.27 136.524 cv
262.922 136.524 261.018 134.266 261.018 131.479 cv
261.018 128.692 262.922 126.431 265.27 126.431 cv
267.615 126.431 269.521 128.692 269.521 131.479 cv
cp
f
256.523 80.9302 mo
264.525 82.7524 270.332 85.8267 275.172 92.4321 cv
277.613 95.7632 277.615 96.2583 275.367 100.279 cv
273.455 103.698 261.852 107.5 261.813 99.2368 cv
261.85 107.115 240.095 116.489 238.253 106.139 cv
235.838 113.377 223.858 117.872 222.204 111.377 cv
221.945 115.624 219.989 119.663 217.146 122.088 cv
213.37 125.31 211.372 123.086 210.913 118.417 cv
210.006 109.143 214.267 100.301 219.776 93.2368 cv
228.88 81.5659 241.491 77.5034 256.523 80.9302 cv
cp
.309804 .184314 .098039 rgb
f
281.674 122.61 mo
284.379 116.141 284.221 97.7886 275.703 95.0552 cv
273.285 98.6772 278.149 120.776 281.674 122.61 cv
cp
f
242.6 177.912 mo
242.411 177.912 242.224 177.832 242.097 177.674 cv
241.868 177.397 241.909 176.988 242.188 176.76 cv
247.595 172.341 li
247.872 172.115 248.282 172.157 248.509 172.434 cv
248.735 172.712 248.694 173.122 248.417 173.348 cv
243.009 177.766 li
242.89 177.865 242.743 177.912 242.6 177.912 cv
cp
.690196 .678431 .698039 rgb
f
253.411 177.912 mo
253.268 177.912 253.122 177.865 253.002 177.766 cv
247.595 173.348 li
247.316 173.122 247.276 172.712 247.502 172.434 cv
247.729 172.157 248.138 172.115 248.417 172.341 cv
253.823 176.76 li
254.102 176.987 254.142 177.397 253.915 177.674 cv
253.788 177.832 253.601 177.912 253.411 177.912 cv
cp
f
234.101 142.493 mo
234.101 144.784 231.412 146.64 228.095 146.64 cv
224.778 146.64 222.091 144.784 222.091 142.493 cv
222.091 140.201 224.778 138.343 228.095 138.343 cv
231.412 138.343 234.101 140.201 234.101 142.493 cv
cp
.988235 .690196 .584314 rgb
f
274.063 142.493 mo
274.063 144.784 271.375 146.64 268.059 146.64 cv
264.742 146.64 262.055 144.784 262.055 142.493 cv
262.055 140.201 264.742 138.343 268.059 138.343 cv
271.375 138.343 274.063 140.201 274.063 142.493 cv
cp
f
240.659 170.09 mo
240.649 170.049 li
239.286 170.551 li
239.286 170.552 239.28 170.552 239.279 170.553 cv
236.31 171.651 li
236.229 171.672 236.169 171.737 236.151 171.818 cv
236.097 172.193 li
234.929 180.223 li
234.909 180.314 234.946 180.407 235.025 180.458 cv
239.735 183.51 li
239.735 183.51 243.937 183.51 244.586 183.51 cv
244.586 183.51 li
241.05 171.68 li
240.659 170.09 li
cp
.329412 .282353 .352941 rgb
f
256.275 183.51 mo
260.984 180.458 li
261.063 180.407 261.102 180.314 261.082 180.223 cv
259.898 172.09 li
259.859 171.818 li
259.842 171.737 259.781 171.672 259.701 171.651 cv
256.731 170.553 li
256.726 170.551 256.705 170.551 256.695 170.55 cv
255.298 170.012 li
255.291 170.047 li
255.104 171.11 li
251.429 183.51 li
252.081 183.502 256.275 183.51 256.275 183.51 cv
cp
f
287.426 371.697 mo
286.557 306.06 li
286.557 281.998 273.215 265.986 247.584 265.986 cv
223.912 265.986 208.615 281.249 208.615 306.06 cv
207.747 371.697 li
287.426 371.697 li
cp
.2 .098039 .027451 rgb
f
274.881 282.597 mo
269.037 274.311 263.037 274.055 253.363 273.654 cv
242.848 273.654 li
233.172 274.055 227.172 274.311 221.33 282.597 cv
215.482 290.891 217.697 293.041 218.158 303.044 cv
218.508 310.603 213.99 305.3 217.115 326.322 cv
220.242 347.344 238.498 354.086 248.104 354.086 cv
257.711 354.086 274.598 348.45 279.096 326.322 cv
283.594 304.195 277.701 310.603 278.053 303.044 cv
278.512 293.041 280.727 290.891 274.881 282.597 cv
cp
.878431 .666667 .47451 rgb
f
270.73 371.697 mo
268.529 365.022 267.285 365.981 261.768 363.078 cv
261.771 363.047 256.666 360.608 256.537 360.691 cv
256.472 360.734 256.422 360.795 256.389 360.864 cv
255.339 360.135 253.994 358.958 253.994 358.958 cv
253.939 359.258 249.316 359.962 248.105 360.341 cv
246.883 359.958 242.246 359.258 242.215 358.958 cv
242.215 358.958 240.54 360.567 239.67 361.041 cv
239.664 360.9 239.596 360.768 239.477 360.691 cv
239.35 360.608 234.258 363.22 234.271 363.334 cv
234.263 363.282 234.255 363.229 234.246 363.175 cv
228.518 366.205 227.633 365.178 225.48 371.697 cv
270.73 371.697 li
cp
f
253.994 369.912 mo
242.215 369.912 li
242.215 351.72 li
253.994 351.72 li
253.994 369.912 li
cp
f
235.137 320.81 mo
235.137 323.597 233.232 325.856 230.885 325.856 cv
228.537 325.856 226.633 323.597 226.633 320.81 cv
226.633 318.025 228.537 315.763 230.885 315.763 cv
233.232 315.763 235.137 318.025 235.137 320.81 cv
cp
.227451 .117647 .039216 rgb
f
236.248 312.845 mo
235.891 312.845 235.533 312.697 235.277 312.408 cv
234.076 311.051 232.451 310.743 231.301 310.722 cv
229.486 310.69 227.598 311.382 226.592 312.441 cv
226.098 312.959 225.277 312.982 224.76 312.49 cv
224.24 311.997 224.219 311.175 224.711 310.656 cv
226.232 309.054 228.787 308.093 231.346 308.13 cv
233.707 308.17 235.793 309.08 237.219 310.689 cv
237.693 311.225 237.645 312.044 237.109 312.519 cv
236.861 312.738 236.555 312.845 236.248 312.845 cv
cp
f
261.016 312.701 mo
260.736 312.701 260.453 312.611 260.215 312.423 cv
259.652 311.982 259.555 311.167 259.996 310.604 cv
261.09 309.214 263.148 308.285 265.377 308.177 cv
267.74 308.062 269.887 308.893 271.428 310.51 cv
271.922 311.029 271.902 311.849 271.385 312.343 cv
270.865 312.837 270.045 312.819 269.551 312.298 cv
268.182 310.862 266.412 310.716 265.5 310.768 cv
263.834 310.847 262.535 311.569 262.035 312.205 cv
261.781 312.531 261.4 312.701 261.016 312.701 cv
cp
f
269.521 320.81 mo
269.521 323.598 267.615 325.857 265.27 325.857 cv
262.922 325.857 261.018 323.598 261.018 320.81 cv
261.018 318.023 262.922 315.762 265.27 315.762 cv
267.615 315.762 269.521 318.023 269.521 320.81 cv
cp
f
239 370.335 mo
238.801 370.335 238.604 370.248 238.473 370.08 cv
238.246 369.79 238.297 369.37 238.588 369.144 cv
243.17 365.56 li
243.461 365.335 243.879 365.384 244.107 365.675 cv
244.334 365.966 244.283 366.386 243.992 366.613 cv
239.408 370.195 li
239.287 370.291 239.143 370.335 239 370.335 cv
cp
.690196 .678431 .698039 rgb
f
257.381 370.335 mo
257.242 370.335 257.102 370.292 256.98 370.201 cv
251.982 366.429 li
251.689 366.208 251.631 365.789 251.852 365.496 cv
252.074 365.201 252.49 365.142 252.787 365.365 cv
257.783 369.136 li
258.078 369.359 258.135 369.777 257.914 370.071 cv
257.783 370.244 257.584 370.335 257.381 370.335 cv
cp
f
234.1 331.824 mo
234.1 334.115 231.412 335.972 228.094 335.972 cv
224.779 335.972 222.09 334.115 222.09 331.824 cv
222.09 329.533 224.779 327.675 228.094 327.675 cv
231.412 327.675 234.1 329.533 234.1 331.824 cv
cp
.866667 .580392 .478431 rgb
f
274.063 331.824 mo
274.063 334.115 271.375 335.972 268.059 335.972 cv
264.742 335.972 262.053 334.115 262.053 331.824 cv
262.053 329.533 264.742 327.675 268.059 327.675 cv
271.375 327.675 274.063 329.533 274.063 331.824 cv
cp
f
212.385 312.924 mo
212.385 312.924 242.688 306.191 269.631 287.069 cv
269.631 287.069 278.855 302.923 280.02 325.312 cv
280.02 325.312 290.66 282.799 264.555 273.654 cv
238.449 264.509 206.398 278.614 212.385 312.924 cv
cp
.2 .098039 .027451 rgb
f
238.77 340.259 mo
242.189 348.603 255.844 345.916 256.793 340.179 cv
238.77 340.259 li
cp
1 1 1 rgb
f
240.426 341.25 mo
242.436 344.199 245.99 344.551 247.566 344.551 cv
247.568 344.551 li
250.965 344.551 254.162 343.097 255.354 341.183 cv
240.426 341.25 li
cp
247.568 346.547 mo
247.566 346.547 li
242.996 346.546 239.363 344.336 237.846 340.638 cv
237.721 340.33 237.756 339.98 237.941 339.705 cv
238.125 339.429 238.434 339.261 238.766 339.261 cv
256.789 339.181 li
256.791 339.181 256.791 339.181 256.793 339.181 cv
257.086 339.181 257.363 339.31 257.553 339.533 cv
257.742 339.755 257.826 340.052 257.775 340.342 cv
257.135 344.226 252.082 346.547 247.568 346.547 cv
cp
.639216 .431373 .27451 rgb
f
256.34 361.064 mo
256.34 360.993 256.358 360.925 256.389 360.864 cv
255.339 360.135 253.994 358.958 253.994 358.958 cv
253.939 359.258 253.869 359.554 253.803 359.852 cv
252.27 366.64 247.836 367.877 247.836 367.877 cv
247.836 367.877 243.335 365.816 242.347 359.869 cv
242.296 359.563 242.246 359.258 242.215 358.958 cv
242.215 358.958 240.54 360.567 239.67 361.041 cv
239.671 361.048 239.676 361.055 239.676 361.064 cv
239.674 361.228 234.865 360.087 242.515 371.697 cv
242.639 371.698 247.465 371.697 247.588 371.697 cv
247.998 371.697 252.523 371.705 252.932 371.697 cv
260.564 360.094 256.342 361.228 256.34 361.064 cv
cp
1 1 1 rgb
f
234.271 363.334 mo
234.263 363.282 234.255 363.229 234.246 363.175 cv
228.518 366.205 227.633 365.178 225.48 371.697 cv
232.236 371.697 li
236.182 371.697 234.787 367.947 234.271 363.334 cv
cp
f
263.891 371.697 mo
270.73 371.697 li
268.529 365.022 267.285 365.981 261.768 363.078 cv
261.006 368.575 259.932 371.697 263.891 371.697 cv
cp
f
239.676 361.064 mo
239.676 361.055 239.671 361.048 239.67 361.041 cv
239.664 360.9 239.596 360.768 239.477 360.691 cv
239.35 360.608 239.191 360.597 239.055 360.66 cv
237.141 361.534 235.561 362.287 234.238 362.986 cv
234.253 363.099 234.258 363.22 234.271 363.334 cv
234.787 367.947 232.236 371.697 232.236 371.697 cv
232.197 371.792 239.664 371.668 245.22 371.697 cv
241.29 368.46 239.674 361.228 239.676 361.064 cv
cp
.54902 .454902 .329412 rgb
f
263.891 371.697 mo
263.891 371.697 261.006 368.575 261.768 363.078 cv
261.771 363.047 261.773 363.017 261.777 362.986 cv
260.455 362.287 258.873 361.534 256.963 360.66 cv
256.824 360.597 256.666 360.608 256.537 360.691 cv
256.472 360.734 256.422 360.795 256.389 360.864 cv
256.358 360.925 256.34 360.993 256.34 361.064 cv
256.342 361.228 255.99 367.783 250.811 371.697 cv
256.352 371.602 263.982 371.919 263.891 371.697 cv
cp
f
129.098 732.397 mo
111.936 732.397 li
111.936 711.384 li
129.098 711.384 li
129.098 732.397 li
cp
1 .8 .6 rgb
f
137.859 726.491 mo
103.141 726.497 li
94.0508 729.779 88.5703 732.563 85.7871 737.65 cv
155.228 737.65 li
152.444 732.56 146.959 729.776 137.859 726.491 cv
cp
.427451 .290196 .168627 rgb
f
133.76 725.175 mo
133.163 724.866 132.578 724.553 132.578 724.553 cv
132.578 724.553 128.973 721.162 129.098 721.205 cv
129.223 721.249 120.518 726.658 120.518 726.658 cv
111.936 721.205 li
108.438 724.663 li
108.438 724.663 107.877 724.928 107.243 725.211 cv
107.22 727.529 li
107.641 737.65 li
133.362 737.65 li
133.783 727.529 li
133.76 725.175 li
cp
1 1 1 rgb
f
107.243 725.211 mo
107.248 724.7 li
103.604 725.94 li
103.488 725.945 103.383 726.015 103.332 726.119 cv
103.141 726.497 li
97.668 737.293 li
97.6104 737.411 97.6289 737.554 97.7168 737.65 cv
97.7168 737.65 105.674 737.285 107.641 737.65 cv
107.22 727.529 li
107.243 725.211 li
cp
.298039 .184314 .098039 rgb
f
143.285 737.65 mo
143.373 737.554 143.393 737.411 143.335 737.293 cv
137.859 726.491 li
137.671 726.119 li
137.619 726.015 137.514 725.945 137.398 725.94 cv
133.754 724.7 li
133.76 725.175 li
133.783 727.529 li
133.362 737.65 li
135.33 737.285 143.285 737.65 143.285 737.65 cv
cp
f
139.344 685.809 mo
138.289 691.806 141.845 696.803 147.292 697.88 cv
152.739 698.956 158.005 695.705 159.059 689.705 cv
160.114 683.707 156.557 677.97 151.112 676.893 cv
145.667 675.817 140.398 679.809 139.344 685.809 cv
cp
1 .8 .6 rgb
f
101.349 685.809 mo
102.404 691.806 98.8472 696.803 93.4014 697.88 cv
87.9551 698.956 82.6875 695.705 81.6338 689.705 cv
80.5786 683.707 84.1353 677.97 89.5806 676.893 cv
95.0259 675.817 100.294 679.809 101.349 685.809 cv
cp
f
147.696 646.182 mo
142.576 638.818 134.088 633.389 125.285 633.039 cv
125.283 633.039 125.112 633.033 124.829 633.021 cv
124.838 632.677 li
124.838 632.677 122.704 632.762 120.502 632.85 cv
118.297 632.762 116.162 632.677 116.162 632.677 cv
116.173 633.021 li
115.89 633.033 115.718 633.039 115.716 633.039 cv
106.913 633.389 98.6421 638.974 93.3062 646.182 cv
84.4688 658.117 88.4219 684.825 90.333 694.228 cv
95.6724 714.203 108.132 717.615 120.5 717.615 cv
132.87 717.615 145.772 714.203 150.668 694.228 cv
152.579 685.852 156.724 659.166 147.696 646.182 cv
cp
f
111.47 735.504 mo
107.813 725.396 li
107.688 725.051 107.865 724.67 108.211 724.545 cv
108.559 724.42 108.938 724.601 109.063 724.943 cv
112.073 733.264 li
119.926 726.686 li
120.205 726.449 120.626 726.485 120.862 726.769 cv
121.098 727.05 121.062 727.47 120.779 727.706 cv
111.47 735.504 li
cp
.690196 .678431 .698039 rgb
f
129.229 735.499 mo
119.926 727.706 li
119.644 727.47 119.607 727.05 119.844 726.769 cv
120.08 726.485 120.501 726.449 120.779 726.686 cv
128.639 733.269 li
131.687 725.046 li
131.813 724.7 132.196 724.525 132.54 724.653 cv
132.885 724.781 133.061 725.165 132.932 725.507 cv
129.229 735.499 li
cp
f
98.1406 675.495 mo
97.8164 675.495 97.4912 675.374 97.2363 675.134 cv
96.7109 674.635 96.6895 673.804 97.1875 673.277 cv
98.6367 671.75 102 671.059 104.691 671.05 cv
104.707 671.05 104.725 671.05 104.742 671.05 cv
106.489 671.05 109.625 671.329 111.385 673.162 cv
111.888 673.686 111.871 674.517 111.348 675.019 cv
110.823 675.52 109.994 675.505 109.49 674.98 cv
108.705 674.162 106.933 673.677 104.744 673.677 cv
104.73 673.677 104.715 673.677 104.699 673.677 cv
102.054 673.686 99.7305 674.414 99.0938 675.084 cv
98.834 675.355 98.4883 675.495 98.1406 675.495 cv
cp
.227451 .117647 .039216 rgb
f
130.904 675.56 mo
130.506 675.56 130.113 675.38 129.854 675.038 cv
129.418 674.458 129.532 673.635 130.111 673.198 cv
134.072 670.209 141.617 670.281 144.532 673.339 cv
145.032 673.864 145.014 674.696 144.488 675.197 cv
143.963 675.696 143.132 675.678 142.631 675.152 cv
140.613 673.033 134.582 673.115 131.695 675.295 cv
131.458 675.473 131.18 675.56 130.904 675.56 cv
cp
f
119.686 707.507 mo
119.357 707.507 119.037 707.498 118.726 707.483 cv
114.939 707.289 111.852 706.067 110.253 704.13 cv
109.791 703.57 109.871 702.743 110.432 702.28 cv
110.99 701.818 111.818 701.898 112.279 702.459 cv
113.377 703.788 115.898 704.709 118.859 704.858 cv
122.525 705.049 125.982 704.063 127.707 702.359 cv
128.225 701.851 129.055 701.854 129.565 702.371 cv
130.074 702.887 130.07 703.719 129.555 704.229 cv
127.097 706.657 123.012 707.507 119.686 707.507 cv
cp
.729412 .52549 .388235 rgb
f
89.8735 676.227 mo
90.1187 671.396 89.2344 660.974 95.6118 658.242 cv
98.0601 657.195 102.061 653.852 104.426 653.104 cv
116.194 649.388 107.731 652.78 123.317 650.259 cv
131.989 648.854 140.792 654.958 145.475 655.65 cv
149.202 656.201 150.983 666.114 150.546 674.633 cv
150.441 676.71 150.467 678.45 149.954 682.483 cv
149.889 682.974 149.436 684.526 150.605 684.526 cv
151.803 684.526 152.532 682.033 153.032 678.401 cv
154.28 669.33 154.795 665.446 154.39 656.927 cv
154.251 653.996 154.633 644.167 148.692 642.494 cv
129.619 637.126 85.7437 632.002 85.7437 658.369 cv
85.7437 670.074 87.5103 683.958 88.7095 684.771 cv
89.8682 685.555 90.2031 684.472 90.1831 683.349 cv
90.1489 681.633 89.7676 678.316 89.8735 676.227 cv
cp
.227451 .117647 .039216 rgb
f
104.225 687.253 mo
101.854 687.253 99.0762 686.409 98.082 684.445 cv
97.7559 683.799 98.0156 683.009 98.6621 682.681 cv
99.3086 682.355 100.101 682.613 100.428 683.261 cv
100.797 683.992 102.617 684.725 104.617 684.615 cv
105.283 684.577 107.5 684.332 108.093 682.738 cv
108.344 682.059 109.099 681.714 109.781 681.965 cv
110.461 682.217 110.807 682.975 110.555 683.653 cv
109.781 685.738 107.616 687.077 104.765 687.238 cv
104.588 687.248 104.406 687.253 104.225 687.253 cv
cp
.729412 .52549 .388235 rgb
f
136.763 687.776 mo
136.602 687.776 136.439 687.773 136.274 687.765 cv
133.389 687.606 130.969 686.058 129.957 683.718 cv
129.669 683.051 129.976 682.278 130.641 681.99 cv
131.311 681.702 132.081 682.01 132.368 682.676 cv
133.102 684.371 134.941 685.061 136.417 685.142 cv
138.381 685.249 140.161 684.401 140.965 682.986 cv
141.324 682.354 142.127 682.135 142.756 682.492 cv
143.387 682.85 143.608 683.651 143.25 684.282 cv
142.01 686.466 139.553 687.776 136.763 687.776 cv
cp
f
151.807 678.497 mo
89.0464 678.497 li
88.3633 678.497 87.8086 677.943 87.8086 677.259 cv
87.8086 676.575 88.3633 676.021 89.0464 676.021 cv
151.807 676.021 li
152.49 676.021 153.044 676.575 153.044 677.259 cv
153.044 677.943 152.49 678.497 151.807 678.497 cv
cp
.196078 .094118 .023529 rgb
f
135.752 693.985 mo
132.404 693.985 129.646 692.881 127.556 690.7 cv
123.095 686.049 123.371 678.17 123.384 677.835 cv
123.414 677.09 124.016 676.507 124.791 676.54 cv
125.538 676.57 126.119 677.199 126.089 677.948 cv
126.086 678.017 125.855 685.025 129.518 688.835 cv
131.1 690.479 133.139 691.278 135.752 691.278 cv
139.641 691.278 142.673 690.185 144.762 688.028 cv
148.064 684.62 148.164 679.44 148.117 677.936 cv
148.094 677.188 148.681 676.563 149.428 676.538 cv
150.16 676.528 150.8 677.102 150.823 677.849 cv
150.896 680.124 150.639 685.854 146.707 689.913 cv
144.088 692.616 140.402 693.985 135.752 693.985 cv
cp
f
104.59 692.805 mo
100.186 692.805 96.6948 691.508 94.2163 688.949 cv
90.5073 685.12 90.2661 679.726 90.334 677.582 cv
90.3569 676.877 90.9541 676.354 91.6528 676.344 cv
92.3584 676.366 92.9131 676.958 92.8911 677.664 cv
92.8457 679.081 92.9409 683.956 96.0537 687.169 cv
98.0322 689.212 100.904 690.246 104.59 690.246 cv
107.068 690.246 109.001 689.489 110.499 687.933 cv
113.954 684.34 113.734 677.74 113.732 677.676 cv
113.704 676.97 114.252 676.376 114.958 676.346 cv
115.704 676.326 116.258 676.865 116.287 677.569 cv
116.3 677.883 116.561 685.305 112.351 689.695 cv
110.373 691.759 107.761 692.805 104.59 692.805 cv
cp
f
149.148 657.106 mo
147.067 658.525 144.577 659.26 141.926 658.841 cv
138.376 658.282 138.274 655.588 140.552 653.223 cv
136.257 658.369 119.398 664.184 112.205 661.491 cv
109.834 660.604 109.787 657.826 110.855 656.658 cv
109.816 657.659 100.676 664.299 95.2451 661.598 cv
92.6978 660.33 95.2949 657.077 95.2949 657.077 cv
92.1201 659.929 85.1816 662.355 82.272 659.091 cv
79.4141 655.886 83.1187 651.28 86.0493 649.483 cv
85.377 649.535 83.5054 649.798 82.6177 647.944 cv
80.7314 644.01 88.3208 636.292 101.387 631.836 cv
120.446 625.339 138.689 630.292 145.514 634.701 cv
148.872 636.867 153.308 640.738 154.218 645.053 cv
155.307 650.21 153.475 654.157 149.148 657.106 cv
cp
.756863 .580392 .298039 rgb
f
255.184 545.341 mo
241.044 545.341 li
241.044 524.511 li
255.184 524.511 li
255.184 545.341 li
cp
.956863 .803922 .596078 rgb
f
275.238 549.724 mo
272.322 541.347 270.813 540.325 262.269 536.403 cv
255.184 533.78 li
255.184 533.78 249.499 536.687 247.995 537.132 cv
246.491 536.687 241.044 533.78 241.044 533.78 cv
233.702 536.524 li
225.387 540.388 223.838 541.544 220.992 549.724 cv
220.933 549.892 275.297 549.892 275.238 549.724 cv
cp
.709804 .67451 .619608 rgb
f
288.263 491.64 mo
288.263 517.64 260.933 524.8 247.586 524.8 cv
232.79 524.8 206.91 517.64 206.91 491.64 cv
206.91 465.638 219.207 439.406 247.586 439.406 cv
279.948 439.406 288.263 465.638 288.263 491.64 cv
cp
.2 .098039 .027451 rgb
f
274.953 457.15 mo
269.096 448.844 263.082 448.587 253.385 448.185 cv
242.845 448.185 li
233.146 448.587 227.133 448.844 221.277 457.15 cv
215.416 465.462 217.635 467.619 218.098 477.646 cv
218.447 485.222 214.623 478.908 217.053 500.978 cv
219.383 522.151 238.485 528.806 248.114 528.806 cv
257.742 528.806 275.387 523.29 279.178 500.978 cv
282.956 478.74 278.675 472.636 276.456 465.384 cv
275.29 461.573 280.813 465.462 274.953 457.15 cv
cp
.956863 .803922 .596078 rgb
f
247.636 518.233 mo
244.183 518.233 240.177 517.388 237.981 514.96 cv
237.538 514.47 237.575 513.71 238.067 513.267 cv
238.56 512.821 239.317 512.86 239.763 513.351 cv
241.347 515.103 244.919 516.063 248.874 515.792 cv
251.919 515.585 254.506 514.655 255.31 513.479 cv
255.683 512.931 256.431 512.792 256.978 513.165 cv
257.525 513.538 257.665 514.286 257.292 514.833 cv
256.038 516.667 252.952 517.921 249.036 518.187 cv
248.585 518.218 248.115 518.233 247.636 518.233 cv
cp
.729412 .52549 .388235 rgb
f
226.627 488.067 mo
226.121 488.067 225.641 487.771 225.43 487.276 cv
225.148 486.614 225.457 485.853 226.117 485.571 cv
230.353 483.773 235.118 483.769 237.976 485.567 cv
238.583 485.95 238.767 486.751 238.384 487.358 cv
238.003 487.966 237.2 488.151 236.593 487.767 cv
234.845 486.667 231.14 486.259 227.135 487.964 cv
226.969 488.034 226.795 488.067 226.627 488.067 cv
cp
.227451 .117647 .039216 rgb
f
259.029 488.081 mo
258.622 488.081 258.22 487.89 257.967 487.53 cv
257.553 486.944 257.692 486.134 258.278 485.72 cv
260.528 484.13 267.569 483.636 270.446 485.329 cv
271.064 485.694 271.271 486.491 270.907 487.108 cv
270.543 487.728 269.745 487.931 269.128 487.569 cv
267.162 486.411 261.313 486.757 259.778 487.843 cv
259.55 488.003 259.289 488.081 259.029 488.081 cv
cp
f
234.075 504.491 mo
234.075 506.788 231.382 508.649 228.059 508.649 cv
224.734 508.649 222.039 506.788 222.039 504.491 cv
222.039 502.194 224.734 500.333 228.059 500.333 cv
231.382 500.333 234.075 502.194 234.075 504.491 cv
cp
.94902 .729412 .580392 rgb
f
274.133 504.491 mo
274.133 506.788 271.438 508.649 268.114 508.649 cv
264.79 508.649 262.096 506.788 262.096 504.491 cv
262.096 502.194 264.79 500.333 268.114 500.333 cv
271.438 500.333 274.133 502.194 274.133 504.491 cv
cp
f
270.787 465.384 mo
270.787 465.384 265.407 471.128 248.813 475.156 cv
213.484 483.734 215.457 490.392 215.457 490.392 cv
215.457 490.392 206.479 484.868 213.123 465.384 cv
222.039 439.24 262.069 438.67 271.79 451.073 cv
292.456 477.441 279.474 499.163 279.474 499.163 cv
279.474 499.163 279.456 480.656 270.787 465.384 cv
cp
.2 .098039 .027451 rgb
f
237.476 496.185 mo
237.214 496.185 236.948 496.106 236.72 495.94 cv
234.021 494.005 230.484 493.706 226.768 495.103 cv
226.096 495.354 225.346 495.015 225.094 494.341 cv
224.842 493.669 225.182 492.921 225.854 492.669 cv
230.412 490.96 234.808 491.372 238.233 493.829 cv
238.817 494.247 238.95 495.06 238.532 495.644 cv
238.278 495.997 237.88 496.185 237.476 496.185 cv
cp
.227451 .117647 .039216 rgb
f
258.825 496.185 mo
258.421 496.185 258.022 495.997 257.769 495.644 cv
257.35 495.06 257.483 494.247 258.066 493.829 cv
261.492 491.372 265.893 490.96 270.447 492.669 cv
271.119 492.921 271.46 493.669 271.208 494.341 cv
270.954 495.013 270.203 495.354 269.535 495.103 cv
265.813 493.704 262.279 494.005 259.582 495.94 cv
259.353 496.106 259.088 496.185 258.825 496.185 cv
cp
f
390.84 729.423 mo
390.84 729.423 375.301 733.095 374.321 733.69 cv
374.219 733.644 374.428 733.683 374.321 733.69 cv
357.245 729.54 li
349.338 732.237 344.44 734.335 341.367 737.58 cv
407.053 737.58 li
403.938 734.294 398.938 732.179 390.84 729.423 cv
cp
.376471 .372549 .427451 rgb
f
382.844 735.37 mo
365.586 735.37 li
365.586 714.237 li
382.844 714.237 li
382.844 735.37 li
cp
.878431 .666667 .47451 rgb
f
369.884 733.532 mo
373.667 730.704 li
373.633 730.677 li
373.351 730.446 373.309 730.03 373.54 729.747 cv
373.661 729.601 373.831 729.521 374.007 729.509 cv
365.586 724.29 li
363.713 726.058 li
364.276 728.351 li
361.51 737.58 li
362.357 737.648 372.255 737.58 372.255 737.58 cv
369.884 733.532 li
cp
1 1 1 rgb
f
378.09 734.317 mo
373.667 730.704 li
369.884 733.532 li
372.255 737.58 li
372.255 737.58 373.159 737.58 374.207 737.58 cv
375.254 737.58 376.157 737.58 376.157 737.58 cv
378.09 734.317 li
cp
.235294 .192157 .247059 rgb
f
365.422 737.58 mo
365.231 737.58 365.042 737.74 364.911 737.58 cv
364.68 737.297 364.721 736.935 365.004 736.704 cv
373.633 729.653 li
373.916 729.421 374.333 729.464 374.563 729.747 cv
374.793 730.03 374.751 730.446 374.469 730.677 cv
365.84 737.58 li
365.717 737.681 365.569 737.58 365.422 737.58 cv
cp
.690196 .678431 .698039 rgb
f
378.09 734.317 mo
376.157 737.58 li
381.62 737.58 li
378.09 734.317 li
cp
1 1 1 rgb
f
381.973 735.786 mo
384.027 727.546 li
384.301 726.005 li
384.301 726.005 382.719 724.247 382.844 724.29 cv
382.961 724.331 375.301 728.979 374.321 729.575 cv
374.372 729.599 374.424 729.616 374.469 729.653 cv
381.973 735.786 li
cp
f
373.54 729.747 mo
373.309 730.03 373.351 730.446 373.633 730.677 cv
373.667 730.704 li
378.09 734.317 li
381.62 737.58 li
381.973 735.786 li
374.469 729.653 li
374.424 729.616 374.372 729.599 374.321 729.575 cv
374.219 729.528 374.115 729.503 374.007 729.509 cv
373.831 729.521 373.661 729.601 373.54 729.747 cv
cp
.690196 .678431 .698039 rgb
f
363.713 726.058 mo
361.797 726.763 li
361.795 726.765 361.788 726.765 361.787 726.765 cv
357.613 728.308 li
357.5 728.339 357.415 728.429 357.39 728.544 cv
357.245 729.54 li
356.369 737.58 li
356.343 737.707 366.651 737.58 366.651 737.58 cv
364.276 728.351 li
363.713 726.058 li
cp
.486275 .486275 .537255 rgb
f
390.84 729.423 mo
390.711 728.544 li
390.688 728.429 390.602 728.339 390.49 728.308 cv
386.316 726.765 li
386.308 726.763 386.28 726.761 386.264 726.761 cv
384.301 726.005 li
384.027 727.546 li
381.973 735.786 li
381.62 737.58 li
381.62 737.58 li
392.011 737.58 li
392.122 737.508 390.84 729.423 390.84 729.423 cv
cp
f
392.545 688.289 mo
391.504 694.201 395.011 699.126 400.38 700.188 cv
405.748 701.247 410.941 698.044 411.979 692.13 cv
413.021 686.216 409.513 680.561 404.146 679.5 cv
398.779 678.438 393.583 682.371 392.545 688.289 cv
cp
.878431 .666667 .47451 rgb
f
355.091 688.289 mo
356.131 694.201 352.625 699.126 347.256 700.188 cv
341.888 701.247 336.696 698.044 335.657 692.13 cv
334.617 686.216 338.124 680.561 343.491 679.5 cv
348.858 678.438 354.052 682.371 355.091 688.289 cv
cp
f
400.605 648.447 mo
395.365 641.325 387.192 636.651 378.514 636.305 cv
378.512 636.305 378.343 636.299 378.064 636.288 cv
378.074 635.946 li
378.074 635.946 375.971 636.032 373.798 636.117 cv
371.626 636.032 369.521 635.946 369.521 635.946 cv
369.531 636.288 li
369.252 636.299 369.083 636.305 369.083 636.305 cv
360.403 636.651 352.231 641.325 346.991 648.447 cv
341.746 655.572 341.048 664.549 341.461 673.145 cv
341.774 679.64 342.923 690.127 343.246 696.624 cv
348.51 716.313 361.605 719.679 373.798 719.679 cv
385.99 719.679 399.522 716.313 404.35 696.624 cv
404.671 690.127 405.821 679.64 406.135 673.145 cv
406.547 664.549 405.851 655.572 400.605 648.447 cv
cp
f
360.905 685.979 mo
360.905 688.563 359.142 690.655 356.965 690.655 cv
354.79 690.655 353.025 688.563 353.025 685.979 cv
353.025 683.397 354.79 681.306 356.965 681.306 cv
359.142 681.306 360.905 683.397 360.905 685.979 cv
cp
.227451 .117647 .039216 rgb
f
394.748 685.979 mo
394.748 688.563 392.984 690.655 390.808 690.655 cv
388.632 690.655 386.868 688.563 386.868 685.979 cv
386.868 683.397 388.632 681.306 390.808 681.306 cv
392.984 681.306 394.748 683.397 394.748 685.979 cv
cp
f
351.456 677.399 mo
351.131 677.399 350.806 677.28 350.552 677.038 cv
350.026 676.54 350.004 675.708 350.504 675.183 cv
352.756 672.808 359.35 671.343 363.221 674.015 cv
363.818 674.429 363.968 675.247 363.555 675.843 cv
363.143 676.438 362.326 676.589 361.729 676.177 cv
358.904 674.226 353.814 675.511 352.409 676.991 cv
352.151 677.263 351.803 677.399 351.456 677.399 cv
cp
f
406.061 698.133 mo
405.9 696.489 405.717 694.628 405.826 692.515 cv
406.135 686.317 406.009 686.185 405.861 686.03 cv
405.784 685.948 405.672 685.899 405.56 685.899 cv
405.158 685.899 405.107 686.263 405.016 686.924 cv
404.993 687.087 402.612 703.237 390.622 703.237 cv
389.779 703.237 388.925 702.96 387.744 702.578 cv
385.301 701.786 381.608 700.586 374.076 700.586 cv
368.293 700.586 364.741 701.414 361.887 702.081 cv
360.01 702.517 358.527 702.861 356.922 702.861 cv
352.065 702.861 348.413 700.508 346.065 695.87 cv
344.159 692.101 343.822 688.111 343.79 687.666 cv
343.79 687.664 li
343.79 687.657 343.79 687.648 343.789 687.639 cv
343.788 687.619 343.787 687.599 343.785 687.581 cv
343.782 687.561 li
343.736 687.211 343.512 687.156 343.376 687.156 cv
343.264 687.156 343.156 687.203 343.079 687.285 cv
342.963 687.41 342.967 687.53 342.978 687.697 cv
342.978 687.701 342.977 687.702 342.977 687.704 cv
343.004 689.059 343.058 690.065 343.1 690.81 cv
343.063 690.803 343.026 690.793 342.988 690.799 cv
342.771 690.81 342.603 690.989 342.603 691.205 cv
342.603 691.612 li
342.603 691.701 342.615 691.765 342.668 691.834 cv
342.669 691.836 342.671 691.841 342.672 691.843 cv
342.854 693.448 343.214 696.668 342.885 698.027 cv
342.258 700.626 341.788 704.167 343.115 706.282 cv
343.561 706.996 344.177 707.494 344.952 707.768 cv
343.918 709.937 343.951 712.217 345.058 714.089 cv
345.938 715.572 347.368 716.519 348.729 716.486 cv
349.034 720.931 352.15 722.527 355.034 722.527 cv
355.571 722.527 356.096 722.473 356.574 722.369 cv
357.817 725.386 360.622 726.474 362.889 726.474 cv
364.566 726.474 366.023 725.916 366.796 725.033 cv
367.714 726.66 369.538 727.71 371.559 727.71 cv
373.503 727.71 375.191 726.757 376.173 725.13 cv
376.898 725.758 378.543 726.931 380.686 726.931 cv
382.754 726.931 384.715 725.845 386.518 723.706 cv
387.226 724.209 388.123 724.472 389.135 724.472 cv
391.967 724.472 395.19 722.422 395.606 719.609 cv
395.862 719.646 396.114 719.664 396.361 719.664 cv
396.361 719.664 396.361 719.664 396.362 719.664 cv
398.066 719.664 399.536 718.783 400.393 717.247 cv
401.177 715.84 401.296 714.127 400.738 712.809 cv
401.69 712.529 402.707 711.718 403.409 710.637 cv
404.03 709.682 404.903 707.731 404.03 705.126 cv
406.625 703.864 406.386 701.438 406.061 698.133 cv
cp
f
396.585 677.511 mo
396.238 677.511 395.892 677.372 395.633 677.103 cv
393.621 674.991 388.825 675.046 385.949 677.22 cv
385.371 677.655 384.546 677.544 384.109 676.964 cv
383.671 676.386 383.787 675.562 384.365 675.124 cv
388.326 672.136 394.601 672.212 397.535 675.29 cv
398.035 675.815 398.015 676.647 397.491 677.147 cv
397.236 677.39 396.91 677.511 396.585 677.511 cv
cp
f
373.883 709.827 mo
370.491 709.827 367.219 708.642 365.154 706.601 cv
364.674 706.125 364.669 705.353 365.144 704.872 cv
365.617 704.394 366.39 704.391 366.87 704.86 cv
370.058 708.012 377.203 708.56 381.298 704.512 cv
381.778 704.042 382.552 704.044 383.024 704.524 cv
383.499 705.004 383.495 705.777 383.015 706.252 cv
380.504 708.734 377.137 709.827 373.883 709.827 cv
cp
.639216 .431373 .27451 rgb
f
343.375 680.568 mo
343.614 675.807 342.622 663.364 348.239 661.124 cv
350.189 660.347 351.358 660.535 353.305 661.131 cv
355.926 661.934 359.763 661.331 362.08 659.949 cv
366.012 663.009 371.365 661.56 373.4 659.413 cv
373.379 659.43 375.344 661.663 379.618 662.021 cv
382.163 662.235 384.783 662.09 387.319 661.927 cv
391.528 661.655 397.62 660.552 399.601 660.822 cv
405 661.558 404.896 671.494 404.944 675.925 cv
404.964 677.975 404.944 683.947 403.437 693.114 cv
403.356 693.595 403.607 693.603 404.279 693.526 cv
405.03 693.44 405.305 693.052 405.419 692.495 cv
406.308 688.238 407.475 675.122 408.63 670.985 cv
410.525 664.192 411.97 654.109 409.52 648.478 cv
408.82 646.865 404.847 641.897 400.9 642.2 cv
404.854 634.391 396.99 630.274 390.596 630.013 cv
380.275 629.593 371.757 631.938 362.115 635.177 cv
356.77 636.973 352.62 639.168 348.065 642.654 cv
344.135 645.663 342.086 648.255 340.899 652.956 cv
338.371 662.965 341.137 681.847 342.603 691.894 cv
342.75 692.905 342.886 693.945 343.143 694.938 cv
343.704 697.104 345.896 695.669 345.375 694.427 cv
343.453 689.858 343.271 682.627 343.375 680.568 cv
cp
.227451 .117647 .039216 rgb
f
340.556 675.857 mo
340.556 675.857 360.96 655.454 365.124 648.469 cv
365.124 648.469 374.604 660.323 390.622 666.333 cv
406.64 672.346 407.696 675.961 407.696 675.961 cv
407.696 675.961 412.162 670.584 414.916 657.83 cv
418.929 639.229 399.449 604.374 353.939 623.505 cv
353.939 623.505 321.183 637.254 340.556 675.857 cv
cp
.176471 .494118 .619608 rgb
f
364.955 648.443 mo
364.792 648.443 364.632 648.378 364.51 648.253 cv
364.082 647.81 354.014 637.258 353.322 624.556 cv
353.304 624.215 353.565 623.924 353.906 623.905 cv
354.244 623.875 354.538 624.149 354.557 624.488 cv
355.222 636.722 365.298 647.289 365.399 647.394 cv
365.636 647.641 365.629 648.031 365.384 648.27 cv
365.264 648.384 365.109 648.443 364.955 648.443 cv
cp
.109804 .380392 .54902 rgb
f
406.135 673.764 mo
405.872 673.764 405.628 673.595 405.544 673.332 cv
405.43 672.967 393.656 636.751 356.61 623.784 cv
356.288 623.67 356.118 623.317 356.23 622.996 cv
356.343 622.673 356.695 622.502 357.019 622.616 cv
394.664 635.794 406.607 672.591 406.724 672.961 cv
406.827 673.286 406.645 673.633 406.319 673.736 cv
406.258 673.755 406.195 673.764 406.135 673.764 cv
cp
f
412.162 665.333 mo
411.83 665.333 411.555 665.067 411.544 664.735 cv
411.541 664.632 411.136 654.343 405.306 643.846 cv
399.944 634.192 388.744 622.368 365.83 620.864 cv
365.489 620.843 365.231 620.55 365.253 620.209 cv
365.276 619.867 365.571 619.613 365.911 619.633 cv
389.406 621.175 400.903 633.349 406.412 643.29 cv
412.371 654.044 412.776 664.59 412.78 664.695 cv
412.791 665.035 412.523 665.322 412.184 665.333 cv
412.176 665.333 412.169 665.333 412.162 665.333 cv
cp
f
339.009 670.624 mo
338.976 670.624 338.944 670.622 338.911 670.617 cv
338.574 670.564 338.343 670.247 338.397 669.909 cv
338.422 669.745 341.198 653.328 358.746 641.511 cv
359.028 641.32 359.413 641.396 359.604 641.678 cv
359.794 641.963 359.72 642.344 359.437 642.536 cv
342.33 654.057 339.644 669.943 339.617 670.104 cv
339.57 670.406 339.307 670.624 339.009 670.624 cv
cp
f
335.475 658.923 mo
335.454 658.923 335.433 658.921 335.411 658.919 cv
335.071 658.885 334.824 658.581 334.859 658.242 cv
334.88 658.031 337.178 637.258 353.648 628.454 cv
353.947 628.295 354.323 628.405 354.485 628.707 cv
354.646 629.009 354.532 629.384 354.231 629.546 cv
338.35 638.033 336.109 658.166 336.089 658.367 cv
336.056 658.685 335.787 658.923 335.475 658.923 cv
cp
f
478.486 496.842 mo
479.078 501.617 476.328 505.887 472.342 506.381 cv
468.355 506.875 464.645 503.404 464.055 498.629 cv
463.463 493.855 466.215 489.587 470.201 489.093 cv
474.188 488.599 477.896 492.069 478.486 496.842 cv
cp
1 .8 .6 rgb
f
526.053 496.842 mo
525.461 501.617 528.211 505.887 532.197 506.381 cv
536.184 506.875 539.895 503.404 540.486 498.629 cv
541.078 493.855 538.324 489.587 534.338 489.093 cv
530.352 488.599 526.643 492.069 526.053 496.842 cv
cp
f
527.453 546.893 mo
524.786 540.215 521.975 538.756 509.342 533.088 cv
507.117 532.283 503.773 533.143 502.27 533.613 cv
500.766 533.143 497.422 532.283 495.197 533.088 cv
485.807 537.303 481.846 539.189 479.334 542.623 cv
494.111 548.781 511.694 550.33 527.453 546.893 cv
cp
f
529.109 458.362 mo
523.252 450.055 517.238 449.799 507.541 449.397 cv
497 449.397 li
487.301 449.799 481.287 450.055 475.432 458.362 cv
469.57 466.674 471.791 468.829 472.254 478.856 cv
472.604 486.433 468.074 481.118 471.207 502.188 cv
474.342 523.26 492.641 530.018 502.27 530.018 cv
511.898 530.018 528.824 524.367 533.334 502.188 cv
537.842 480.01 531.936 486.433 532.287 478.856 cv
532.748 468.829 534.969 466.674 529.109 458.362 cv
cp
f
509.34 546.553 mo
495.199 546.553 li
495.199 524.723 li
509.34 524.723 li
509.34 546.553 li
cp
f
501.791 519.445 mo
498.338 519.445 494.332 518.598 492.139 516.172 cv
491.693 515.68 491.73 514.922 492.223 514.477 cv
492.715 514.033 493.475 514.07 493.918 514.561 cv
495.504 516.314 499.088 517.273 503.029 517.004 cv
506.074 516.797 508.662 515.865 509.465 514.689 cv
509.838 514.143 510.586 514.002 511.133 514.375 cv
511.682 514.75 511.82 515.496 511.447 516.043 cv
510.193 517.877 507.107 519.131 503.191 519.398 cv
502.74 519.428 502.271 519.445 501.791 519.445 cv
cp
.729412 .52549 .388235 rgb
f
489.271 496.664 mo
489.271 499.457 487.363 501.721 485.01 501.721 cv
482.656 501.721 480.746 499.457 480.746 496.664 cv
480.746 493.871 482.656 491.606 485.01 491.606 cv
487.363 491.606 489.271 493.871 489.271 496.664 cv
cp
.227451 .117647 .039216 rgb
f
490.385 487.681 mo
490.027 487.681 489.67 487.532 489.412 487.243 cv
488.207 485.882 486.58 485.573 485.426 485.554 cv
483.654 485.528 481.713 486.214 480.707 487.276 cv
480.213 487.796 479.389 487.817 478.869 487.323 cv
478.35 486.829 478.328 486.007 478.822 485.487 cv
480.346 483.879 482.895 482.926 485.471 482.954 cv
487.838 482.995 489.93 483.907 491.357 485.521 cv
491.834 486.058 491.783 486.878 491.246 487.354 cv
491 487.573 490.691 487.681 490.385 487.681 cv
cp
f
515.211 487.536 mo
514.932 487.536 514.648 487.446 514.41 487.259 cv
513.846 486.815 513.748 485.999 514.189 485.435 cv
515.283 484.042 517.348 483.108 519.58 483.002 cv
521.939 482.889 524.102 483.719 525.646 485.341 cv
526.143 485.86 526.123 486.683 525.604 487.177 cv
525.084 487.673 524.262 487.653 523.766 487.134 cv
522.395 485.692 520.631 485.556 519.705 485.599 cv
518.035 485.679 516.734 486.401 516.234 487.038 cv
515.979 487.366 515.598 487.536 515.211 487.536 cv
cp
f
523.736 496.664 mo
523.736 499.457 521.826 501.721 519.475 501.721 cv
517.121 501.721 515.213 499.457 515.213 496.664 cv
515.213 493.869 517.121 491.604 519.475 491.604 cv
521.826 491.604 523.736 493.869 523.736 496.664 cv
cp
f
488.23 507.703 mo
488.23 510 485.537 511.861 482.213 511.861 cv
478.889 511.861 476.193 510 476.193 507.703 cv
476.193 505.406 478.889 503.545 482.213 503.545 cv
485.537 503.545 488.23 505.406 488.23 507.703 cv
cp
.988235 .690196 .584314 rgb
f
528.289 507.703 mo
528.289 510 525.594 511.861 522.27 511.861 cv
518.945 511.861 516.252 510 516.252 507.703 cv
516.252 505.406 518.945 503.545 522.27 503.545 cv
525.594 503.545 528.289 505.406 528.289 507.703 cv
cp
f
522.996 450.53 mo
513.426 444.182 499.639 443.551 488.625 447.145 cv
482.609 449.108 468.045 454.307 466.461 473.872 cv
464.365 488.085 469.373 496.949 469.373 496.949 cv
469.373 496.949 470.098 484.192 495.199 477.192 cv
511.648 472.604 517.174 467.418 517.174 467.418 cv
517.174 467.418 518.955 474.493 525.973 481.784 cv
535.322 491.499 534.473 498.797 534.473 498.797 cv
534.473 498.797 537.752 493.824 538.232 485.464 cv
538.234 485.46 538.236 485.456 538.236 485.452 cv
540.07 476.118 538.561 460.85 522.996 450.53 cv
cp
.309804 .184314 .098039 rgb
f
523.307 442.954 mo
523.307 454.397 514.748 456.29 504.191 456.29 cv
493.633 456.29 485.074 453.45 485.074 442.954 cv
485.074 435.588 493.633 429.618 504.191 429.618 cv
514.748 429.618 523.307 435.588 523.307 442.954 cv
cp
f
529.42 549.85 mo
526.186 540.064 524.684 539.52 513.363 534.33 cv
513.211 534.262 513.037 534.266 512.891 534.348 cv
512.744 534.428 512.678 534.58 512.623 534.738 cv
510.039 542.033 495.205 542.367 492.537 534.553 cv
492.516 534.439 li
492.488 534.279 492.387 534.141 492.242 534.066 cv
492.1 533.99 491.928 533.984 491.781 534.053 cv
479.924 539.459 478.367 540.029 475.119 549.85 cv
529.42 549.85 li
cp
.407843 .294118 .458824 rgb
f
781.751 729.773 mo
779.2 726.934 775.153 725.07 766.59 721.32 cv
764.365 720.535 761.021 721.375 759.518 721.832 cv
758.016 721.375 754.672 720.535 752.447 721.32 cv
741.989 725.9 738.265 727.666 735.777 731.834 cv
748.124 738.987 770.679 738.081 781.751 729.773 cv
cp
1 .831373 .682353 rgb
f
786.356 646.334 mo
780.499 638.027 774.485 637.771 764.789 637.369 cv
754.248 637.369 li
744.549 637.771 738.535 638.027 732.68 646.334 cv
726.818 654.646 729.039 656.801 729.502 666.828 cv
729.852 674.404 725.322 669.09 728.457 690.16 cv
731.59 711.232 749.889 717.99 759.518 717.99 cv
769.146 717.99 786.071 712.34 790.581 690.16 cv
795.089 667.982 789.183 674.404 789.534 666.828 cv
789.995 656.801 792.216 654.646 786.356 646.334 cv
cp
f
766.588 733.525 mo
752.447 733.525 li
752.447 711.695 li
766.588 711.695 li
766.588 733.525 li
cp
f
758.84 708.086 mo
755.521 708.086 752.566 706.785 750.455 704.373 cv
750.019 703.875 750.068 703.117 750.567 702.68 cv
751.066 702.242 751.824 702.293 752.261 702.791 cv
754.654 705.525 757.799 705.768 759.471 705.668 cv
762.045 705.514 764.564 704.352 765.597 702.842 cv
765.971 702.293 766.718 702.154 767.265 702.529 cv
767.812 702.902 767.952 703.648 767.578 704.195 cv
766.11 706.344 762.984 707.861 759.613 708.063 cv
759.354 708.078 759.096 708.086 758.84 708.086 cv
cp
.776471 .556863 .458824 rgb
f
746.52 684.635 mo
746.52 687.43 744.611 689.693 742.258 689.693 cv
739.904 689.693 737.996 687.43 737.996 684.635 cv
737.996 681.844 739.904 679.576 742.258 679.576 cv
744.611 679.576 746.52 681.844 746.52 684.635 cv
cp
.227451 .117647 .039216 rgb
f
747.635 676.6 mo
747.275 676.6 746.918 676.451 746.662 676.16 cv
745.457 674.801 743.828 674.49 742.676 674.471 cv
740.837 674.434 738.963 675.133 737.955 676.193 cv
737.46 676.715 736.638 676.734 736.117 676.242 cv
735.598 675.748 735.576 674.926 736.07 674.404 cv
737.594 672.799 740.152 671.832 742.72 671.873 cv
745.088 671.914 747.178 672.824 748.607 674.438 cv
749.083 674.975 749.033 675.797 748.496 676.271 cv
748.248 676.49 747.941 676.6 747.635 676.6 cv
cp
f
772.458 676.508 mo
772.179 676.508 771.896 676.416 771.657 676.23 cv
771.093 675.787 770.995 674.969 771.438 674.404 cv
772.53 673.012 774.597 672.08 776.829 671.973 cv
779.196 671.865 781.351 672.689 782.896 674.311 cv
783.39 674.83 783.37 675.652 782.851 676.148 cv
782.333 676.645 781.509 676.623 781.015 676.104 cv
779.644 674.664 777.882 674.518 776.952 674.57 cv
775.282 674.65 773.981 675.373 773.481 676.01 cv
773.226 676.336 772.845 676.508 772.458 676.508 cv
cp
f
780.983 684.635 mo
780.983 687.43 779.073 689.693 776.722 689.693 cv
774.368 689.693 772.46 687.43 772.46 684.635 cv
772.46 681.842 774.368 679.576 776.722 679.576 cv
779.073 679.576 780.983 681.842 780.983 684.635 cv
cp
f
745.48 695.676 mo
745.48 697.971 742.785 699.834 739.461 699.834 cv
736.137 699.834 733.443 697.971 733.443 695.676 cv
733.443 693.379 736.137 691.518 739.461 691.518 cv
742.785 691.518 745.48 693.379 745.48 695.676 cv
cp
1 .713726 .623529 rgb
f
785.536 695.676 mo
785.536 697.971 782.841 699.834 779.517 699.834 cv
776.192 699.834 773.499 697.971 773.499 695.676 cv
773.499 693.379 776.192 691.518 779.517 691.518 cv
782.841 691.518 785.536 693.379 785.536 695.676 cv
cp
f
793.382 637.984 mo
791.368 645.84 780.835 649.924 769.854 647.111 cv
758.873 644.295 751.602 635.646 753.615 627.791 cv
755.629 619.936 766.164 615.85 777.146 618.664 cv
788.126 621.479 795.396 630.129 793.382 637.984 cv
cp
.666667 .129412 .294118 rgb
f
766.559 681.346 mo
766.586 683.18 767.731 686.781 769.257 688.945 cv
770.575 690.814 772.96 691.887 775.798 691.887 cv
781.569 691.887 787.7 687.594 787.796 679.635 cv
787.354 679.322 785.476 678.662 780.886 678.662 cv
773.437 678.662 767.222 680.252 766.559 681.346 cv
cp
775.798 694.484 mo
772.103 694.484 768.944 693.012 767.134 690.443 cv
765.235 687.752 763.96 683.531 763.96 681.281 cv
763.96 676.123 780.716 676.063 780.886 676.063 cv
787.286 676.063 790.397 677.17 790.397 679.445 cv
790.397 689.213 782.876 694.484 775.798 694.484 cv
cp
.227451 .117647 .039216 rgb
f
730.91 679.629 mo
731.003 687.592 737.136 691.885 742.908 691.887 cv
742.91 691.887 li
745.748 691.887 748.133 690.814 749.45 688.945 cv
750.994 686.756 752.148 683.094 752.148 681.281 cv
751.715 680.227 745.643 678.59 738.155 678.59 cv
733.316 678.59 731.357 679.299 730.91 679.629 cv
cp
742.91 694.484 mo
742.909 694.484 742.909 694.484 742.908 694.484 cv
735.832 694.484 728.311 689.213 728.311 679.445 cv
728.311 678.59 728.311 675.992 738.155 675.992 cv
738.832 675.992 754.747 676.051 754.747 681.281 cv
754.747 683.533 753.473 687.752 751.574 690.443 cv
749.762 693.012 746.604 694.484 742.91 694.484 cv
cp
f
753.654 684.09 mo
753.23 684.09 752.815 683.883 752.566 683.502 cv
752.172 682.902 752.34 682.098 752.941 681.703 cv
755.281 680.17 763.52 680.492 765.533 681.344 cv
766.194 681.623 766.504 682.385 766.225 683.045 cv
765.945 683.707 765.182 684.016 764.523 683.738 cv
762.881 683.045 755.703 683.002 754.365 683.877 cv
754.146 684.021 753.898 684.09 753.654 684.09 cv
cp
f
796.628 661.291 mo
796.628 647.967 791.491 636.168 776.292 632.041 cv
754.002 625.984 731.186 629.244 721.102 649.541 cv
716.43 658.941 716.09 677.074 719.82 686.904 cv
725.033 700.643 729.549 704.738 730.82 705.727 cv
726.164 685.799 730.943 672.662 731.109 672.096 cv
730.887 672.859 732.789 673.252 733.443 673.16 cv
740.152 672.207 746.445 662.604 748.303 660.461 cv
747.771 661.074 747.473 665.41 750.256 665.92 cv
758.973 667.518 767.645 658.309 767.645 658.309 cv
767.33 659.469 766.66 661.49 768.716 662.307 cv
773.499 664.207 781.722 659.639 785.536 655.766 cv
791.401 674.234 791.405 685.756 789.905 693.018 cv
796.673 681.207 796.628 663.264 796.628 661.291 cv
cp
.666667 .129412 .294118 rgb
f
786.661 737.65 mo
783.425 728.098 781.569 727.672 774.046 724.375 cv
773.896 724.309 773.726 724.314 773.581 724.395 cv
773.438 724.475 769.485 731.002 760.295 731.002 cv
760.295 731.002 760.295 731.002 760.293 731.002 cv
751.236 731.002 746.025 724.082 745.885 724.008 cv
745.744 723.934 745.576 723.928 745.43 723.994 cv
737.902 727.375 735.625 728.063 732.375 737.65 cv
786.661 737.65 li
cp
.952941 .705882 .243137 rgb
f
638.172 732.158 mo
621.01 732.158 li
621.01 711.145 li
638.172 711.145 li
638.172 732.158 li
cp
1 .831373 .682353 rgb
f
664.587 737.643 mo
661.618 731.584 655.6 729.41 642.945 725.174 cv
642.579 725.051 639.62 722.846 639.62 722.846 cv
639.62 722.846 638.048 721.098 638.172 721.139 cv
638.296 721.182 629.591 726.459 629.591 726.459 cv
621.01 721.139 li
619.147 722.896 li
619.147 722.896 615.681 725.357 614.888 725.625 cv
603.144 729.574 597.448 731.805 594.588 737.65 cv
664.587 737.643 li
cp
.952941 .705882 .243137 rgb
f
648.66 685.736 mo
647.602 691.75 651.169 696.759 656.629 697.84 cv
662.089 698.918 667.371 695.658 668.427 689.643 cv
669.484 683.627 665.918 677.876 660.46 676.796 cv
655 675.719 649.717 679.719 648.66 685.736 cv
cp
1 .831373 .682353 rgb
f
610.565 685.736 mo
611.623 691.75 608.057 696.759 602.596 697.84 cv
597.135 698.918 591.854 695.658 590.798 689.643 cv
589.74 683.627 593.307 677.876 598.766 676.796 cv
604.226 675.719 609.509 679.719 610.565 685.736 cv
cp
f
656.858 645.213 mo
651.527 637.972 643.214 633.214 634.389 632.864 cv
634.387 632.864 634.214 632.859 633.931 632.846 cv
633.939 632.501 li
633.939 632.501 631.801 632.586 629.592 632.673 cv
627.382 632.586 625.242 632.501 625.242 632.501 cv
625.252 632.846 li
624.969 632.859 624.796 632.864 624.796 632.864 cv
615.967 633.214 607.656 637.972 602.326 645.213 cv
596.991 652.462 596.281 661.592 596.702 670.335 cv
597.02 676.941 598.188 687.607 598.518 694.214 cv
603.871 714.242 617.189 717.662 629.59 717.662 cv
641.992 717.662 655.757 714.242 660.666 694.214 cv
660.993 687.607 662.163 676.941 662.48 670.335 cv
662.901 661.592 662.193 652.462 656.858 645.213 cv
cp
f
616.783 682.816 mo
616.783 685.398 615.019 687.492 612.843 687.492 cv
610.667 687.492 608.903 685.398 608.903 682.816 cv
608.903 680.234 610.667 678.141 612.843 678.141 cv
615.019 678.141 616.783 680.234 616.783 682.816 cv
cp
.227451 .117647 .039216 rgb
f
607.334 674.234 mo
607.009 674.234 606.685 674.115 606.43 673.873 cv
605.903 673.375 605.882 672.545 606.381 672.018 cv
608.635 669.645 615.229 668.178 619.099 670.852 cv
619.696 671.264 619.846 672.082 619.434 672.678 cv
619.021 673.275 618.202 673.424 617.606 673.012 cv
614.782 671.061 609.692 672.346 608.286 673.826 cv
608.028 674.098 607.681 674.234 607.334 674.234 cv
cp
f
650.962 675.221 mo
650.616 675.221 650.269 675.086 650.011 674.814 cv
647.999 672.701 643.202 672.758 640.325 674.932 cv
639.746 675.369 638.922 675.254 638.485 674.676 cv
638.048 674.096 638.163 673.273 638.741 672.836 cv
642.702 669.844 648.979 669.922 651.913 673.002 cv
652.413 673.527 652.394 674.357 651.868 674.859 cv
651.613 675.102 651.288 675.221 650.962 675.221 cv
cp
f
629.472 706.434 mo
626.335 706.434 623.202 705.691 621.319 703.834 cv
620.804 703.322 620.798 702.49 621.308 701.977 cv
621.819 701.459 622.648 701.455 623.167 701.963 cv
624.884 703.66 629.226 704.279 633.271 703.402 cv
637.116 702.568 639.864 700.672 640.808 698.199 cv
641.067 697.52 641.823 697.18 642.504 697.439 cv
643.181 697.699 643.521 698.457 643.263 699.135 cv
641.995 702.453 638.556 704.945 633.826 705.971 cv
632.464 706.264 630.967 706.434 629.472 706.434 cv
cp
.776471 .556863 .458824 rgb
f
641.089 684.76 mo
640.927 684.76 640.761 684.73 640.601 684.666 cv
639.927 684.396 639.601 683.633 639.87 682.959 cv
640.931 680.307 643.413 678.688 646.049 678.928 cv
648.396 679.143 650.22 680.814 650.694 683.189 cv
650.837 683.9 650.376 684.592 649.665 684.734 cv
648.952 684.879 648.262 684.416 648.118 683.705 cv
647.87 682.461 647.007 681.652 645.81 681.545 cv
644.679 681.441 643.081 682.002 642.309 683.936 cv
642.103 684.449 641.61 684.76 641.089 684.76 cv
cp
f
634.527 714.094 mo
634.527 714.094 632.688 713.501 632.406 712.349 cv
632.124 711.194 630.646 710.919 629.592 710.919 cv
628.535 710.919 627.06 711.194 626.778 712.349 cv
626.496 713.501 624.657 714.094 624.657 714.094 cv
605.533 717.129 599.737 698.043 599.737 698.043 cv
604.808 721.578 629.592 720.304 629.592 720.304 cv
629.592 720.304 654.376 721.578 659.446 698.043 cv
659.446 698.043 653.761 717.662 634.527 714.094 cv
cp
.2 .098039 .027451 rgb
f
598.373 679.685 mo
598.767 671.36 598.871 656.308 606.076 656.308 cv
611.412 656.308 612.86 657.549 629.067 657.549 cv
643.409 657.549 647.577 655.892 652.944 655.892 cv
658.698 655.892 660.124 663.736 660.235 674.61 cv
660.257 676.853 660.41 679.095 660.536 681.332 cv
660.611 682.643 660.705 683.954 660.771 685.268 cv
660.797 685.799 660.933 687.227 661.616 687.092 cv
662.381 686.94 662.468 684.056 662.545 683.44 cv
663.094 679.103 663.241 674.653 663.237 670.287 cv
663.228 662.225 665.524 646.7 651.225 637.027 cv
642.432 631.076 624.251 630.485 614.132 633.856 cv
607.082 636.202 600.323 642.315 597.812 649.436 cv
595.053 657.255 595.123 663.366 596.031 678.854 cv
596.13 680.532 596.323 682.215 596.552 683.879 cv
596.704 684.986 596.844 686.122 597.108 687.207 cv
597.683 689.574 598.486 687.887 598.46 686.412 cv
598.422 684.165 598.269 681.936 598.373 679.685 cv
cp
.760784 .592157 .427451 rgb
f
630.536 727.605 mo
630.471 727.348 630.289 727.129 630.039 727.02 cv
629.927 726.971 629.808 726.947 629.688 726.947 cv
629.646 726.947 629.603 726.949 629.562 726.957 cv
629.52 726.949 629.477 726.947 629.434 726.947 cv
629.314 726.947 629.196 726.971 629.083 727.02 cv
628.833 727.129 628.651 727.348 628.585 727.605 cv
624.729 730.559 li
624.388 730.822 624.288 731.293 624.493 731.672 cv
626.733 735.795 li
626.153 737.606 li
627.29 737.661 631.846 737.661 632.968 737.608 cv
632.388 735.795 li
634.628 731.672 li
634.833 731.293 634.733 730.822 634.392 730.561 cv
630.536 727.605 li
cp
.235294 .192157 .247059 rgb
f
620.523 735.254 mo
616.864 725.148 li
616.741 724.803 616.919 724.42 617.263 724.295 cv
617.612 724.17 617.991 724.35 618.114 724.695 cv
621.127 733.014 li
628.979 726.438 li
629.259 726.201 629.679 726.236 629.916 726.52 cv
630.151 726.799 630.114 727.221 629.833 727.457 cv
620.523 735.254 li
cp
.8 .521569 .152941 rgb
f
638.283 735.25 mo
628.979 727.457 li
628.697 727.221 628.661 726.799 628.896 726.52 cv
629.134 726.238 629.554 726.201 629.833 726.438 cv
637.691 733.02 li
640.739 724.797 li
640.866 724.451 641.251 724.277 641.594 724.404 cv
641.938 724.531 642.114 724.914 641.986 725.26 cv
638.283 735.25 li
cp
f
393.976 497.337 mo
392.918 503.352 396.482 508.36 401.944 509.44 cv
407.405 510.519 412.686 507.26 413.743 501.243 cv
414.799 495.229 411.234 489.478 405.774 488.398 cv
400.313 487.318 395.033 491.32 393.976 497.337 cv
cp
1 .8 .6 rgb
f
355.881 497.337 mo
356.938 503.352 353.371 508.36 347.911 509.44 cv
342.451 510.519 337.171 507.26 336.114 501.243 cv
335.055 495.229 338.622 489.478 344.082 488.398 cv
349.54 487.318 354.824 491.32 355.881 497.337 cv
cp
f
402.174 456.813 mo
396.843 449.571 388.53 444.816 379.703 444.465 cv
379.703 444.465 379.53 444.458 379.246 444.447 cv
379.257 444.102 li
379.257 444.102 377.115 444.187 374.906 444.274 cv
372.698 444.187 370.559 444.102 370.559 444.102 cv
370.567 444.447 li
370.283 444.458 370.112 444.465 370.11 444.465 cv
361.284 444.816 352.971 449.571 347.642 456.813 cv
342.306 464.063 341.597 473.192 342.018 481.937 cv
342.335 488.543 343.505 499.206 343.832 505.814 cv
349.186 525.843 362.507 529.265 374.906 529.265 cv
387.309 529.265 401.07 525.843 405.979 505.814 cv
406.309 499.206 407.479 488.543 407.796 481.937 cv
408.217 473.192 407.508 464.063 402.174 456.813 cv
cp
f
383.533 547.064 mo
366.275 547.064 li
366.275 525.934 li
383.533 525.934 li
383.533 547.064 li
cp
f
362.02 494.42 mo
362.02 497.016 360.248 499.121 358.059 499.121 cv
355.871 499.121 354.096 497.016 354.096 494.42 cv
354.096 491.822 355.871 489.717 358.059 489.717 cv
360.248 489.717 362.02 491.822 362.02 494.42 cv
cp
.227451 .117647 .039216 rgb
f
396.064 494.42 mo
396.064 497.016 394.291 499.121 392.102 499.121 cv
389.914 499.121 388.141 497.016 388.141 494.42 cv
388.141 491.822 389.914 489.717 392.102 489.717 cv
394.291 489.717 396.064 491.822 396.064 494.42 cv
cp
f
352.313 485.9 mo
351.984 485.9 351.658 485.779 351.402 485.535 cv
350.873 485.033 350.854 484.197 351.357 483.668 cv
353.135 481.8 356.434 481.279 358.926 481.41 cv
360.221 481.48 363.391 481.847 364.852 483.752 cv
365.295 484.33 365.186 485.16 364.607 485.604 cv
364.027 486.047 363.199 485.938 362.754 485.359 cv
362.332 484.809 360.91 484.162 358.783 484.049 cv
356.424 483.926 354.211 484.502 353.27 485.49 cv
353.01 485.762 352.66 485.9 352.313 485.9 cv
cp
.309804 .184314 .098039 rgb
f
408.713 549.572 mo
405.613 545.533 399.945 542.391 387.215 538.352 cv
383.533 535.838 li
374.904 540.434 li
366.275 535.838 li
362.469 538.514 li
349.756 542.545 344.169 545.594 341.107 549.576 cv
408.713 549.572 li
cp
.537255 .509804 .494118 rgb
f
365.959 549.85 mo
362.281 539.688 li
362.156 539.34 362.334 538.957 362.682 538.83 cv
363.031 538.705 363.412 538.885 363.537 539.232 cv
366.566 547.598 li
374.463 540.982 li
374.744 540.746 375.166 540.781 375.404 541.066 cv
375.641 541.35 375.605 541.771 375.32 542.008 cv
365.959 549.85 li
cp
.427451 .4 .384314 rgb
f
383.818 549.846 mo
374.463 542.008 li
374.18 541.771 374.141 541.35 374.379 541.066 cv
374.617 540.783 375.039 540.748 375.32 540.982 cv
383.223 547.604 li
386.289 539.334 li
386.416 538.988 386.801 538.811 387.146 538.939 cv
387.494 539.068 387.67 539.453 387.543 539.799 cv
383.818 549.846 li
cp
f
363.994 518.107 mo
368.41 527.098 384.674 523.934 385.791 517.695 cv
363.994 518.107 li
cp
1 1 1 rgb
f
365.975 519.17 mo
368.477 522.223 372.646 522.59 374.498 522.59 cv
378.705 522.59 382.656 520.967 384.137 518.828 cv
365.975 519.17 li
cp
374.498 524.789 mo
374.498 524.789 li
369.131 524.789 364.941 522.531 363.004 518.592 cv
362.84 518.254 362.857 517.855 363.053 517.533 cv
363.248 517.213 363.596 517.014 363.973 517.006 cv
385.77 516.596 li
386.088 516.584 386.414 516.73 386.627 516.98 cv
386.842 517.232 386.932 517.564 386.873 517.889 cv
386.102 522.209 379.975 524.789 374.498 524.789 cv
cp
.729412 .52549 .388235 rgb
f
397.912 485.9 mo
397.563 485.9 397.215 485.762 396.955 485.49 cv
395.994 484.48 393.725 483.9 391.313 484.055 cv
389.238 484.184 387.873 484.811 387.482 485.342 cv
387.047 485.928 386.221 486.049 385.635 485.617 cv
385.049 485.184 384.924 484.355 385.357 483.77 cv
386.754 481.884 389.873 481.498 391.15 481.417 cv
393.691 481.257 397.057 481.767 398.867 483.668 cv
399.369 484.197 399.352 485.033 398.822 485.535 cv
398.566 485.779 398.238 485.9 397.912 485.9 cv
cp
.309804 .184314 .098039 rgb
f
405.675 501.855 mo
405.94 498.903 407.654 492.641 405.867 493.66 cv
404.007 494.722 403.667 500.526 403.429 502.13 cv
403.15 504.008 402.248 505.649 401.139 507.194 cv
398.598 510.731 394.927 513.062 390.479 513.062 cv
387.72 513.062 385.061 510.393 373.815 510.393 cv
364.223 510.393 360.72 512.684 356.537 512.684 cv
352.271 512.684 348.657 510.678 346.266 507.185 cv
345.439 505.979 344.839 503.669 344.692 502.25 cv
344.556 500.917 343.965 497.575 343.873 496.434 cv
343.342 489.854 342.204 494.601 342.147 499.686 cv
342.118 502.156 343.38 505.076 342.797 507.502 cv
342.373 509.26 342.146 513.835 345.072 516.957 cv
343.655 520.506 346.001 523.972 348.675 525.539 cv
349.768 530.869 354.061 532.123 356.438 531.433 cv
358.375 536.891 365.5 536.335 366.538 533.752 cv
367.94 537.564 373.824 538.188 375.818 534.039 cv
375.818 534.039 380.866 539.486 386.286 532.693 cv
388.985 535.117 394.998 532.49 395.135 528.659 cv
399.763 528.61 400.593 523.779 400.053 521.986 cv
401.879 521.902 404.465 517.572 403.469 514.334 cv
405.808 510.97 405.538 507.929 405.404 504.934 cv
405.386 504.537 405.545 503.295 405.675 501.855 cv
cp
f
344.393 489.704 mo
344.638 484.86 342.895 472.661 349.289 469.925 cv
351.743 468.874 354.427 468.815 356.902 469.06 cv
365.851 469.936 374.188 474.313 389.814 471.784 cv
398.511 470.376 400.772 468.873 403.112 467.025 cv
404.08 466.261 404.312 480.414 404.354 484.919 cv
404.374 487.004 404.352 488.989 404.324 491.074 cv
404.308 492.297 404.312 493.521 404.288 494.742 cv
404.278 495.239 404.172 496.497 405.805 496.496 cv
407.005 496.494 407.156 493.316 407.202 492.738 cv
407.9 483.588 408.247 478.642 407.839 470.101 cv
407.643 465.974 407.721 466.049 407.382 462.38 cv
408.711 461.33 410.271 459.171 410.395 457.36 cv
410.577 454.674 408.261 452.83 407.123 454.044 cv
409.274 451.748 412.287 447.731 410.646 444.443 cv
408.815 440.774 404.302 443.388 401.71 444.717 cv
402.963 443.58 403.89 441.464 402.125 440.199 cv
401.321 439.623 399.674 440.004 398.774 440.212 cv
396.284 440.789 394.033 442.789 391.33 442.296 cv
392.503 439.628 389.415 440.036 387.779 440.346 cv
384.562 440.956 382.271 440.393 378.959 439.977 cv
368.313 438.642 360.302 440.704 351.482 446.192 cv
351.805 443.34 349.345 441.702 347.363 444.291 cv
345.882 446.225 346.868 449.855 346.868 449.855 cv
346.868 449.855 342.146 449.973 341.75 453.379 cv
341.422 456.211 344.209 455.677 344.209 455.677 cv
343.225 456.908 342.672 459.314 342.394 460.312 cv
341.417 463.795 341.117 467.472 341.115 471.076 cv
341.102 482.814 341.105 479.411 341.093 491.016 cv
341.093 492.057 341.551 499.701 342.754 500.517 cv
343.915 501.305 344.417 496.136 344.396 495.01 cv
344.363 493.291 344.287 491.8 344.393 489.704 cv
cp
f
364.789 516.599 mo
368.674 524.436 382.98 521.678 383.963 516.239 cv
364.789 516.599 li
cp
1 1 1 rgb
f
266.832 715.106 mo
266.832 726.548 258.273 728.442 247.716 728.442 cv
237.159 728.442 228.6 725.603 228.6 715.106 cv
228.6 707.741 237.159 701.771 247.716 701.771 cv
258.273 701.771 266.832 707.741 266.832 715.106 cv
cp
.756863 .580392 .298039 rgb
f
255.125 732.844 mo
240.986 732.844 li
240.986 711.014 li
255.125 711.014 li
255.125 732.844 li
cp
.956863 .803922 .596078 rgb
f
223.803 681.931 mo
224.395 686.706 221.645 690.976 217.659 691.47 cv
213.672 691.964 209.961 688.493 209.371 683.718 cv
208.779 678.944 211.532 674.675 215.518 674.181 cv
219.504 673.687 223.213 677.157 223.803 681.931 cv
cp
1 .8 .6 rgb
f
271.37 681.931 mo
270.778 686.706 273.528 690.976 277.514 691.47 cv
281.5 691.964 285.211 688.493 285.802 683.718 cv
286.394 678.944 283.641 674.675 279.655 674.181 cv
275.668 673.687 271.959 677.157 271.37 681.931 cv
cp
f
274.425 643.45 mo
268.568 635.144 262.554 634.888 252.857 634.485 cv
242.317 634.485 li
232.618 634.888 226.604 635.144 220.749 643.45 cv
214.887 651.763 217.107 653.917 217.57 663.944 cv
217.919 671.521 213.391 666.206 216.524 687.276 cv
219.658 708.349 237.958 715.106 247.586 715.106 cv
257.214 715.106 274.141 709.456 278.65 687.276 cv
283.158 665.099 277.252 671.521 277.603 663.944 cv
278.064 653.917 280.285 651.763 274.425 643.45 cv
cp
f
247.11 704.634 mo
243.633 704.634 239.596 703.778 237.38 701.327 cv
236.899 700.795 236.94 699.974 237.472 699.491 cv
238.004 699.011 238.826 699.05 239.308 699.583 cv
240.874 701.313 244.418 702.257 248.339 701.993 cv
251.356 701.787 253.912 700.875 254.7 699.722 cv
255.105 699.129 255.914 698.978 256.506 699.382 cv
257.099 699.787 257.251 700.597 256.846 701.188 cv
255.576 703.048 252.461 704.317 248.515 704.587 cv
248.062 704.617 247.591 704.634 247.11 704.634 cv
cp
.729412 .52549 .388235 rgb
f
234.587 681.753 mo
234.587 684.546 232.679 686.81 230.327 686.81 cv
227.973 686.81 226.063 684.546 226.063 681.753 cv
226.063 678.96 227.973 676.694 230.327 676.694 cv
232.679 676.694 234.587 678.96 234.587 681.753 cv
cp
.227451 .117647 .039216 rgb
f
235.702 672.769 mo
235.343 672.769 234.986 672.62 234.729 672.331 cv
233.524 670.97 231.896 670.661 230.743 670.642 cv
228.969 670.628 227.03 671.302 226.023 672.364 cv
225.53 672.884 224.705 672.905 224.186 672.411 cv
223.666 671.918 223.644 671.095 224.138 670.575 cv
225.663 668.969 228.213 668.007 230.788 668.043 cv
233.155 668.083 235.246 668.995 236.674 670.608 cv
237.15 671.146 237.1 671.966 236.563 672.442 cv
236.316 672.661 236.008 672.769 235.702 672.769 cv
cp
.647059 .47451 .266667 rgb
f
260.528 672.624 mo
260.248 672.624 259.964 672.534 259.727 672.347 cv
259.162 671.904 259.064 671.087 259.506 670.522 cv
260.599 669.13 262.665 668.197 264.897 668.091 cv
267.253 667.974 269.418 668.808 270.963 670.429 cv
271.458 670.948 271.439 671.771 270.919 672.266 cv
270.4 672.761 269.578 672.741 269.083 672.222 cv
267.71 670.78 265.948 670.643 265.021 670.687 cv
263.351 670.767 262.051 671.489 261.551 672.127 cv
261.294 672.454 260.914 672.624 260.528 672.624 cv
cp
f
269.052 681.753 mo
269.052 684.546 267.142 686.81 264.791 686.81 cv
262.438 686.81 260.529 684.546 260.529 681.753 cv
260.529 678.958 262.438 676.692 264.791 676.692 cv
267.142 676.692 269.052 678.958 269.052 681.753 cv
cp
.227451 .117647 .039216 rgb
f
233.547 692.792 mo
233.547 695.089 230.854 696.95 227.53 696.95 cv
224.206 696.95 221.51 695.089 221.51 692.792 cv
221.51 690.495 224.206 688.634 227.53 688.634 cv
230.854 688.634 233.547 690.495 233.547 692.792 cv
cp
.988235 .690196 .584314 rgb
f
273.605 692.792 mo
273.605 695.089 270.911 696.95 267.586 696.95 cv
264.262 696.95 261.568 695.089 261.568 692.792 cv
261.568 690.495 264.262 688.634 267.586 688.634 cv
270.911 688.634 273.605 690.495 273.605 692.792 cv
cp
f
268.313 635.618 mo
258.743 629.271 244.956 628.64 233.942 632.233 cv
227.926 634.196 213.361 639.396 211.778 658.96 cv
209.682 673.173 214.689 682.038 214.689 682.038 cv
214.689 682.038 215.414 669.28 240.516 662.28 cv
256.964 657.692 262.49 652.507 262.49 652.507 cv
262.49 652.507 264.272 659.581 271.29 666.872 cv
280.638 676.587 279.79 683.886 279.79 683.886 cv
279.79 683.886 283.068 678.913 283.549 670.552 cv
283.55 670.548 283.552 670.544 283.553 670.54 cv
285.387 661.206 283.876 645.938 268.313 635.618 cv
cp
.756863 .580392 .298039 rgb
f
274.709 737.524 mo
271.793 729.147 270.284 726.828 261.74 722.906 cv
255.125 720.283 li
255.125 720.283 254.075 723.635 248.056 723.635 cv
242.248 723.635 240.986 720.283 240.986 720.283 cv
233.173 723.027 li
224.858 726.891 223.309 729.345 220.463 737.524 cv
220.404 737.692 274.768 737.692 274.709 737.524 cv
cp
.427451 .290196 .168627 rgb
f
638.172 366.242 mo
621.01 366.242 li
621.01 345.228 li
638.172 345.228 li
638.172 366.242 li
cp
1 .8 .6 rgb
f
664.587 371.726 mo
661.618 365.667 655.6 363.494 642.945 359.257 cv
642.578 359.134 639.619 356.929 639.619 356.929 cv
639.619 356.929 638.047 355.181 638.172 355.222 cv
638.296 355.265 629.59 360.542 629.59 360.542 cv
621.01 355.222 li
619.146 356.98 li
619.146 356.98 615.68 359.441 614.887 359.708 cv
603.143 363.658 597.448 365.888 594.588 371.734 cv
664.587 371.726 li
cp
.611765 .839216 .898039 rgb
f
648.66 318.994 mo
647.601 325.007 651.169 330.016 656.628 331.097 cv
662.089 332.175 667.37 328.915 668.427 322.9 cv
669.484 316.884 665.918 311.133 660.459 310.053 cv
654.999 308.976 649.717 312.977 648.66 318.994 cv
cp
1 .831373 .682353 rgb
f
610.565 318.994 mo
611.622 325.007 608.057 330.016 602.596 331.097 cv
597.135 332.175 591.854 328.915 590.798 322.9 cv
589.74 316.884 593.307 311.133 598.766 310.053 cv
604.226 308.976 609.508 312.977 610.565 318.994 cv
cp
f
656.857 278.47 mo
651.527 271.229 643.214 266.471 634.388 266.122 cv
634.386 266.122 634.214 266.116 633.93 266.104 cv
633.938 265.758 li
633.938 265.758 631.8 265.843 629.591 265.93 cv
627.382 265.843 625.241 265.758 625.241 265.758 cv
625.251 266.104 li
624.968 266.116 624.795 266.122 624.795 266.122 cv
615.967 266.471 607.655 271.229 602.325 278.47 cv
596.991 285.72 596.282 294.849 596.702 303.592 cv
597.019 310.199 598.188 320.865 598.517 327.471 cv
603.871 347.499 617.189 350.919 629.59 350.919 cv
641.991 350.919 655.757 347.499 660.665 327.471 cv
660.992 320.865 662.161 310.199 662.48 303.592 cv
662.9 294.849 662.192 285.72 656.857 278.47 cv
cp
f
616.783 315.9 mo
616.783 318.482 615.019 320.576 612.843 320.576 cv
610.666 320.576 608.902 318.482 608.902 315.9 cv
608.902 313.318 610.666 311.224 612.843 311.224 cv
615.019 311.224 616.783 313.318 616.783 315.9 cv
cp
.227451 .117647 .039216 rgb
f
607.334 307.318 mo
607.008 307.318 606.684 307.199 606.43 306.957 cv
605.902 306.458 605.882 305.628 606.381 305.101 cv
608.635 302.728 615.229 301.261 619.099 303.935 cv
619.695 304.347 619.846 305.166 619.434 305.761 cv
619.021 306.359 618.201 306.507 617.605 306.095 cv
614.781 304.144 609.691 305.429 608.285 306.91 cv
608.027 307.181 607.681 307.318 607.334 307.318 cv
cp
.666667 .32549 .207843 rgb
f
650.961 308.304 mo
650.615 308.304 650.269 308.169 650.011 307.898 cv
647.999 305.785 643.201 305.841 640.324 308.015 cv
639.746 308.453 638.922 308.337 638.484 307.759 cv
638.048 307.179 638.162 306.357 638.741 305.919 cv
642.701 302.927 648.979 303.005 651.912 306.085 cv
652.412 306.611 652.393 307.441 651.867 307.943 cv
651.613 308.185 651.287 308.304 650.961 308.304 cv
cp
f
630.536 361.689 mo
630.471 361.431 630.289 361.212 630.039 361.103 cv
629.926 361.054 629.807 361.031 629.688 361.031 cv
629.645 361.031 629.603 361.033 629.561 361.041 cv
629.52 361.033 629.477 361.031 629.434 361.031 cv
629.314 361.031 629.195 361.054 629.082 361.103 cv
628.832 361.212 628.65 361.431 628.584 361.689 cv
624.729 364.642 li
624.387 364.906 624.287 365.376 624.492 365.755 cv
626.732 369.878 li
626.152 371.69 li
627.289 371.745 628.432 371.778 629.581 371.778 cv
630.717 371.778 631.846 371.745 632.968 371.692 cv
632.387 369.878 li
634.627 365.755 li
634.832 365.376 634.732 364.906 634.391 364.644 cv
630.536 361.689 li
cp
.235294 .192157 .247059 rgb
f
620.523 369.337 mo
616.864 359.232 li
616.74 358.886 616.918 358.503 617.263 358.378 cv
617.612 358.253 617.991 358.433 618.114 358.779 cv
621.127 367.097 li
628.979 360.521 li
629.258 360.285 629.678 360.32 629.916 360.603 cv
630.15 360.882 630.114 361.304 629.832 361.541 cv
620.523 369.337 li
cp
.372549 .643137 .717647 rgb
f
638.283 369.333 mo
628.979 361.541 li
628.697 361.304 628.66 360.882 628.896 360.603 cv
629.134 360.322 629.553 360.285 629.832 360.521 cv
637.691 367.103 li
640.739 358.88 li
640.866 358.535 641.25 358.361 641.594 358.488 cv
641.938 358.615 642.113 358.998 641.986 359.343 cv
638.283 369.333 li
cp
f
646.179 335.267 mo
645.319 335.267 644.447 334.984 643.242 334.596 cv
640.75 333.791 636.981 332.57 629.296 332.57 cv
623.396 332.57 619.771 333.413 616.858 334.09 cv
614.943 334.534 613.431 334.885 611.792 334.885 cv
606.835 334.885 603.109 332.491 600.713 327.774 cv
598.769 323.939 598.424 319.882 598.391 319.43 cv
598.391 319.428 li
598.391 319.42 598.391 319.411 598.391 319.402 cv
598.39 319.381 598.389 319.361 598.387 319.343 cv
598.384 319.322 li
598.361 319.156 598.05 314.785 598.151 312.664 cv
598.546 304.296 598.651 289.155 605.909 289.155 cv
611.282 289.155 612.742 290.405 629.068 290.405 cv
643.513 290.405 647.711 288.739 653.118 288.739 cv
658.912 288.739 660.35 296.625 660.461 307.563 cv
660.482 309.814 660.136 317.083 660.004 318.811 cv
659.659 320.688 658.414 335.267 646.179 335.267 cv
cp
651.386 269.768 mo
642.527 263.786 624.217 263.189 614.021 266.576 cv
606.922 268.937 600.114 275.085 597.584 282.244 cv
594.805 290.108 594.876 296.254 595.79 311.828 cv
595.891 313.518 596.086 315.208 596.315 316.883 cv
596.47 317.996 597.18 323.443 597.18 323.443 cv
597.18 323.533 597.192 323.598 597.248 323.668 cv
597.248 323.67 597.251 323.676 597.251 323.677 cv
597.437 325.31 597.804 328.584 597.47 329.968 cv
596.828 332.611 596.35 336.212 597.702 338.364 cv
598.157 339.09 598.786 339.596 599.577 339.875 cv
598.522 342.08 598.556 344.4 599.686 346.304 cv
600.583 347.813 602.043 348.775 603.432 348.742 cv
603.743 353.263 606.923 354.887 609.866 354.887 cv
610.413 354.887 610.948 354.831 611.437 354.726 cv
612.705 357.794 615.566 358.9 617.881 358.9 cv
619.592 358.9 621.079 358.333 621.867 357.436 cv
622.804 359.09 624.665 360.158 626.728 360.158 cv
628.711 360.158 630.435 359.188 631.437 357.533 cv
632.177 358.172 633.854 359.365 636.04 359.365 cv
638.15 359.365 640.151 358.261 641.991 356.085 cv
642.714 356.597 643.63 356.865 644.662 356.865 cv
647.553 356.865 650.842 354.78 651.266 351.919 cv
651.527 351.956 651.783 351.974 652.036 351.974 cv
652.036 351.974 652.036 351.974 652.037 351.974 cv
653.775 351.974 655.275 351.078 656.149 349.516 cv
656.95 348.084 657.071 346.343 656.503 345.002 cv
657.474 344.718 658.51 343.892 659.228 342.793 cv
659.861 341.822 660.752 339.838 659.861 337.188 cv
662.509 335.904 662.265 333.437 661.933 330.075 cv
661.769 328.404 661.583 326.511 661.694 324.361 cv
661.791 322.413 661.813 322.423 662.145 318.858 cv
662.478 315.278 663.489 309.865 663.485 303.213 cv
663.476 295.105 665.789 279.495 651.386 269.768 cv
cp
.847059 .427451 .145098 rgb
f
629.154 343.673 mo
625.506 343.673 621.986 342.398 619.765 340.203 cv
619.248 339.691 619.243 338.861 619.754 338.343 cv
620.263 337.83 621.094 337.826 621.611 338.332 cv
625.039 341.72 632.725 342.31 637.129 337.957 cv
637.645 337.451 638.479 337.453 638.986 337.97 cv
639.496 338.486 639.492 339.318 638.977 339.828 cv
636.275 342.498 632.654 343.673 629.154 343.673 cv
cp
.419608 .196078 .0431373 rgb
f
649.188 315.9 mo
649.188 318.482 647.424 320.576 645.248 320.576 cv
643.071 320.576 641.307 318.482 641.307 315.9 cv
641.307 313.318 643.071 311.224 645.248 311.224 cv
647.424 311.224 649.188 313.318 649.188 315.9 cv
cp
.227451 .117647 .039216 rgb
f
393.976 133.783 mo
392.918 139.796 396.484 144.807 401.944 145.886 cv
407.404 146.964 412.685 143.705 413.743 137.689 cv
414.8 131.675 411.234 125.923 405.773 124.844 cv
400.315 123.764 395.033 127.766 393.976 133.783 cv
cp
.52549 .356863 .184314 rgb
f
355.881 133.783 mo
356.939 139.796 353.373 144.807 347.912 145.886 cv
342.452 146.964 337.171 143.705 336.114 137.689 cv
335.056 131.675 338.623 125.923 344.083 124.844 cv
349.542 123.764 354.824 127.766 355.881 133.783 cv
cp
f
402.174 93.2593 mo
396.844 86.0176 388.531 81.2622 379.705 80.9106 cv
379.703 80.9106 379.53 80.9043 379.247 80.8931 cv
379.256 80.5469 li
379.256 80.5469 377.117 80.6323 374.908 80.7207 cv
372.698 80.6323 370.559 80.5469 370.559 80.5469 cv
370.567 80.8931 li
370.284 80.9043 370.112 80.9106 370.111 80.9106 cv
361.284 81.2622 352.972 86.0176 347.642 93.2593 cv
342.307 100.507 341.598 109.638 342.018 118.381 cv
342.336 124.987 343.505 135.653 343.833 142.261 cv
349.187 162.288 362.507 165.709 374.907 165.709 cv
387.308 165.709 401.072 162.288 405.981 142.261 cv
406.31 135.653 407.478 124.987 407.797 118.381 cv
408.218 109.638 407.509 100.507 402.174 93.2593 cv
cp
f
362.021 131.029 mo
362.021 133.627 360.248 135.733 358.059 135.733 cv
355.872 135.733 354.097 133.627 354.097 131.029 cv
354.097 128.434 355.872 126.328 358.059 126.328 cv
360.248 126.328 362.021 128.434 362.021 131.029 cv
cp
.2 .098039 .027451 rgb
f
396.066 131.029 mo
396.066 133.627 394.292 135.733 392.103 135.733 cv
389.916 135.733 388.141 133.627 388.141 131.029 cv
388.141 128.434 389.916 126.328 392.103 126.328 cv
394.292 126.328 396.066 128.434 396.066 131.029 cv
cp
f
363.951 122.4 mo
363.536 122.4 363.127 122.206 362.87 121.841 cv
362.422 121.206 361.202 120.758 359.605 120.643 cv
357.007 120.453 354.228 121.197 353.477 121.988 cv
352.976 122.518 352.14 122.539 351.61 122.038 cv
351.082 121.536 351.06 120.699 351.562 120.171 cv
353.153 118.492 356.992 117.801 359.796 118.008 cv
361.529 118.133 363.842 118.637 365.029 120.318 cv
365.449 120.915 365.307 121.739 364.71 122.16 cv
364.479 122.322 364.213 122.4 363.951 122.4 cv
cp
.196078 .094118 .023529 rgb
f
397.912 122.512 mo
397.564 122.512 397.216 122.374 396.957 122.102 cv
395.954 121.049 393.759 120.41 391.5 120.509 cv
389.669 120.589 388.119 121.156 387.453 121.99 cv
386.999 122.561 386.167 122.654 385.597 122.199 cv
385.027 121.744 384.933 120.912 385.388 120.343 cv
386.55 118.887 388.735 117.986 391.384 117.869 cv
393.789 117.762 397.023 118.342 398.869 120.279 cv
399.373 120.808 399.351 121.644 398.824 122.146 cv
398.568 122.391 398.24 122.512 397.912 122.512 cv
cp
f
375.041 156.827 mo
371.447 156.827 367.915 155.663 365.557 153.331 cv
365.038 152.819 365.033 151.983 365.545 151.463 cv
366.058 150.946 366.894 150.94 367.413 151.454 cv
370.755 154.754 378.485 155.469 383.071 151.403 cv
383.617 150.92 384.453 150.971 384.935 151.516 cv
385.419 152.061 385.369 152.897 384.824 153.381 cv
382.23 155.68 378.606 156.827 375.041 156.827 cv
cp
.337255 .196078 .090196 rgb
f
350.282 126.17 mo
349.032 126.17 348.015 127.033 348.015 128.096 cv
348.015 136.049 li
348.015 137.11 349.032 137.975 350.282 137.975 cv
365.837 137.975 li
367.086 137.975 368.104 137.11 368.104 136.049 cv
368.104 128.096 li
368.104 127.033 367.086 126.17 365.837 126.17 cv
350.282 126.17 li
cp
365.837 140.485 mo
350.282 140.485 li
347.647 140.485 345.504 138.495 345.504 136.049 cv
345.504 128.096 li
345.504 125.649 347.647 123.66 350.282 123.66 cv
365.837 123.66 li
368.471 123.66 370.614 125.649 370.614 128.096 cv
370.614 136.049 li
370.614 138.495 368.471 140.485 365.837 140.485 cv
cp
.196078 .094118 .023529 rgb
f
384.389 126.17 mo
383.139 126.17 382.123 127.033 382.123 128.096 cv
382.123 136.049 li
382.123 137.11 383.139 137.975 384.389 137.975 cv
399.945 137.975 li
401.195 137.975 402.21 137.11 402.21 136.049 cv
402.21 128.096 li
402.21 127.033 401.195 126.17 399.945 126.17 cv
384.389 126.17 li
cp
399.945 140.485 mo
384.389 140.485 li
381.755 140.485 379.612 138.495 379.612 136.049 cv
379.612 128.096 li
379.612 125.649 381.755 123.66 384.389 123.66 cv
399.945 123.66 li
402.578 123.66 404.72 125.649 404.72 128.096 cv
404.72 136.049 li
404.72 138.495 402.578 140.485 399.945 140.485 cv
cp
f
368.453 130.012 mo
368.453 128.691 li
368.453 130.012 li
cp
381.44 131.641 mo
381.337 131.641 380.234 131.629 380.13 131.604 cv
379.523 131.469 376.372 131.332 368.473 131.332 cv
368.453 130.012 li
368.473 128.691 li
373.876 128.691 379.566 128.751 380.749 129.035 cv
381.458 129.207 381.894 129.92 381.724 130.629 cv
381.578 131.234 382.037 131.641 381.44 131.641 cv
cp
f
405.568 131.266 mo
404.804 131.266 404.255 131.069 403.892 130.521 cv
403.488 129.914 403.654 129.095 404.261 128.691 cv
404.679 128.414 405.197 128.405 405.611 128.625 cv
406.089 128.617 407.205 128.399 407.9 128.264 cv
409.046 128.04 409.775 127.898 410.316 127.922 cv
411.046 127.945 411.619 128.555 411.595 129.284 cv
411.57 130.014 410.943 130.597 410.232 130.562 cv
409.99 130.562 409.062 130.729 408.404 130.856 cv
407.242 131.083 406.304 131.266 405.568 131.266 cv
cp
f
347.036 130.075 mo
346.112 130.075 345.166 129.696 344.248 129.326 cv
343.679 129.097 343.091 128.861 342.68 128.8 cv
342.001 128.7 341.533 128.069 341.633 127.389 cv
341.734 126.711 342.365 126.246 343.044 126.343 cv
343.745 126.447 344.472 126.739 345.174 127.022 cv
345.866 127.299 346.728 127.646 347.128 127.586 cv
347.804 127.487 347.438 127.951 347.54 128.629 cv
347.642 129.308 348.175 129.94 347.497 130.042 cv
347.344 130.065 347.19 130.075 347.036 130.075 cv
cp
f
343.594 126.318 mo
343.995 117.996 344.102 102.94 351.452 102.94 cv
356.895 102.94 358.374 104.183 374.908 104.183 cv
389.538 104.183 393.79 102.527 399.266 102.527 cv
405.134 102.527 406.589 110.368 406.703 121.245 cv
406.725 123.485 406.881 125.729 407.01 127.965 cv
407.087 129.277 407.18 130.588 407.248 131.9 cv
407.276 132.433 407.414 133.862 408.111 133.726 cv
408.89 133.574 408.98 130.69 409.058 130.073 cv
409.618 125.735 409.768 121.286 409.766 116.919 cv
409.755 108.858 412.099 93.3345 397.511 83.6611 cv
388.54 77.7114 369.993 77.1191 359.668 80.4873 cv
352.478 82.8345 345.583 88.9478 343.02 96.0674 cv
340.206 103.888 340.278 110 341.205 125.486 cv
341.306 127.167 341.503 128.848 341.736 130.513 cv
341.891 131.622 342.033 132.756 342.303 133.842 cv
342.889 136.209 343.708 134.52 343.682 133.046 cv
343.644 130.798 343.485 128.57 343.594 126.318 cv
cp
.2 .098039 .027451 rgb
f
391.845 175.284 mo
391.845 175.284 376.307 178.956 375.327 179.551 cv
375.225 179.505 375.434 179.544 375.327 179.551 cv
358.251 175.401 li
350.344 178.099 345.446 180.196 342.373 183.441 cv
408.058 183.441 li
404.943 180.155 399.943 178.039 391.845 175.284 cv
cp
.34902 .466667 .164706 rgb
f
383.849 181.23 mo
366.592 181.23 li
366.592 160.099 li
383.849 160.099 li
383.849 181.23 li
cp
.52549 .356863 .184314 rgb
f
370.89 179.393 mo
374.673 176.565 li
374.639 176.537 li
374.357 176.307 374.315 175.891 374.545 175.608 cv
374.667 175.461 374.836 175.382 375.013 175.37 cv
366.592 170.151 li
364.719 171.919 li
365.282 174.211 li
362.516 183.441 li
363.363 183.509 373.261 183.441 373.261 183.441 cv
370.89 179.393 li
cp
1 1 1 rgb
f
379.096 180.179 mo
374.673 176.565 li
370.89 179.393 li
373.261 183.441 li
373.261 183.441 374.165 183.441 375.212 183.441 cv
376.26 183.441 377.163 183.441 377.163 183.441 cv
379.096 180.179 li
cp
.235294 .192157 .247059 rgb
f
366.428 183.441 mo
366.237 183.441 366.047 183.601 365.917 183.441 cv
365.686 183.158 365.727 182.796 366.01 182.565 cv
374.639 175.515 li
374.921 175.282 375.338 175.325 375.569 175.608 cv
375.799 175.891 375.757 176.307 375.475 176.537 cv
366.846 183.441 li
366.723 183.542 366.575 183.441 366.428 183.441 cv
cp
.690196 .678431 .698039 rgb
f
379.096 180.179 mo
377.163 183.441 li
382.625 183.441 li
379.096 180.179 li
cp
1 1 1 rgb
f
382.978 181.646 mo
385.033 173.407 li
385.306 171.866 li
385.306 171.866 383.724 170.108 383.849 170.151 cv
383.966 170.191 376.307 174.841 375.327 175.436 cv
375.377 175.459 375.43 175.478 375.475 175.515 cv
382.978 181.646 li
cp
f
374.545 175.608 mo
374.315 175.891 374.357 176.307 374.639 176.537 cv
374.673 176.565 li
379.096 180.179 li
382.625 183.441 li
382.978 181.646 li
375.475 175.515 li
375.43 175.478 375.377 175.459 375.327 175.436 cv
375.225 175.39 375.121 175.363 375.013 175.37 cv
374.836 175.382 374.667 175.461 374.545 175.608 cv
cp
.690196 .678431 .698039 rgb
f
364.719 171.919 mo
362.803 172.624 li
362.801 172.625 362.794 172.625 362.792 172.626 cv
358.619 174.168 li
358.506 174.2 358.42 174.29 358.396 174.404 cv
358.251 175.401 li
360.375 183.441 li
360.349 183.568 367.657 183.441 367.657 183.441 cv
365.282 174.211 li
364.719 171.919 li
cp
.27451 .34902 .109804 rgb
f
391.845 175.284 mo
391.716 174.404 li
391.693 174.29 391.607 174.2 391.496 174.168 cv
387.322 172.626 li
387.314 172.623 387.285 172.622 387.269 172.622 cv
385.306 171.866 li
385.033 173.407 li
382.978 181.646 li
382.625 183.441 li
382.625 183.441 li
390.017 183.441 li
390.126 183.369 391.845 175.284 391.845 175.284 cv
cp
f
648.66 134.112 mo
647.603 140.128 651.168 145.136 656.629 146.216 cv
662.09 147.294 667.371 144.034 668.426 138.02 cv
669.485 132.004 665.919 126.251 660.459 125.173 cv
655 124.093 649.716 128.096 648.66 134.112 cv
cp
1 .8 .6 rgb
f
610.564 134.112 mo
611.622 140.128 608.057 145.136 602.596 146.216 cv
597.136 147.294 591.854 144.034 590.799 138.02 cv
589.739 132.004 593.307 126.251 598.766 125.173 cv
604.226 124.093 609.508 128.096 610.564 134.112 cv
cp
f
656.858 93.5889 mo
651.527 86.3467 643.215 81.5918 634.389 81.2407 cv
634.387 81.2407 634.215 81.2334 633.931 81.2227 cv
633.94 80.8774 li
633.94 80.8774 631.802 80.9619 629.592 81.0498 cv
627.383 80.9619 625.243 80.8774 625.243 80.8774 cv
625.252 81.2227 li
624.969 81.2334 624.796 81.2407 624.796 81.2407 cv
615.968 81.5918 607.655 86.3467 602.325 93.5889 cv
596.99 100.838 596.281 109.968 596.701 118.71 cv
597.02 125.317 598.189 135.982 598.517 142.591 cv
603.871 162.618 617.191 166.039 629.591 166.039 cv
641.993 166.039 655.757 162.618 660.666 142.591 cv
660.993 135.982 662.162 125.317 662.48 118.71 cv
662.901 109.968 662.192 100.838 656.858 93.5889 cv
cp
f
605.868 125.963 mo
605.509 125.963 605.152 125.818 604.892 125.533 cv
604.399 124.994 604.438 124.158 604.978 123.668 cv
607.458 121.402 615.406 120.389 618.99 122.51 cv
619.617 122.883 619.825 123.693 619.453 124.32 cv
619.081 124.947 618.272 125.154 617.644 124.783 cv
615.151 123.307 608.467 124.059 606.758 125.617 cv
606.505 125.85 606.186 125.963 605.868 125.963 cv
cp
.729412 .52549 .388235 rgb
f
652.715 126.492 mo
652.33 126.492 651.949 126.326 651.688 126.004 cv
650.376 124.385 643.434 123.605 640.603 124.758 cv
639.929 125.033 639.157 124.709 638.882 124.033 cv
638.606 123.357 638.932 122.586 639.606 122.313 cv
642.974 120.943 651.388 121.439 653.739 124.34 cv
654.2 124.908 654.112 125.738 653.546 126.197 cv
653.302 126.396 653.007 126.492 652.715 126.492 cv
cp
f
629.243 155.831 mo
625.058 155.831 621.399 154.772 619.064 152.856 cv
618.501 152.393 618.418 151.561 618.881 150.999 cv
619.343 150.434 620.175 150.35 620.739 150.813 cv
622.788 152.495 626.424 153.372 630.452 153.157 cv
634.093 152.963 637.379 151.905 638.63 150.52 cv
639.117 149.977 639.952 149.934 640.495 150.424 cv
641.036 150.913 641.079 151.749 640.59 152.29 cv
638.85 154.217 635.019 155.561 630.591 155.795 cv
630.137 155.819 629.687 155.831 629.243 155.831 cv
cp
f
602.574 105.756 mo
602.152 106.671 602.284 111.434 607.601 111.275 cv
612.234 111.138 614.815 108.326 617.17 105.925 cv
617.17 105.925 612.809 112.792 618.581 114.174 cv
624.373 115.559 629.882 107.964 629.882 107.964 cv
629.076 108.557 628.945 111.797 631.273 112.85 cv
634.811 114.449 642.978 113.208 652.166 101.202 cv
660.668 111.964 661.355 130.595 661.423 131.908 cv
661.45 132.441 661.588 133.87 662.285 133.732 cv
663.065 133.582 663.155 130.698 663.232 130.081 cv
663.792 125.743 663.942 121.294 663.94 116.929 cv
663.93 108.866 666.273 93.3428 651.686 83.6689 cv
642.713 77.7183 624.167 77.127 613.843 80.4951 cv
606.651 82.8423 599.757 88.9546 597.193 96.0757 cv
594.38 103.896 594.451 110.006 595.378 125.493 cv
595.479 127.173 595.677 128.856 595.91 130.52 cv
596.064 131.629 596.207 132.764 596.477 133.85 cv
597.063 136.218 597.882 134.527 597.855 133.055 cv
597.817 130.807 597.054 114.312 602.574 105.756 cv
cp
.909804 .67451 .364706 rgb
f
617.753 135.893 mo
617.556 135.893 617.356 135.85 617.169 135.756 cv
613.261 133.824 607.825 134.732 606.672 135.619 cv
606.093 136.063 605.265 135.955 604.819 135.377 cv
604.376 134.799 604.484 133.969 605.063 133.525 cv
607.149 131.922 613.792 131.139 618.339 133.389 cv
618.993 133.711 619.261 134.504 618.938 135.158 cv
618.707 135.623 618.239 135.893 617.753 135.893 cv
cp
.729412 .52549 .388235 rgb
f
650.952 135.674 mo
650.759 135.674 650.563 135.631 650.376 135.541 cv
648.016 134.396 642.644 133.863 640.06 135.475 cv
639.44 135.859 638.626 135.67 638.239 135.051 cv
637.854 134.432 638.043 133.617 638.662 133.23 cv
642.19 131.033 648.535 131.713 651.53 133.164 cv
652.187 133.482 652.46 134.273 652.142 134.93 cv
651.913 135.4 651.442 135.674 650.952 135.674 cv
cp
f
646.386 175.284 mo
646.386 175.284 630.847 178.956 629.866 179.551 cv
629.765 179.505 629.974 179.544 629.866 179.551 cv
612.791 175.401 li
604.883 178.099 599.985 180.196 596.912 183.441 cv
662.599 183.441 li
659.483 180.155 654.483 178.039 646.386 175.284 cv
cp
1 .611765 .741176 rgb
f
638.39 181.23 mo
621.132 181.23 li
621.132 160.099 li
638.39 160.099 li
638.39 181.23 li
cp
1 .8 .6 rgb
f
625.43 179.393 mo
629.213 176.565 li
629.179 176.537 li
628.896 176.307 628.854 175.891 629.085 175.608 cv
629.206 175.461 629.376 175.382 629.553 175.37 cv
621.132 170.151 li
619.258 171.919 li
619.821 174.211 li
617.055 183.441 li
617.902 183.509 627.801 183.441 627.801 183.441 cv
625.43 179.393 li
cp
1 .611765 .741176 rgb
f
633.636 180.179 mo
629.213 176.565 li
625.43 179.393 li
627.801 183.441 li
627.801 183.441 628.704 183.441 629.752 183.441 cv
630.8 183.441 631.702 183.441 631.702 183.441 cv
633.636 180.179 li
cp
.235294 .192157 .247059 rgb
f
620.968 183.441 mo
620.776 183.441 620.587 183.601 620.456 183.441 cv
620.226 183.158 620.267 182.796 620.55 182.565 cv
629.179 175.515 li
629.461 175.282 629.878 175.325 630.108 175.608 cv
630.339 175.891 630.297 176.307 630.015 176.537 cv
621.386 183.441 li
621.263 183.542 621.114 183.441 620.968 183.441 cv
cp
.839216 .447059 .580392 rgb
f
633.636 180.179 mo
631.702 183.441 li
637.165 183.441 li
633.636 180.179 li
cp
1 .611765 .741176 rgb
f
637.519 181.646 mo
639.572 173.407 li
639.847 171.866 li
639.847 171.866 638.265 170.108 638.39 170.151 cv
638.507 170.191 630.847 174.841 629.866 175.436 cv
629.917 175.459 629.97 175.478 630.015 175.515 cv
637.519 181.646 li
cp
f
629.085 175.608 mo
628.854 175.891 628.896 176.307 629.179 176.537 cv
629.213 176.565 li
633.636 180.179 li
637.165 183.441 li
637.519 181.646 li
630.015 175.515 li
629.97 175.478 629.917 175.459 629.866 175.436 cv
629.765 175.39 629.66 175.363 629.553 175.37 cv
629.376 175.382 629.206 175.461 629.085 175.608 cv
cp
.839216 .447059 .580392 rgb
f
619.258 171.919 mo
617.343 172.624 li
617.341 172.625 617.334 172.625 617.332 172.626 cv
610.873 175.168 li
610.76 175.2 608.873 183.441 608.873 183.441 cv
608.846 183.568 622.196 183.441 622.196 183.441 cv
619.821 174.211 li
619.258 171.919 li
cp
.235294 .192157 .247059 rgb
f
648.035 175.168 mo
641.861 172.626 li
641.854 172.623 641.825 172.622 641.81 172.622 cv
639.847 171.866 li
639.572 173.407 li
637.519 181.646 li
637.165 183.441 li
637.165 183.441 li
650.557 183.441 li
650.667 183.369 648.147 175.2 648.035 175.168 cv
cp
f
530.604 322.264 mo
530.604 322.264 540.813 328.953 540.813 339.043 cv
540.813 355.471 532.902 356.6 534.732 360.588 cv
535.389 362.014 533.82 362.984 529.898 361.447 cv
524.262 359.234 514.398 350.869 521.182 335.359 cv
527.967 319.85 527.947 320.355 530.604 322.264 cv
cp
.537255 .388235 .286275 rgb
f
465.73 320.393 mo
465.73 320.393 460.139 291.871 472.402 278.4 cv
483.611 266.088 497.842 266.016 504.576 266.016 cv
511.311 266.016 535.291 270.596 538.645 293.205 cv
542.404 318.559 534.428 317.598 534.428 317.598 cv
534.428 317.598 507.268 336.162 496.408 331.879 cv
479.934 325.377 465.73 320.393 465.73 320.393 cv
cp
f
478.207 320.574 mo
478.797 325.336 476.053 329.598 472.076 330.09 cv
468.1 330.582 464.398 327.119 463.809 322.355 cv
463.219 317.592 465.965 313.332 469.941 312.84 cv
473.918 312.348 477.617 315.811 478.207 320.574 cv
cp
1 .8 .6 rgb
f
525.662 320.574 mo
525.07 325.336 527.814 329.598 531.793 330.09 cv
535.768 330.582 539.471 327.119 540.061 322.355 cv
540.65 317.592 537.904 313.332 533.926 312.84 cv
529.949 312.348 526.25 315.811 525.662 320.574 cv
cp
f
528.818 282.184 mo
522.975 273.896 516.975 273.639 507.301 273.238 cv
496.785 273.238 li
487.109 273.639 481.109 273.896 475.268 282.184 cv
469.42 290.475 471.635 292.625 472.096 302.629 cv
472.445 310.188 467.928 304.885 471.053 325.906 cv
474.18 346.928 492.438 353.67 502.043 353.67 cv
511.648 353.67 528.535 348.033 533.033 325.906 cv
537.529 303.779 531.639 310.188 531.988 302.629 cv
532.449 292.625 534.664 290.475 528.818 282.184 cv
cp
f
501.564 343.123 mo
498.121 343.123 494.123 342.277 491.934 339.857 cv
491.49 339.367 491.527 338.609 492.02 338.166 cv
492.51 337.725 493.268 337.76 493.709 338.25 cv
495.291 340 498.869 340.957 502.801 340.688 cv
505.838 340.48 508.42 339.553 509.221 338.379 cv
509.594 337.832 510.338 337.693 510.885 338.066 cv
511.432 338.439 511.57 339.184 511.199 339.729 cv
509.947 341.559 506.869 342.809 502.963 343.076 cv
502.512 343.107 502.045 343.123 501.564 343.123 cv
cp
.729412 .52549 .388235 rgb
f
479.592 311.432 mo
479.193 311.432 478.801 311.25 478.547 310.906 cv
478.121 310.33 478.242 309.518 478.818 309.094 cv
481.23 307.309 488.475 306.67 491.09 309.203 cv
491.604 309.703 491.615 310.523 491.117 311.039 cv
490.617 311.553 489.799 311.564 489.283 311.066 cv
487.691 309.525 481.93 310.018 480.361 311.178 cv
480.131 311.35 479.859 311.432 479.592 311.432 cv
cp
.419608 .27451 .176471 rgb
f
525.58 311.289 mo
525.332 311.289 525.08 311.217 524.857 311.066 cv
521.934 309.1 516.652 309.891 514.902 311.066 cv
514.309 311.467 513.502 311.309 513.102 310.715 cv
512.703 310.121 512.861 309.316 513.455 308.914 cv
516.014 307.193 522.443 306.314 526.307 308.914 cv
526.9 309.316 527.057 310.121 526.658 310.715 cv
526.406 311.088 525.998 311.289 525.58 311.289 cv
cp
f
523.457 320.395 mo
523.457 323.182 523.146 321.744 519.207 321.744 cv
515.266 321.744 514.953 323.182 514.953 320.395 cv
514.953 317.607 516.859 315.346 519.207 315.346 cv
521.555 315.346 523.457 317.607 523.457 320.395 cv
cp
.227451 .117647 .039216 rgb
f
488.037 331.408 mo
488.037 333.699 485.348 335.557 482.033 335.557 cv
478.715 335.557 476.029 333.699 476.029 331.408 cv
476.029 329.117 478.715 327.26 482.033 327.26 cv
485.348 327.26 488.037 329.117 488.037 331.408 cv
cp
.988235 .690196 .584314 rgb
f
528 331.408 mo
528 333.699 525.313 335.557 521.996 335.557 cv
518.68 335.557 515.99 333.699 515.99 331.408 cv
515.99 329.117 518.68 327.26 521.996 327.26 cv
525.313 327.26 528 329.117 528 331.408 cv
cp
f
489.074 320.395 mo
489.074 323.182 488.762 321.744 484.822 321.744 cv
480.881 321.744 480.57 323.182 480.57 320.395 cv
480.57 317.607 482.477 315.346 484.822 315.346 cv
487.17 315.346 489.074 317.607 489.074 320.395 cv
cp
.227451 .117647 .039216 rgb
f
534.732 314.91 mo
469.945 314.91 li
469.23 314.91 468.648 314.33 468.648 313.613 cv
468.648 312.898 469.23 312.318 469.945 312.318 cv
534.732 312.318 li
535.449 312.318 536.029 312.898 536.029 313.613 cv
536.029 314.33 535.449 314.91 534.732 314.91 cv
cp
f
488.934 327.293 mo
486.055 327.293 482.664 327.191 480.307 327.121 cv
479.189 327.088 478.354 327.063 478.002 327.063 cv
476.934 327.063 475.389 326.936 474.305 325.838 cv
472.828 324.342 472.857 321.848 472.912 317.717 cv
472.922 316.859 472.934 315.92 472.934 314.9 cv
472.934 314.184 473.516 313.604 474.23 313.604 cv
474.947 313.604 475.527 314.184 475.527 314.9 cv
475.527 315.934 475.516 316.881 475.504 317.75 cv
475.463 320.967 475.434 323.291 476.15 324.016 cv
476.26 324.129 476.598 324.469 478.002 324.469 cv
478.363 324.469 479.23 324.494 480.385 324.529 cv
483.721 324.629 489.928 324.814 492.684 324.6 cv
494.518 324.457 494.719 324.197 494.686 316.891 cv
494.682 316.17 494.68 315.398 494.68 314.566 cv
494.68 313.852 495.258 313.271 495.977 313.271 cv
496.691 313.271 497.271 313.852 497.271 314.566 cv
497.271 315.395 497.275 316.164 497.277 316.879 cv
497.309 323.717 497.324 326.838 492.885 327.186 cv
491.873 327.264 490.479 327.293 488.934 327.293 cv
cp
f
516.293 327.658 mo
514.334 327.658 512.717 327.607 511.848 327.465 cv
506.766 326.625 506.816 323.484 506.908 317.781 cv
506.924 316.82 506.941 315.752 506.941 314.566 cv
506.941 313.852 507.521 313.271 508.238 313.271 cv
508.953 313.271 509.535 313.852 509.535 314.566 cv
509.535 315.768 509.516 316.85 509.5 317.824 cv
509.398 324 509.582 324.463 512.271 324.906 cv
514.016 325.193 520.414 325.02 523.488 324.936 cv
524.492 324.91 525.25 324.889 525.582 324.889 cv
527.77 324.889 527.998 324.523 528.244 323.826 cv
528.725 322.453 528.725 319.617 528.725 314.92 cv
530.02 314.9 li
531.316 314.92 li
531.316 320.063 531.316 322.895 530.689 324.686 cv
529.783 327.266 527.578 327.48 525.582 327.48 cv
525.26 327.48 524.529 327.5 523.559 327.529 cv
521.082 327.596 518.475 327.658 516.293 327.658 cv
cp
f
537.494 297.902 mo
537.461 297.814 537.424 297.727 537.387 297.637 cv
535.912 294.094 535.787 290.418 533.758 287.133 cv
531.326 283.191 528.758 278.783 524.717 276.178 cv
524.531 276.057 524.334 275.941 524.139 275.824 cv
519.486 271.881 513.297 272.246 506.684 271.375 cv
491.398 269.363 477.924 271.504 469.945 283.973 cv
466.883 288.76 465.74 297.146 464.754 302.773 cv
464.125 306.352 464.053 312.563 464.973 316.102 cv
465.527 318.244 467.018 322.174 469.746 319.832 cv
471.568 318.264 470.736 309.264 470.736 309.264 cv
472.559 310.344 475.881 308.891 477.246 307.705 cv
478.512 306.607 481.262 303.762 480.57 301.82 cv
482.822 308.133 494.99 303.764 497.178 295.336 cv
500.188 303.229 512.977 295.613 515.99 289.461 cv
516.461 293.172 517.557 296.172 520.621 298.133 cv
522.973 299.639 527.223 299.654 529.377 297.617 cv
526.977 300.723 528.057 311.162 533.352 310.797 cv
533.027 312.168 531.762 316.395 534.428 317.598 cv
535.947 318.283 537.621 316.381 538.137 315.23 cv
538.98 313.357 538.486 308.838 538.578 306.781 cv
538.73 303.406 538.703 300.936 537.494 297.902 cv
cp
.537255 .388235 .286275 rgb
f
508.612 371.778 mo
496.831 371.778 li
496.386 348.143 li
508.167 348.143 li
508.612 371.778 li
cp
1 .8 .6 rgb
f
525.259 371.778 mo
522.562 363.817 520.866 363.691 511.435 359.469 cv
511.31 359.414 508.087 357.545 508.087 357.545 cv
502.233 369.318 li
499.364 364.096 li
496.306 357.545 li
496.306 357.545 493.556 359.203 493.462 359.244 cv
483.581 363.643 482.729 363.788 480.022 371.778 cv
525.259 371.778 li
cp
.776471 .231373 .129412 rgb
f
511.034 359.699 mo
510.987 359.352 510.671 359.121 510.321 359.156 cv
509.974 359.203 509.731 359.523 509.778 359.869 cv
510.624 366.098 li
505.073 363.465 li
502.112 368.65 li
499.358 363.631 li
493.644 366.137 li
494.497 359.869 li
494.542 359.523 494.3 359.203 493.954 359.156 cv
493.604 359.119 493.288 359.352 493.241 359.699 cv
492.087 368.203 li
498.806 365.256 li
501.546 370.25 li
501.554 370.264 501.567 370.268 501.575 370.279 cv
501.622 370.354 501.683 370.42 501.761 370.471 cv
501.798 370.494 501.837 370.504 501.876 370.52 cv
501.95 370.549 502.026 370.58 502.103 370.58 cv
502.103 370.58 li
502.104 370.58 502.104 370.58 502.104 370.58 cv
502.204 370.58 502.31 370.555 502.407 370.5 cv
502.407 370.5 li
502.423 370.492 502.433 370.477 502.446 370.467 cv
502.519 370.418 502.579 370.359 502.624 370.291 cv
502.632 370.279 502.646 370.273 502.653 370.262 cv
505.591 365.111 li
512.192 368.242 li
511.034 359.699 li
cp
.639216 .14902 .086275 rgb
f
139.291 499.468 mo
138.233 505.483 141.8 510.491 147.26 511.571 cv
152.721 512.651 158.002 509.392 159.059 503.376 cv
160.117 497.361 156.55 491.609 151.09 490.529 cv
145.631 489.451 140.349 493.453 139.291 499.468 cv
cp
.956863 .803922 .596078 rgb
f
101.197 499.468 mo
102.255 505.483 98.689 510.491 93.228 511.571 cv
87.7686 512.651 82.4868 509.392 81.4307 503.376 cv
80.3726 497.361 83.9395 491.609 89.3989 490.529 cv
94.8579 489.451 100.14 493.453 101.197 499.468 cv
cp
f
147.49 458.947 mo
142.158 451.706 133.847 446.949 125.02 446.598 cv
125.019 446.598 124.846 446.591 124.563 446.58 cv
124.573 446.234 li
124.573 446.234 122.433 446.319 120.224 446.407 cv
118.014 446.319 115.875 446.234 115.875 446.234 cv
115.884 446.58 li
115.601 446.591 115.428 446.598 115.426 446.598 cv
106.6 446.949 98.2881 451.706 92.957 458.947 cv
87.6235 466.195 86.9136 475.325 87.3335 484.068 cv
87.6519 490.675 88.8213 501.34 89.1499 507.946 cv
94.5034 527.975 107.823 531.396 120.224 531.396 cv
132.625 531.396 146.388 527.975 151.297 507.946 cv
151.625 501.34 152.794 490.675 153.113 484.068 cv
153.532 475.325 152.824 466.195 147.49 458.947 cv
cp
f
120.453 522.15 mo
117.013 522.15 113.142 521.254 110.873 519.012 cv
110.353 518.5 110.349 517.664 110.861 517.145 cv
111.375 516.625 112.21 516.621 112.729 517.133 cv
114.625 519.006 118.843 519.936 122.765 519.344 cv
125.387 518.947 127.381 517.91 128.098 516.568 cv
128.443 515.926 129.244 515.684 129.886 516.027 cv
130.529 516.371 130.771 517.172 130.427 517.814 cv
129.286 519.949 126.705 521.42 123.16 521.955 cv
122.318 522.082 121.402 522.15 120.453 522.15 cv
cp
.729412 .52549 .388235 rgb
f
88.8442 492.188 mo
89.2446 483.868 89.3521 468.811 96.7021 468.811 cv
102.145 468.811 103.623 470.054 120.157 470.054 cv
134.787 470.054 139.04 468.397 144.516 468.397 cv
150.383 468.397 151.839 476.24 151.952 487.116 cv
151.975 489.354 152.131 491.6 152.26 493.836 cv
152.336 495.147 152.43 496.459 152.499 497.771 cv
152.526 498.305 152.664 499.731 153.361 499.596 cv
154.14 499.443 154.23 496.56 154.308 495.942 cv
154.868 491.606 155.018 487.156 155.016 482.791 cv
155.005 474.729 157.349 459.206 142.761 449.532 cv
133.79 443.583 115.244 442.99 104.918 446.358 cv
97.7275 448.706 90.833 454.82 88.27 461.938 cv
85.4556 469.759 85.5278 475.871 86.4546 491.356 cv
86.5557 493.037 86.7529 494.718 86.9854 496.384 cv
87.1416 497.491 87.2827 498.626 87.5527 499.712 cv
88.1387 502.079 88.958 500.39 88.9321 498.916 cv
88.8936 496.668 88.7358 494.44 88.8442 492.188 cv
cp
.2 .098039 .027451 rgb
f
98.7954 492.489 mo
98.2896 492.489 97.8091 492.192 97.5981 491.696 cv
97.3179 491.036 97.6255 490.274 98.2866 489.993 cv
102.523 488.192 107.289 488.192 110.145 489.989 cv
110.753 490.372 110.936 491.173 110.553 491.78 cv
110.17 492.388 109.37 492.573 108.762 492.188 cv
107.015 491.091 103.308 490.683 99.3022 492.386 cv
99.1372 492.456 98.9644 492.489 98.7954 492.489 cv
cp
.227451 .117647 .039216 rgb
f
131.259 492.503 mo
130.851 492.503 130.45 492.312 130.197 491.952 cv
129.783 491.366 129.922 490.556 130.509 490.142 cv
132.758 488.554 139.801 488.06 142.676 489.753 cv
143.295 490.116 143.5 490.913 143.137 491.532 cv
142.772 492.151 141.976 492.354 141.358 491.993 cv
139.393 490.835 133.544 491.181 132.007 492.265 cv
131.78 492.425 131.518 492.503 131.259 492.503 cv
cp
f
109.706 500.608 mo
109.443 500.608 109.178 500.528 108.949 500.364 cv
106.25 498.425 102.715 498.128 98.9976 499.524 cv
98.3276 499.776 97.5767 499.437 97.3237 498.765 cv
97.0718 498.093 97.4116 497.345 98.0835 497.091 cv
102.639 495.38 107.037 495.79 110.464 498.253 cv
111.047 498.671 111.181 499.483 110.762 500.065 cv
110.508 500.419 110.11 500.608 109.706 500.608 cv
cp
f
131.055 500.608 mo
130.651 500.608 130.252 500.419 129.999 500.065 cv
129.58 499.483 129.713 498.671 130.296 498.253 cv
133.723 495.796 138.118 495.38 142.678 497.091 cv
143.35 497.345 143.69 498.093 143.438 498.765 cv
143.185 499.437 142.432 499.776 141.764 499.524 cv
138.046 498.128 134.511 498.427 131.812 500.364 cv
131.583 500.528 131.318 500.608 131.055 500.608 cv
cp
f
152.967 494.664 mo
88.2822 494.664 li
87.6099 494.664 87.0625 494.119 87.0625 493.445 cv
87.0625 492.772 87.6099 492.228 88.2822 492.228 cv
152.967 492.228 li
153.64 492.228 154.186 492.772 154.186 493.445 cv
154.186 494.119 153.64 494.664 152.967 494.664 cv
cp
f
108.243 507.479 mo
105.364 507.479 101.974 507.378 99.6157 507.308 cv
98.4995 507.274 97.6626 507.249 97.311 507.249 cv
96.2427 507.249 94.6978 507.122 93.6138 506.024 cv
92.1372 504.528 92.1675 502.034 92.2212 497.903 cv
92.231 497.046 92.2427 496.106 92.2427 495.087 cv
92.2427 494.37 92.8247 493.79 93.5396 493.79 cv
94.2563 493.79 94.8364 494.37 94.8364 495.087 cv
94.8364 496.12 94.8247 497.067 94.813 497.937 cv
94.772 501.153 94.7427 503.478 95.4595 504.202 cv
95.5688 504.315 95.9067 504.655 97.311 504.655 cv
97.6724 504.655 98.5396 504.681 99.6948 504.716 cv
103.03 504.815 109.237 505.001 111.993 504.786 cv
113.828 504.644 114.028 504.384 113.995 497.077 cv
113.992 496.356 113.989 495.585 113.989 494.753 cv
113.989 494.038 114.568 493.458 115.286 493.458 cv
116 493.458 116.582 494.038 116.582 494.753 cv
116.582 495.581 116.584 496.351 116.586 497.065 cv
116.619 503.903 116.633 507.024 112.195 507.372 cv
111.182 507.45 109.788 507.479 108.243 507.479 cv
cp
f
133.603 507.845 mo
131.643 507.845 130.027 507.794 129.158 507.651 cv
124.075 506.812 124.125 503.671 124.217 497.968 cv
124.234 497.007 124.25 495.938 124.25 494.753 cv
124.25 494.038 124.831 493.458 125.548 493.458 cv
126.263 493.458 126.844 494.038 126.844 494.753 cv
126.844 495.954 126.826 497.036 126.81 498.011 cv
126.708 504.187 126.891 504.649 129.581 505.093 cv
131.325 505.38 137.723 505.206 140.798 505.122 cv
141.801 505.097 142.559 505.075 142.891 505.075 cv
145.079 505.075 145.307 504.71 145.553 504.013 cv
146.034 502.64 146.034 499.804 146.034 495.106 cv
147.33 495.087 li
148.626 495.106 li
148.626 500.249 148.626 503.081 147.999 504.872 cv
147.093 507.452 144.887 507.667 142.891 507.667 cv
142.569 507.667 141.838 507.687 140.869 507.716 cv
138.392 507.782 135.784 507.845 133.603 507.845 cv
cp
f
136.163 541.621 mo
136.163 541.621 120.624 545.293 119.643 545.889 cv
119.542 545.842 119.75 545.881 119.643 545.889 cv
102.567 541.738 li
94.6602 544.436 89.7622 546.533 86.6895 549.778 cv
152.375 549.778 li
149.26 546.492 144.26 544.377 136.163 541.621 cv
cp
.235294 .192157 .247059 rgb
f
128.167 548.568 mo
110.909 548.568 li
110.909 527.436 li
128.167 527.436 li
128.167 548.568 li
cp
.956863 .803922 .596078 rgb
f
115.207 545.73 mo
118.99 542.902 li
118.956 542.875 li
118.673 542.645 118.631 542.229 118.862 541.945 cv
118.983 541.799 119.153 541.719 119.33 541.707 cv
110.909 536.488 li
109.035 538.256 li
109.598 540.549 li
106.832 549.778 li
107.68 549.847 117.578 549.778 117.578 549.778 cv
115.207 545.73 li
cp
1 1 1 rgb
f
123.413 546.516 mo
118.99 542.902 li
115.207 545.73 li
117.578 549.778 li
117.578 549.778 118.481 549.778 119.529 549.778 cv
120.577 549.778 121.479 549.778 121.479 549.778 cv
123.413 546.516 li
cp
.235294 .192157 .247059 rgb
f
110.745 549.778 mo
110.553 549.778 110.364 549.938 110.233 549.778 cv
110.002 549.495 110.043 549.133 110.327 548.902 cv
118.956 541.852 li
119.238 541.619 119.655 541.662 119.885 541.945 cv
120.116 542.229 120.074 542.645 119.792 542.875 cv
111.163 549.778 li
111.04 549.879 110.891 549.778 110.745 549.778 cv
cp
.690196 .678431 .698039 rgb
f
123.413 546.516 mo
121.479 549.778 li
126.942 549.778 li
123.413 546.516 li
cp
1 1 1 rgb
f
127.295 547.984 mo
129.349 539.744 li
129.624 538.203 li
129.624 538.203 128.042 536.445 128.167 536.488 cv
128.284 536.529 120.624 541.178 119.643 541.773 cv
119.694 541.797 119.747 541.814 119.792 541.852 cv
127.295 547.984 li
cp
f
118.862 541.945 mo
118.631 542.229 118.673 542.645 118.956 542.875 cv
118.99 542.902 li
123.413 546.516 li
126.942 549.778 li
127.295 547.984 li
119.792 541.852 li
119.747 541.814 119.694 541.797 119.643 541.773 cv
119.542 541.727 119.437 541.701 119.33 541.707 cv
119.153 541.719 118.983 541.799 118.862 541.945 cv
cp
.690196 .678431 .698039 rgb
f
109.035 538.256 mo
107.12 538.961 li
107.118 538.963 107.11 538.963 107.109 538.963 cv
102.935 540.506 li
102.823 540.537 102.737 540.627 102.712 540.742 cv
102.567 541.738 li
101.691 549.778 li
101.665 549.905 111.973 549.778 111.973 549.778 cv
109.598 540.549 li
109.035 538.256 li
cp
.329412 .282353 .352941 rgb
f
136.163 541.621 mo
136.034 540.742 li
136.01 540.627 135.924 540.537 135.812 540.506 cv
131.638 538.963 li
131.63 538.961 131.602 538.959 131.586 538.959 cv
129.624 538.203 li
129.349 539.744 li
127.295 547.984 li
126.942 549.778 li
126.942 549.778 li
137.333 549.778 li
137.444 549.706 136.163 541.621 136.163 541.621 cv
cp
f
542.109 737.65 mo
541.24 671.033 li
541.24 646.971 527.898 630.959 502.268 630.959 cv
478.596 630.959 463.299 646.223 463.299 671.033 cv
462.431 737.648 li
542.109 737.65 li
cp
.2 .098039 .027451 rgb
f
529.564 647.57 mo
523.721 639.285 517.721 639.029 508.047 638.627 cv
497.531 638.627 li
487.855 639.029 481.855 639.285 476.014 647.57 cv
470.166 655.865 472.381 658.014 472.842 668.018 cv
473.191 675.576 468.674 670.273 471.799 691.295 cv
474.926 712.318 493.182 719.061 502.787 719.061 cv
512.395 719.061 529.281 713.424 533.779 691.295 cv
538.277 669.168 532.385 675.576 532.736 668.018 cv
533.195 658.014 535.41 655.865 529.564 647.57 cv
cp
.878431 .666667 .47451 rgb
f
489.82 685.783 mo
489.82 688.57 487.916 690.83 485.568 690.83 cv
483.221 690.83 481.316 688.57 481.316 685.783 cv
481.316 682.998 483.221 680.736 485.568 680.736 cv
487.916 680.736 489.82 682.998 489.82 685.783 cv
cp
.227451 .117647 .039216 rgb
f
524.205 685.783 mo
524.205 688.572 522.299 690.83 519.953 690.83 cv
517.605 690.83 515.701 688.572 515.701 685.783 cv
515.701 682.996 517.605 680.736 519.953 680.736 cv
522.299 680.736 524.205 682.996 524.205 685.783 cv
cp
f
488.783 696.797 mo
488.783 699.088 486.096 700.945 482.777 700.945 cv
479.463 700.945 476.773 699.088 476.773 696.797 cv
476.773 694.506 479.463 692.648 482.777 692.648 cv
486.096 692.648 488.783 694.506 488.783 696.797 cv
cp
.866667 .580392 .478431 rgb
f
528.746 696.797 mo
528.746 699.088 526.059 700.945 522.742 700.945 cv
519.426 700.945 516.736 699.088 516.736 696.797 cv
516.736 694.506 519.426 692.648 522.742 692.648 cv
526.059 692.648 528.746 694.506 528.746 696.797 cv
cp
f
502.339 708.549 mo
498.896 708.549 494.897 707.705 492.708 705.283 cv
492.265 704.793 492.302 704.035 492.792 703.592 cv
493.284 703.148 494.039 703.188 494.483 703.678 cv
496.065 705.426 499.628 706.387 503.574 706.113 cv
506.612 705.908 509.192 704.979 509.996 703.805 cv
510.368 703.26 511.112 703.119 511.659 703.492 cv
512.206 703.865 512.346 704.611 511.973 705.156 cv
510.722 706.986 507.644 708.236 503.736 708.502 cv
503.286 708.533 502.817 708.549 502.339 708.549 cv
cp
.639216 .431373 .27451 rgb
f
490.961 676.859 mo
490.603 676.859 490.247 676.711 489.989 676.422 cv
488.787 675.064 487.163 674.756 486.013 674.736 cv
484.195 674.707 482.309 675.396 481.304 676.455 cv
480.812 676.975 479.99 676.996 479.472 676.504 cv
478.952 676.012 478.931 675.189 479.423 674.672 cv
480.944 673.068 483.487 672.102 486.058 672.145 cv
488.419 672.186 490.505 673.094 491.932 674.703 cv
492.405 675.24 492.356 676.059 491.82 676.533 cv
491.573 676.752 491.267 676.859 490.961 676.859 cv
cp
.227451 .117647 .039216 rgb
f
515.728 676.715 mo
515.448 676.715 515.165 676.625 514.929 676.439 cv
514.365 675.996 514.267 675.182 514.709 674.619 cv
515.8 673.229 517.861 672.299 520.087 672.193 cv
522.442 672.08 524.599 672.906 526.14 674.525 cv
526.634 675.043 526.614 675.863 526.096 676.357 cv
525.579 676.852 524.758 676.832 524.263 676.314 cv
522.895 674.877 521.136 674.736 520.211 674.783 cv
518.544 674.861 517.248 675.582 516.748 676.219 cv
516.493 676.545 516.112 676.715 515.728 676.715 cv
cp
f
470.72 703.283 mo
470.72 703.283 468.919 677.746 489.849 662.664 cv
493.706 659.885 499.533 656.996 502.349 652.57 cv
502.349 652.57 505.84 656.961 512.182 662.664 cv
521.09 670.672 533.152 674.59 534.486 695.205 cv
534.486 695.205 551.54 634.65 504.031 634.65 cv
466.699 634.65 467.216 656.785 470.72 703.283 cv
cp
.2 .098039 .027451 rgb
f
505.059 671.025 mo
505.059 672.553 503.819 673.793 502.29 673.793 cv
500.762 673.793 499.522 672.553 499.522 671.025 cv
499.522 669.496 500.762 668.256 502.29 668.256 cv
503.819 668.256 505.059 669.496 505.059 671.025 cv
cp
.776471 .419608 .309804 rgb
f
508.67 733.938 mo
495.909 733.938 li
495.909 714.234 li
508.67 714.234 li
508.67 733.938 li
cp
.878431 .666667 .47451 rgb
f
526.791 737.648 mo
524.16 729.879 522.777 728.916 515.064 725.277 cv
515.022 724.982 li
515.004 724.895 514.938 724.824 514.852 724.801 cv
511.635 723.613 li
511.628 723.611 511.605 723.611 511.596 723.607 cv
510.081 723.027 li
510.074 723.064 li
509.313 722.473 503.604 731.17 502.246 731.582 cv
500.889 731.17 495.063 722.557 494.225 723.111 cv
494.215 723.066 li
492.737 723.611 li
492.737 723.611 492.73 723.611 492.73 723.613 cv
489.514 724.801 li
489.427 724.824 489.361 724.895 489.342 724.982 cv
489.283 725.389 li
481.762 728.977 480.362 730.057 477.791 737.648 cv
526.791 737.648 li
cp
.376471 .372549 .427451 rgb
f
510.074 723.064 mo
509.313 722.473 508.67 721.924 508.67 721.924 cv
508.67 721.924 503.541 724.619 502.183 725.031 cv
500.825 724.619 495.909 721.924 495.909 721.924 cv
495.909 721.924 495.063 722.557 494.225 723.111 cv
494.648 724.834 li
497.395 737.648 li
497.701 737.648 507.752 737.652 508.057 737.648 cv
509.871 724.215 li
510.074 723.064 li
cp
1 1 1 rgb
f
496.326 731.582 mo
496.122 731.582 495.919 731.496 495.781 731.326 cv
495.534 731.025 495.578 730.582 495.881 730.336 cv
501.737 725.549 li
502.037 725.303 502.482 725.35 502.728 725.65 cv
502.973 725.949 502.928 726.395 502.628 726.641 cv
496.77 731.426 li
496.641 731.531 496.482 731.582 496.326 731.582 cv
cp
.690196 .678431 .698039 rgb
f
508.037 731.582 mo
507.882 731.582 507.725 731.531 507.594 731.426 cv
501.737 726.641 li
501.436 726.395 501.393 725.949 501.637 725.65 cv
501.883 725.35 502.326 725.303 502.628 725.549 cv
508.484 730.336 li
508.785 730.582 508.829 731.025 508.584 731.326 cv
508.446 731.496 508.243 731.582 508.037 731.582 cv
cp
f
494.225 723.111 mo
494.215 723.066 li
492.737 723.611 li
492.737 723.611 492.73 723.611 492.73 723.613 cv
489.514 724.801 li
489.427 724.824 489.361 724.895 489.342 724.982 cv
489.283 725.389 li
488.018 734.086 li
487.996 734.184 488.036 734.287 488.123 734.342 cv
493.225 737.648 li
493.225 737.648 497.774 737.648 498.479 737.648 cv
498.479 737.648 li
494.648 724.834 li
494.225 723.111 li
cp
.486275 .486275 .537255 rgb
f
511.141 737.648 mo
516.24 734.342 li
516.326 734.287 516.368 734.184 516.347 734.086 cv
515.064 725.277 li
515.022 724.982 li
515.004 724.895 514.938 724.824 514.852 724.801 cv
511.635 723.613 li
511.628 723.611 511.605 723.611 511.596 723.607 cv
510.081 723.027 li
510.074 723.064 li
509.871 724.215 li
505.891 737.648 li
506.597 737.639 511.141 737.648 511.141 737.648 cv
cp
f
733.17 497.945 mo
733.762 502.719 731.012 506.991 727.025 507.483 cv
723.039 507.978 719.328 504.506 718.738 499.731 cv
718.146 494.957 720.898 490.688 724.885 490.193 cv
728.871 489.699 732.58 493.17 733.17 497.945 cv
cp
1 .8 .6 rgb
f
780.736 497.945 mo
780.145 502.719 782.895 506.991 786.881 507.483 cv
790.867 507.978 794.578 504.506 795.17 499.731 cv
795.762 494.957 793.008 490.688 789.021 490.193 cv
785.035 489.699 781.326 493.17 780.736 497.945 cv
cp
f
783.914 459.416 mo
778.055 451.111 772.041 450.854 762.344 450.452 cv
751.805 450.452 li
742.105 450.854 736.092 451.111 730.236 459.416 cv
724.375 467.729 726.596 469.885 727.059 479.912 cv
727.408 487.488 722.879 482.172 726.012 503.244 cv
729.146 524.315 747.445 531.073 757.074 531.073 cv
766.701 531.073 783.629 525.423 788.137 503.244 cv
792.646 481.064 786.74 487.488 787.092 479.912 cv
787.553 469.885 789.773 467.729 783.914 459.416 cv
cp
f
757.342 520.612 mo
757.428 520.612 757.512 520.612 757.598 520.61 cv
761.834 520.542 765.318 518.849 767.156 515.966 cv
767.512 515.407 767.348 514.665 766.789 514.31 cv
766.229 513.95 765.488 514.116 765.131 514.677 cv
763.148 517.788 759.176 518.185 757.559 518.21 cv
754.561 518.255 751.742 517.298 750.805 515.927 cv
750.432 515.378 749.684 515.239 749.137 515.614 cv
748.59 515.987 748.449 516.733 748.824 517.28 cv
750.195 519.288 753.598 520.612 757.342 520.612 cv
cp
.729412 .52549 .388235 rgb
f
744.076 497.719 mo
744.076 500.512 742.168 502.776 739.814 502.776 cv
737.461 502.776 735.551 500.512 735.551 497.719 cv
735.551 494.926 737.461 492.66 739.814 492.66 cv
742.168 492.66 744.076 494.926 744.076 497.719 cv
cp
.227451 .117647 .039216 rgb
f
745.189 490.591 mo
744.832 490.591 744.475 490.442 744.217 490.152 cv
743.012 488.792 741.385 488.482 740.23 488.463 cv
738.387 488.417 736.518 489.124 735.51 490.186 cv
735.016 490.706 734.193 490.727 733.674 490.233 cv
733.152 489.739 733.131 488.917 733.625 488.396 cv
735.148 486.791 737.713 485.839 740.275 485.864 cv
742.643 485.905 744.734 486.816 746.162 488.43 cv
746.639 488.967 746.588 489.788 746.051 490.264 cv
745.805 490.482 745.496 490.591 745.189 490.591 cv
cp
f
770.016 488.591 mo
769.734 488.591 769.451 488.5 769.213 488.313 cv
768.648 487.87 768.551 487.054 768.994 486.489 cv
770.086 485.096 772.152 484.164 774.383 484.057 cv
776.758 483.945 778.906 484.773 780.451 486.395 cv
780.947 486.914 780.928 487.736 780.408 488.231 cv
779.889 488.728 779.066 488.707 778.57 488.188 cv
777.199 486.748 775.439 486.61 774.508 486.652 cv
772.838 486.732 771.539 487.456 771.039 488.093 cv
770.781 488.42 770.4 488.591 770.016 488.591 cv
cp
f
778.541 497.719 mo
778.541 500.513 776.631 502.777 774.279 502.777 cv
771.926 502.777 770.016 500.513 770.016 497.719 cv
770.016 494.926 771.926 492.659 774.279 492.659 cv
776.631 492.659 778.541 494.926 778.541 497.719 cv
cp
f
721.939 471.882 mo
721.939 460.049 729.535 448.049 743.035 444.382 cv
762.836 439.004 783.936 443.797 789.842 461.882 cv
792.736 470.746 793.164 478.227 791.605 487.436 cv
790.723 492.659 789.082 497.059 787.953 497.938 cv
789.021 490.193 784.902 479.162 784.771 478.715 cv
785.111 479.873 784.463 481.412 784.105 482.549 cv
782.436 481.629 772.184 473.523 771.115 472.293 cv
770.902 472.84 771.84 475.846 771.564 479.09 cv
762.271 476.382 754.688 469.303 755.193 470.965 cv
755.891 473.254 755.75 476.305 755.404 476.215 cv
747.225 474.094 740.156 469.822 735.293 464.886 cv
733.25 475.477 727.84 495.326 725.191 496.703 cv
720.939 489.049 721.939 473.635 721.939 471.882 cv
cp
.709804 .67451 .619608 rgb
f
743.035 508.759 mo
743.035 511.056 740.342 512.917 737.018 512.917 cv
733.693 512.917 730.998 511.056 730.998 508.759 cv
730.998 506.462 733.693 504.6 737.018 504.6 cv
740.342 504.6 743.035 506.462 743.035 508.759 cv
cp
.988235 .690196 .584314 rgb
f
783.094 508.759 mo
783.094 511.056 780.398 512.917 777.074 512.917 cv
773.75 512.917 771.057 511.056 771.057 508.759 cv
771.057 506.462 773.75 504.6 777.074 504.6 cv
780.398 504.6 783.094 506.462 783.094 508.759 cv
cp
f
763.439 546.137 mo
750.679 546.137 li
750.679 526.435 li
763.439 526.435 li
763.439 546.137 li
cp
1 .8 .6 rgb
f
781.561 549.848 mo
778.93 542.079 777.547 541.116 769.834 537.478 cv
769.791 537.182 li
769.773 537.094 769.707 537.024 769.621 537.001 cv
766.404 535.813 li
766.396 535.811 766.375 535.811 766.365 535.808 cv
764.85 535.227 li
764.844 535.265 li
764.082 534.672 758.374 543.37 757.016 543.782 cv
755.658 543.37 749.832 534.757 748.994 535.312 cv
748.984 535.267 li
747.507 535.811 li
747.507 535.811 747.5 535.811 747.5 535.813 cv
744.283 537.001 li
744.196 537.024 744.131 537.094 744.111 537.182 cv
744.053 537.588 li
736.531 541.176 735.132 542.257 732.561 549.848 cv
781.561 549.848 li
cp
.376471 .372549 .427451 rgb
f
764.844 535.265 mo
764.082 534.672 763.439 534.124 763.439 534.124 cv
763.439 534.124 758.311 536.819 756.952 537.231 cv
755.595 536.819 750.679 534.124 750.679 534.124 cv
750.679 534.124 749.832 534.757 748.994 535.312 cv
749.418 537.033 li
752.164 549.848 li
752.471 549.848 762.521 549.852 762.826 549.848 cv
764.641 536.415 li
764.844 535.265 li
cp
1 1 1 rgb
f
751.096 543.782 mo
750.892 543.782 750.688 543.695 750.551 543.525 cv
750.304 543.226 750.348 542.781 750.65 542.536 cv
756.507 537.749 li
756.807 537.502 757.252 537.549 757.497 537.85 cv
757.742 538.149 757.697 538.595 757.397 538.84 cv
751.539 543.625 li
751.41 543.731 751.252 543.782 751.096 543.782 cv
cp
.690196 .678431 .698039 rgb
f
762.807 543.782 mo
762.651 543.782 762.494 543.731 762.363 543.625 cv
756.507 538.84 li
756.205 538.595 756.162 538.149 756.406 537.85 cv
756.652 537.549 757.096 537.502 757.397 537.749 cv
763.254 542.536 li
763.555 542.781 763.599 543.226 763.354 543.525 cv
763.216 543.695 763.013 543.782 762.807 543.782 cv
cp
f
748.994 535.312 mo
748.984 535.267 li
747.507 535.811 li
747.507 535.811 747.5 535.811 747.5 535.813 cv
744.283 537.001 li
744.196 537.024 744.131 537.094 744.111 537.182 cv
744.053 537.588 li
742.787 546.286 li
742.766 546.384 742.806 546.486 742.893 546.541 cv
747.994 549.848 li
747.994 549.848 752.544 549.848 753.248 549.848 cv
753.248 549.848 li
749.418 537.033 li
748.994 535.312 li
cp
.486275 .486275 .537255 rgb
f
765.91 549.848 mo
771.01 546.541 li
771.096 546.486 771.137 546.384 771.115 546.286 cv
769.834 537.478 li
769.791 537.182 li
769.773 537.094 769.707 537.024 769.621 537.001 cv
766.404 535.813 li
766.396 535.811 766.375 535.811 766.365 535.808 cv
764.85 535.227 li
764.844 535.265 li
764.641 536.415 li
760.66 549.848 li
761.366 549.839 765.91 549.848 765.91 549.848 cv
cp
f
648.659 498.851 mo
647.601 504.866 651.167 509.874 656.628 510.955 cv
662.09 512.033 667.37 508.774 668.427 502.758 cv
669.483 496.743 665.918 490.992 660.458 489.911 cv
654.998 488.832 649.716 492.836 648.659 498.851 cv
cp
1 .8 .6 rgb
f
610.563 498.851 mo
611.622 504.866 608.056 509.874 602.596 510.955 cv
597.135 512.033 591.854 508.774 590.798 502.758 cv
589.74 496.743 593.307 490.992 598.765 489.911 cv
604.224 488.832 609.508 492.836 610.563 498.851 cv
cp
f
656.857 458.328 mo
651.526 451.085 643.214 446.332 634.388 445.979 cv
634.386 445.979 634.214 445.972 633.931 445.96 cv
633.94 445.615 li
633.94 445.615 631.8 445.699 629.591 445.789 cv
627.381 445.699 625.241 445.615 625.241 445.615 cv
625.251 445.96 li
624.968 445.972 624.796 445.979 624.795 445.979 cv
615.968 446.332 607.655 451.085 602.325 458.328 cv
596.99 465.575 596.281 474.706 596.701 483.449 cv
597.019 490.057 598.188 500.722 598.516 507.329 cv
603.87 527.357 617.189 530.778 629.589 530.778 cv
641.991 530.778 655.755 527.357 660.666 507.329 cv
660.992 500.722 662.162 490.057 662.479 483.449 cv
662.9 474.706 662.192 465.575 656.857 458.328 cv
cp
f
638.17 546.317 mo
621.009 546.317 li
621.009 525.305 li
638.17 525.305 li
638.17 546.317 li
cp
f
616.781 495.977 mo
616.781 498.559 615.019 500.652 612.842 500.652 cv
610.666 500.652 608.902 498.559 608.902 495.977 cv
608.902 493.395 610.666 491.301 612.842 491.301 cv
615.019 491.301 616.781 493.395 616.781 495.977 cv
cp
.227451 .117647 .039216 rgb
f
650.625 495.977 mo
650.625 498.559 648.861 500.652 646.686 500.652 cv
644.51 500.652 642.744 498.559 642.744 495.977 cv
642.744 493.395 644.51 491.301 646.686 491.301 cv
648.861 491.301 650.625 493.395 650.625 495.977 cv
cp
f
652.461 486.629 mo
652.115 486.629 651.77 486.492 651.511 486.221 cv
649.498 484.109 644.701 484.168 641.826 486.34 cv
641.246 486.775 640.424 486.662 639.986 486.084 cv
639.549 485.504 639.664 484.68 640.243 484.242 cv
644.203 481.253 650.48 481.331 653.412 484.41 cv
653.912 484.934 653.893 485.766 653.367 486.266 cv
653.112 486.508 652.787 486.629 652.461 486.629 cv
cp
f
642.377 538.038 mo
642.377 539.006 641.593 539.789 640.625 539.789 cv
618.535 539.789 li
617.568 539.789 616.784 539.006 616.784 538.038 cv
616.784 529.495 li
616.784 528.527 617.568 527.745 618.535 527.745 cv
618.535 527.745 621.672 529.172 629.261 529.172 cv
636.849 529.172 640.625 527.745 640.625 527.745 cv
641.593 527.745 642.377 528.527 642.377 529.495 cv
642.377 538.038 li
cp
.235294 .192157 .247059 rgb
f
629.334 543.332 mo
623.518 543.332 618.93 541.871 617.059 539.424 cv
616.836 539.132 616.891 538.716 617.184 538.492 cv
617.474 538.269 617.891 538.324 618.115 538.618 cv
619.712 540.705 624.01 542.004 629.334 542.004 cv
637.684 542.004 640.279 540.153 640.986 538.599 cv
641.139 538.265 641.531 538.12 641.866 538.271 cv
642.201 538.421 642.348 538.815 642.195 539.15 cv
640.914 541.964 636.707 543.332 629.334 543.332 cv
cp
0 0 0 rgb
f
599.611 489.787 mo
599.611 491.616 599.613 495.564 596.092 493.686 cv
593.912 492.515 592.352 491.144 592.352 488.197 cv
592.85 472.429 li
593.54 467.742 596.81 463.763 599.27 463.763 cv
599.104 465.104 598.278 466.548 598.766 467.83 cv
599.229 469.048 599.613 470.502 599.613 472.041 cv
599.613 472.802 599.611 486.805 599.611 489.787 cv
cp
.709804 .67451 .619608 rgb
f
659.624 489.787 mo
659.624 491.616 659.622 495.564 663.143 493.686 cv
665.32 492.52 666.885 491.144 666.885 488.197 cv
666.386 472.429 li
665.696 467.742 662.426 463.763 659.966 463.763 cv
660.132 465.104 660.958 466.548 660.469 467.83 cv
660.005 469.048 659.622 470.502 659.622 472.041 cv
659.622 472.802 659.624 486.805 659.624 489.787 cv
cp
f
662.326 549.841 mo
659.549 544.594 654.754 541.885 642.944 538.038 cv
631.74 534.116 627.928 533.518 614.887 538.479 cv
603.959 542.052 599.498 544.793 596.852 549.85 cv
662.326 549.841 li
cp
.235294 .192157 .247059 rgb
f
660.947 506.921 mo
660.869 506.838 660.741 506.783 660.629 506.783 cv
660.34 506.783 660.215 506.964 659.752 507.638 cv
658.442 509.545 654.451 515.351 646.762 515.351 cv
645.93 515.351 645.032 514.938 643.79 514.365 cv
641.193 513.168 637.269 511.36 629.582 511.36 cv
623.67 511.36 619.93 512.818 616.925 513.987 cv
614.969 514.749 613.425 515.351 611.823 515.351 cv
604.912 515.351 601.019 509.812 599.555 507.726 cv
599.013 506.956 598.867 506.749 598.563 506.749 cv
598.45 506.749 598.317 506.806 598.238 506.889 cv
598.104 507.028 598.096 507.209 598.103 507.35 cv
598.104 507.378 598.108 507.407 598.115 507.436 cv
603.745 528.492 617.894 531.192 629.589 531.192 cv
640.603 531.192 655.845 528.729 661.078 507.35 cv
661.082 507.273 661.093 507.071 660.947 506.921 cv
cp
.843137 .737255 .65098 rgb
f
629.818 522.269 mo
626.398 522.269 622.549 521.377 620.291 519.147 cv
619.775 518.638 619.771 517.806 620.28 517.29 cv
620.791 516.772 621.621 516.771 622.137 517.279 cv
624.023 519.142 628.218 520.068 632.118 519.478 cv
634.726 519.082 636.709 518.053 637.422 516.718 cv
637.766 516.079 638.561 515.838 639.2 516.18 cv
639.839 516.521 640.081 517.317 639.738 517.958 cv
638.604 520.079 636.036 521.541 632.511 522.074 cv
631.675 522.202 630.764 522.269 629.818 522.269 cv
cp
.6 .509804 .431373 rgb
f
607.129 488.629 mo
607.475 488.629 607.82 488.492 608.079 488.221 cv
610.092 486.109 614.889 486.168 617.764 488.34 cv
618.344 488.775 619.166 488.662 619.604 488.084 cv
620.041 487.504 619.926 486.68 619.347 486.242 cv
615.387 483.253 609.109 483.331 606.178 486.41 cv
605.678 486.934 605.697 487.766 606.223 488.266 cv
606.478 488.508 606.803 488.629 607.129 488.629 cv
cp
.227451 .117647 .039216 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 16.0.0%%For: (Irie) ()%%Title: (avatars_square.eps)%%CreationDate: 26/06/2015 15:34%%Canvassize: 16383%AI9_DataStream%Gb",K$"I2YnbE+lpcGE=)@-dqhVPjI-pEe*lB!h4O@!YXCcN)i-!-6iqW\#Af=n0#Q9mqi].,CtkKTL0B'7m9I5c'1%*n]>h>YTg%_64ri2RQGb9qQgVqq+g#CtuPj7JBAd1lYLPRHOaG\h.E/aS6p2%(rCF9WEJhF)Q#BG1,W9*tJU3S^D+pcl3B`+1HECC\M$DgFr/^%G3^6@?>o=+CT#cJI(aN0qgj*CYM8Bu)[oNrj-JT&!+qh_X'^qY48F$o%H-aR_+BA$FN3@rZV3>'hfs0kVqG;Zi]fB,JIaQRX]Di@%Wt;DT5BO2'7=_lb[;F`Inu8X*li*fu[<=`6.[2kkneE:ars/<r=eeZ`2aVu2<VXSX$T_Cfi5OVk:c3\%I-V-Ri7SmiD'mQA8JtT0%3[:O^K</":gB$S'H6)90Jd(G:]Dt`5o7o+f4,5J&(bkkLpYV2I47-j9^:6iTk"=0p1@Rb2cpWjh"S7[(`<o(CBl`_I(pPhU7G?)#%@e/S!pn=[6jcu)$)kdZbpF+>jX;:giY^dY^D$<W^T3mD_]HEc#Q>egPQ6+r1ciPc*X':[W-j0LK=Ti&Md"Hsq$>&&k`/&sjLq#86%LfIHZ1J<!9+&1/jhMq>2PNWaR?dT5ECRrTuK#trbUYlTBN@8Hc<&60UStrBX<.#j-;J;c^gJBnt)CnMCo7)R_EaOAT@&8;15#9LG%"#TlgEtiSRbiBbc$YFPo&3lV?7I]eG24)YO7F<qb!QT"b6`@$Q;do/XRi5E32]TM_USsiJ=>m+EX]&Epohkop$>:nJ&kXB7f%KXg%H.q?K7TB-eG0AESa:+?i7/VaW?lR0^WN:7hCET1Roi0na<]KNai'Ctr6/QB.as[ls'eFRu1N+[MF[I@T]R_`7Wm"Fma"V=r)9[_;%rnn_D4</LE$mUk<CPY8DF,-qe>`Jg?RXLr;o3*Eg)mnb89J3M^fbpe*#Pa/YnR2c3PtbnFja#GJ$aB)-0;0)eAH=#Iq:q@Y.M'.^%hE\N,3*Y7kDod)OP2Fioi0ma"XYPnbgS:jDV:C>[Zmojil9-'occWk#<^`-2%jYr6,,T)226cO4^0u-Bh,G^OZ1Ott\=P48SA;oR%F-R`<i]_piK7ta81B53mTN>IODt$q#fsS!PU:)`c?(iHcoddneAcK?9QaEN=:qrC*<)`,f$blr`=3i%-CuC''@uYN&a;i3Z[(.-c%&J[RIckUS^#Vs=0f(@=+e%esS/X2g-A:]\Y!@^$R"*cg0**!UBMW>^-,cZ=/(HsVt<"g_QZGTYpP@F16ildLTpQO%+[WUYjWlte7%6F7U;kG,1'kl[<iO:F6P__N!ff0lL[1!%DJ'LWd4"l-YghR^:7-5gtqRi1(5koic*Ad@R(*!=A8:&?^+Hg&%p#(0-PFp2s#.cQ="%'O^6/A+TCm@THGs!sTUF73u9k<m.SK%9;Nsn3J=%=Bo,GV@d.%LS*_e(I_#&#$)]2`JbndSAi0IB#f]]CTK5X-G]@bbj$rF1+TeH%rZXHKg8>;?a-KG'X=[etB@4^*=j814`ju=^cLP_PA!.WiXk#1:e:7Loo<LFr&)6.4T`5*Vg4%u%=ZGW8[L&Q(K9,V1bbXgIem@OL%IF]@$(X]7fo$?i]/L:>Z'EBA*.163)=)jGp([QmUIl8&>[mlkc"i#3'Zn+-,q!fC^U$6i7b.J%'r^Y5GeYI[.3XIFde'?'LY<D<H%8!`P]]JHkH[AdX9k-]7qr*FQMaGY+SX/`H<gWYSEonW8n=,!c@77]>3o8_=WhPf8?cHk=l0-@[;kd6C36h8g:LZ=$TJ$N8o6c^0+%MsI>4&*#3(Ira-+%);4Sa*Bj+J.f!1_nf3JQcEI3h!;AqLMMhis%NbpgV]AKEHX_T]e`c]gg7s\^,e@/Du\B+edX`&mI["\^;7O$%W]USjM.IW&]9mH'6s;CRZE^0..;o;pbDb*U?EI;!kQ<]8-&mS>Qg\p;4<G$E0>%1D2mX"Io[]4!H@OR1W]eeCmiq]<a+=Xcrg2\q%eEK*pn[R'2.8fs;m_acl>AZMcaN`T/+70P5?nk.HYFWo9rTrqF"u#4Dq2J2@lY!+P#5nAo=+cIfm/tUmYOG,2rj[0<+5J"Kc;#JR%Ns?U_[uU_H3j!<]LZ?3)0C2R%d>OXf+!7q/U:8s)3c#mM!r;;:ZdnK8IX!$H4Legt71]!Zpo"&iij\NN*=Pa/f*Qc4s)Y(s3,Oa/%OEUZ&okf&#\sW-M?G#)9[Lcanmrs9,:YL)kC>(O]$)3h`:@mQ).u5t2^]b"'7nY\g*kuIWoK)rG;5$^6:3N.8Ms26%!Y5cF42\DP%X4Gb9TNB304t>&"N)7;sNA_j<$iNSDR\8?"(h("P/;@3.Q&L-?$i/a2;r;HdHJOq*p?AXGiOfBW4>/;6ZSu<ohbIJdHJQt?bteei%j7[HI4m[;$IN+8.-VH+1lg@V/$b:>enV&q-^U2%:YP,R]L@&EYF5cP>"ZYrDZVkW\S9;lCH@c>KV\",j*P?-ZG&S;Y=8*9tTFc4k%Zfl<7pW^rO;BMOhh!u:?DLU.3V$mXHQrRo`s6nVo)eU+t2=g+Cr5Y0"a%mTF9?Xab[_Dd8C)m?;PE!fuP6S3W[6cVt]4fl33LKlb%09`Nlep[fN>Kqeb=81lVgu%=*V]K]*(Dt6hnKAi&pqoLTOe?*fE^un:=M*X)^^mY(T=(@]jgK"!=+Pi"jg*!RK&CH$`GGP(i;H5d%mcj`3qm2C\e`4aV3bF.$pM$WV!DbRa9_N+2B[6e3"K!,;>=lfe"rTPRT[*8(c[OP(olIp&aAer1=*DLKFJAo/C/i%?)EU[l4E)Ha%]^bYa!k\6\\!\g';AI$':4VE7OuAF`ciCtqSgir`;H'*>15Yu*P\J>rfr\qiSnbP;Y)12`0FW1i[*dqSb*+(LbLqVbm:#0Op?ZpS%/<*h!oOE2p%Htb*r0DAEL0]G$1gK`!.mFL9&@cd5S3maZ/cqrQ#cC$-XKpGoKQA;3CE7sVPrCB!ULIJ6H,W&7C$HFdHsH!!#se@f%2S##srb1u)m,AX3_]/a&<Y[+%R(uQe^h3Regtr[K=<M!pGRZNBPuS7"JOYA+!)j/&cifA+CZD6GNSV`.PFO,YZ6g/1MEE)E#FTue%!rMm6&(bSEN@!j*9VSG&<Eh*URg;7m&1L%eK!QX$Ag\!R.l9[u'/6Vi;7a^[T:PIW?F/^4IA$gU*"u.$C$BKS-(mhq`tbqIa$%L]%UEosbZYL:[e1GHf,G=Qmo+4TQd+@&d:d-XcZkXd*3Ui)$49\nm:G?#u!]j,`mC&b2nm1B31K>^)XpiQ`AeYMKAt[DMRN_i6$A`D(%4UW2t'<k[Z@o5#;L'F\e/cq(`.I'pQKU@_B5ZEjP,WI_+@-*X3%_uQUg->d+464p'!hlUqNAc\S`JnH*V?iPJRfH/_70:?:6K*MY%EK7gheW!"#)!B'dC/7f[8Wp0+ceM$3&F838c:#k2D7la2FeEq'Z&oB=&U.B0ft?ce.k/A?5BeFBCtajeU?=d#VVF[SGi-(88')%<%'Q)5KodUoJ4`+NGi/'_#9ONu</akqY<\+W"S&Y%FX"#XuPDujs/2)g%>3;"ODl.3@<Ea_T*"Xe78f'Z[VScsTT(b)FX-@2N&Bb7^%+bRQ9lQqLU+QQ7lJsdom(4sc[*b.+\PZ9.eVh=?#AIciP##Zqn&7eRI4%OPPe-m>&HHp!Q-XP3E)krpHiTi%K'^aJa2Vpri=OGRH%A0@n!g5ILS/s1e?-l11L)-7JZkpd>VX6?*.":Y3)3`]7LQT84*Xk!ad"X7kn+'<5&R%psBi@'>#8YlfG.V`Blg;C6q!-@auYHqD$%lStB_'=REd-F98IQrRr!oSq(,,=\h9Cc[qm1%R'(O68jf?i)X$hQEDc4P@#cqEQOlNH[,]cG-G:NF'k\n>lHX.C',V':e6sl)#BW%-=MOcB.j6D)kEfWNU"C3'91T$-?Yj_X#Dho2S]uccHm>2fom.4eS#%I6+t@(o>&U?B5)F^+N`;oD)U)J2lX]<0;e5DE3mqpg<qCZ%E@=X2)m-qNl=bRh2VJ.,1ce!.b]6dDk=24@n-&Ea@=c`.2]A5SHdXTt6Wru&^Y_6>*4>]t*.dMS-Bc;J5&RnHs'HhKaf:UG/;EOf%_=ISd#)?0m3tFgL^-.%!SM3;H`-sC_B>HnWYg&^]TWYTqa?Z"Z4D:FF+fMMZ[QC].&8XW?&['Bu1)!43Cd>!)c5(&^hZ]%^ciciA%pji="'*2n3#sZD%BH@7$f-F/En1UBi)'\rG4m4IkV;MTD-0cXteQ7XDd9GsZ#&:1?!A!2L.K\8%'iW[<9DVr^7f]TWq>iLNFO.dS%#PL2jkD$fU4Vi#-;47mH1M((fT]Ys7V^[.mP^)nMVS`LeR"SmeN'*2<i+4E;Q3;:h!\6u.<Zo(<%jZcJNA#oIf^TB/!c/DR<X@be%$NUFA"q2!1EE*eP!qZPa)F?Tq.EX$NG&Wg%pdW8(&(mQ&E`(Gc^qpg%>S;JsU95k"YF-`A1KG8K$XP?q_>&]-S4RCb(`*k;QnC4J%5cq>mZHLL((?*pp.r@$*O;gPWHsXj:993BPep0V_1.0u23JOOJV8F'h9mEj-L(9D:]8V7TYN[msH:8GP,j\#&Iq(ck3lWS[h$@^8%%J.6=[YujVhUMrq*gn,[js(JbAV-/o;+=E-BW>QbO$dWaMU%M6op+&OhPq]W(pr;b9GAPb>s\Dm!elD=`P&JuLR>c-@ZF",q:==B%lkUJ7P&0bQ:SGk&j?+'[>?,FZMI<2e]3']\dk%b%i-mr,LR&IpIV2i*S!/<r`hp,)HZHu2XT\"'V0N7ueF>Xk's%DK@_Sk,@LWkg%km5-`AKWUD)p\p6N"H]d^=&=#@)^o]eNKL=:jQq$h3/U3BOSf;SW^"@R:0,EA8al.2ib2eSBQDHS1@9t\C879+VhH[Tb:L6),n=L%6q$;CfEWT)JCdO5Col`tcFbX%Jae?P=`qOpkS+IL*jYknkRpibE)snN>\/P]76kd*rj$V3[:Q"jd57qe>p^+b]n7YBV&6\)8_a\a%FT?"Y?AnGD5q`A(Nm`PnV$B;3-%aPQE,#Za/?/.>RHB1=#4)e2glT#^g*?mbBt^`dJ1H"[64hqR?\B;L&ZSbmfI^lBW@7\06<VaZ%\hGFG"6:/!hBlQ:=k[k*_3[^uUFaL`fa'6hT:**C?fQhk`0M8(<,5gLlL&6c;62HUZf!k2R7cOd[f%b@c5TADGYgt^&;);P6lljt%"?.XCAa,\`lB#VV:3EWR!@%$,CIo<SOHM8lN`nnXM9Q=$Sj*m?Bt4bCf,.(O(L3)(;p@tM*+\b!h,'Ac6(gtPDdm>Q^jV&6aGO2C%q(7^Ac504=ZLCC9k&kVH2i2Z]H.H%Q*B5T+(0)Xk5jfD]Br#CpY#7]%$>4!f'h)lK/@em@3?qE_s33fES63Wac0a+5QgH,;cmMii%0n[g)2K:s/$8lpg7P4$pI``ki"CK)Q@\D:gb9l_9_W4TB;YpS!a$Jd;Qu<lEC.;`><ACNkiA<OePMX/['NsUin@SB`E*_.i'qPfW%l[QT8;_%_1]I<r`b)3-6V_aH-S*B;D@7ZeA'rt0BQ45u3KLFgS`q4#jMa,YmmTNS/F<i.&5cJN!Y%3IS8B+j<2B>%l=TCq9K7H/R%D?t>"0h<+dr>H$i.FJ"Rjf(Go%$L!$SmVs"P0B[q8utq2Q=e?V./!cn*X7p=)/[MQAt:,(LA,85S]n3-em-EC!DZ:tXXL]Q#VMSR%E,#N`3_[Lt6@2AT@B(O;W2+]mnT]o&<`R@kfir'H&)9lbZ[YMTo-Hr%Aua^lVFHVoD@^p6XCm51Pi:])E,RJ*ZT==RX5H*uJ<n`0%#'q3kB^/`!.`g93FH;!l$;Y!ZEiK?P];CH=J;u0b9dVjQ(Wft(&6W:qeqf$RP`h_3;!!:gkmA7<CNs`uD"l*;$\oK@-r532JX@k_%19uOHiJ`E`OEKWl>0,#j%*\!(&4*)?eq1Dp@ba'bfS9_:@h;WS[(1Eg(D5SiT9TdJG^1C%(K-^%WX1ZY2GJ/k@n"G/#dgTC:sO*b%Z5m![nCDZB-A<kXc394NH".!pfFB^A_.2;RA;#IWfcN'c8$UsK/8:Nn@4h[P+)CC'\H_p4%A%35p/D/XTE>3n<<b@lZEiI$B+k3Z%0Z"-KX]?u.cr8g<m,X%-,,54*='*@1%0B3C%>5T*WEr2/EnG*5r;c%LKddZCE)oLs[6]q9]%O4-60oBg(Q9mD\Z+upltS5'a=GFs%elqDV0t:,dj9up,,2\oMCg.d6Q,2^<Ag]3L6kPM]'jD!g=W)uEAj`S("'pa(<oRHt]hE!N3n?HMTnHX5#ZKE?+@1T]/a$4aer)t'%[!8I:MQh%l\ojU'0>4K^Q8oLX;c@q+-RKSP<!&Zl/p-EX72)c&W[:SJKhBSl>$]VM\qn0Ne*('LcA;uM=Kt]hPLL^OoW=9Y#W+Hu%QcO,=;gJ$T;^6CB0pETg7"Yu=j\JlP9fAkZEGVamI?Y1<YK]'J@$p&k88<A_WogGT-EtL,::;s"Q=Y5NcPIY6$inNt!`hT4$M*rH%D;,?VY[LtHH/iX85a4;48;"Dn.PDJ<[BG.g)_CYJ>S"f",NIA#<YXe7@r^n53`,Rpn6EihV6,.l_b(+7QA)X>lF&UI^peBFJ_&Fj%S4&<d5WoH+@_^l0Shm`G3?CZK4,:5>gfSZ0Cf(ljWg,=uVSik%CUe_-^I#GnKoL$GQeEd+pZa`6JncR)le*>4;hcECaE!9jB65GQ%3&S0>92+t=R`f/sjUEcWbf]It)44]Wm)2N/J5]kB!!\[<.qeVc7o#hp*%MLYjlFYO7DmB,iWW@XcZhI-dUtt5f+JF<Z2M3Y=Kt<O%m^sS%&-p!?c4U2SPO10Y!(W1&[Aa@+&OG]j_IQLVit1kPkS#2n1\Hjm+U0u>b[BTRK<#,j7R0-JJ4qGsg#g]<jT\usjp!Tl:B\o#%`U)pFkd`u\N/6iN_kAgf[<.GSgud#G"tKuDPlM>ejrl^Kj%@N"6<NWLBSa#Ld$HGX1FW&1$oP2^s#eU=OtCE')d`_h^A(W7rljaF%pK(Lrok0C!TO@7W^`7!k'P\qe9-OhO7.gTi@[b>&#?q>nBE/m2<cBYFDNO&b$!mloWKsfo-=DJgN]CK&VTOI*kdM2);a[M(-3p<6%BoI!MA;9X%8=#UX62M(nfLEtl_-%XrMA1d9,erN)jn9*.%go4:5*A7:k:g!\'7HLh`p3^"\GR6.39h;NLX)a>EZeA(:2MAr*=;.f%O9>(]oB6bL.u@t@RKDITcA9Yp:aKES&4jc.Ai5[M7`7ZqaOqWa)c)KSF?.IZNESEi(<pq(MO1CfKiPRg.fDdpCffhdW2d%W!s!#Q%Zu^1p_;$*QXJs2o@o\dsK9OdD]B6i8(hb0/=9X9?<#(<[4HKu;#ehp(o;QKC-;`T+39uFg91=]49U0Ha'Ht1JG6C%o%Seblb<Z:<%HRAm'YmAd.HO54!RRt:3$]lrA#hm`>,Crus"V*g0cjMIoIe.m$?%Yj_,n(!<aU(=WOON"cpWX7G'o`s$NgP>3V!AX)6;b?gTIQN:%H0[kk"J.atWQjZ-#G\';%U[Ul4D+q#:(EBTN08/uie]s5hqjo"<:h^%Xbu0%iUHV1^`8sKBgF*V!"9KS%ih>F+=h=`+!cl.TjEmW%f^4SJ2i/m:?SJs;Sq[AfHdAu8kP%B[6(%pZJ7>SqVQ>iP)7V1"9Hh3C)Zl5]"r8mK4kM>:<1EGNPu*'Jppu`DNuSiN#Z*iKY+5L_%@CRkO/oe!#`<K0k:0N;8<"J8sWKJruar(TFo5[0jZS50T"d&tCCtQBAabsSX@7+2DA4:CS^]\Jk2Md+54D&q:GKlB])*A:lY1Zu&%)']f*Jn01<$U7oZCBfs\):q;#@-YNYLL8?a)kl2),6Vi)@*-8j\hu?u6P:`sPquo?I5kZ>iD^.DfdCJ85XeG1irKfi7fb*[g*MA'%LLo*[@j":j4E9T?*f'ia4WmdhfrF/_&I)<3^a.A/a;gh'[djKA8I/.;R8JSLBOq@4PI<Sa6>HUBP)"h2hc(8VlkeF;:dr0n^23Fr%`$R6MP-_@ZWJH(\LslWA\4[VsQm-ONK:F4+-L4?Hd#Yr3TlNr^Sr07>^q;a;YW/:a$V]Q.L>n:Hj<5ueD[9$aGS2tC:Lr.qKT*n+%q+UlD5g9\772fMJ?kl(T<ecBr_4HXf5Z.3&#)>hCT+8dj!7[HWNUrTi=9:`Q9*%!TCJNW:;_B<)Q;@:'h(`926/X.gP_FN/k@L?^%Qrjt=J0GBacL[LWE%:eR@hjlB<&6$_9L,]$T[i*D#6]E#5i27r1U3:5qbT/?Y&euq9#ng<e6uQZ)Y5db4LpdM(o_pj$q4C;#`U:>%E+`)mO9FdB@+p]I+Wu6+-^SP>_-!q\><qM?1a_Mj8m0kg9GYc7$X(B&bE6hM)9CJ?SoQ[hR*C(a0e_Q!%2"+-MD-(m0C1Js%K[hW%56TJ2\/^-b)$VC(RWjC@62IFaPsb7gIc$6*VSV[3G6@tU6;tu]RV5@'PgW/`6!8(5[3#Dm6:4"pUN3o3F?iTu"6;0r`m%sWM34eP%"6J_Q63*l(!BN<NpeEY#W\F\_aW_/S8I-#i,G=XgHQ/.s"g(Bd+@HCS:Y58r'I9!+<h\L8I2s%!mCFcmI!Gac7=*R+JnT\9>6<gO%<E<:CYn3!n$=l9J&uq2jO(("B/=SFle[!lMDH8Lh&rO/"#S\r6\<q!OM\Y?%2C&?'C>&0,Lddit9"a7fU@b&N*s4M:bHn<@5V"Io%S3%nH#/Tt`#8W5joR*Zq5Z+q\Nb3u1k"*Ph`=Zl6fFfssPkLAn\_S[G;o_3IpQ=Xc_Teq\Ouuq3<"N.XYf$cb#Za70(@ijSFV*Br%/4hGT5`2kL&Rf>>?6"]=S=##ah(f;YTQ2>X1b\8_i)&cZ7kl.m=X6#g'>Y![%5pd#\Q.]3`+,1F+S"6.\,o:5pm;)6S4^XCfgM'W%7M[]@#BUB$FcbeP"I7HF/>ofcd3+!O_\IY,Y)JlX3lm[6TQk1:c=NCn],V<\)LWc:b=SP1K1D5'Hbhi=6M6k9Q=pf%X'D&rbtI)\%.e?s,3LYmn+KAnC-8![]9Z9tp:,9)GI@JG:S-i&"N\gih,e_1X.Q1H<Do>h)@6#Ap]m$cq8l3g<fRu54=Tcie!(Z-mAI[>:k?VG>%,Dg8og#E2n%Dt1Ob^9Gq/go>_6&a,7:p\4'W(\+[Wi.QV+pJg_:rCIB1@X3=djS@>a*If;>)X,ZS`OuXCNc6ANU>?F5;WEIkZK1J%\@gs<eE-%NdsN%SR`\Q^S:K26`*a1"l%'S\GXf7ti#mTiTM6;WPE&L;/-;(L@&s]b6"ESWL3=F7iQs.G/>*#5^rdBc:)+p+TC@3U%3s8MdMbm?b1iP2k=]/I&k-cb%J\\7l@(;O#>5#H4.*6q@TkpdZ&:^[R3PZPX!CfR@(P#Q+Kh6&H^i9+//!C5BZ;,R'W?nLrY)Et_%CM\8ZZa4<f?a4_W`O%pi3J7;j\hXo=o-@rS-ok/XD_/m]J?@upE1/%+&9-VC>.1"Q?ZM[PS[("*%RRoC%!%fUEX'.=).OnJPR;2u%[I!JdSF9NO36>+W#[t_7i@[$Z.pEYV4I*M!q_]a)Q:R8k.5\3GmK$80_MAu0/B-eNVhl+""_,n=ST=jIG#k8a0fpmiP!a$.)/sG4%4^$T@=`$/2Bsk]U_+CWa3b8]%&X1OMI#9UPn?N]8!CQN&1bKl(@j$s'\N-p5!7r%/Tp7G]V'WJO6<80Kad8AQ>VD1rK^]BO]7]:c%#'jL@P9E_&^)S!K,o1;BQG]Dl6o.?$/eBa/J6pk3EoA$S4,G4aMO[jV6kVQrh>Jf)6JSlH.`hl)GfqkF16tWEc`*[YErZI<%5BTV%'3!:9#%FHOigAX>5D#R@][*PLR<lj'=B-(l_GT;$!Gd8QJs^3hXNUU],XMQ90:$PIUdTd6&j`-^k&F"iLlYh$VHQ*0.jD-j'4(_A%B*\Ou'SFC$-?';dq]2TMZ&J9Rf"s]G$@rZIkWPb?fG@*A$eZ)u(<&bB+>A^><3'OJA@fco0sQle5pgPb7Ar9XSu,Ubnj#TB>(BAl%n"@f@#fL"@e1";;=b7S2]NE=-dMamfa/CB]$OKddn&=ESCtUde?5l%kOM`*c2*<Wi[lG!MP]VcC9*-5H&o\]BQN1ZskGo*#"O\S_%^]b>9P1Kt=[=mpWTR<s(9.2VQI`ZP]`hHuT8r6kp-".4XP@>Atd\ILJY$uF9A49]=eMmUtOSt,h$_gd9_"bqH:5^?qj<tCF\J<ku%amn):cn4NDKURG>@XV:s(>L$EP815(>pK6L?<R`ej_Q?g)+anE,DuKJP^es#N0+P\K.7"?+b3a[JQ4G(RGgD2e@(2Z7OMCA%'F+C%-'Ua_m7?erWiPS>ePjOlLar3I;U#<Z9&)D*+e<fm!as+=E_IUK`IXq<Of`q3ic7ShM?ADk>Ri4Kc)`L.OMQ2f>:,l7Pi)W6@RO?Z%Q,&#F0t^@%n\MMlU27Bq'i'jYLLGa,o2Vb%E2BWDc940:%2>`m<0[_AN:%#Ra!ia'UDZIbX]ALqH"3CNkf@5._hV4.+dO>;gfpq1%'uu==)oNu;\5AZH@!KA]TFm4#<ADdniXT@j54-rI.<mRZ$Wa:8V7%f48pMR^*h6B&"`Ks;UdPha$u?<SkHc)J+0$Tkbu1th>k)$U%!ZPcFi%gP6n<a?dpsJ/O+])pj@?X5#@gqJ#&Mf)6>LA8RWOU@cHKBc-i$_$2Z'OPgPHjjn>jS%d9#`.a@`_a_Ag:-HXd2;X1:+!D%eth@a@_**aE665<PT1]'.__.".I/9mL$W,,"fj-;!K1VRfoeKK+V(5NM8A/0O`W!QX8n>)8a'4:*4Knt-Vfete97NiEN4gD)2HV*%&kPVEQ4lSF[))>,qK06qL/4.Gj^cAJ8bY1:^9PZP2fS1`NfoY;JgnZ[&c@)$?lTmn7T3&IlC>s%.4g`dGg=Hb))/,(fQ`5dl2]R3%#tr^Z7gr\]@ju>cMJ&\:a#N!lMkJ=&]`,b,8ZCa5*Sm):>TEkm<e,RYKFj7?M(Zj*0Y8Vs,>/_XL+Ce0TbQ"ogfc]aNCaG-7MWM$%"(8*:^tT<-Gs<]+Z]Di%9q@;N3D-iphul'+e1amfF)5-&_mh03J6$F5YSOuc3[KX)\hJTp9A-6r>@cl<>]:u@(YNhlPr2!u)-@]B%R+PgD:b&5ge>9EJF3its%`&MRlPjnAlB<p:PCPAYg46G#$.);QO`b4M?)'<i<*/-dm\S\k)jSj(=BA\\1'aB`SImCf7*u_a!`YEb%A!4\k9R[`Y;Yk8Zpq8=g.k*l2;$@>N/S0<m]+::*ntf+]NP6B_5WY:9Ks9't.k4I@TWR\:&.o`dhZJM"=udHl,R@;g&ZKGofq-e8%P?U]FU8V-mO2Bnf>cIj50:C_-lMI[-I8P>`;PpH,G,uMIr1koGb+Q.CJf?5n&B9h<"OkPYg05dJ88qEXpHYDQ^!BL]bptj9-C`:[%EX@<Hn0M!G1I4p8g/=/_kDE`gRq0@%\o2MO=Q!X:.5IR8f_3>8)'.]rK&p8cVA,@e!ooC5'#h=OQ'6n-U1D)'$<#fAFU-o58]=[\%cBVpq@>#i0f-cEh)Jr4=fu-J4HtH+`@Tc,j'.90HKU;!CW!"JLP#0SG>:!-#Db.(MG7UN.dV:!MS>n;Ea\/a8R;Ipd#94F,MTMkH%_*%tp&2GdJgC,p%`J2smA5l!a>^FDT$=L05\M;K5-:[6b.]!l9=lM31/nWXG.P@L^0]8Hp@)hl90Nl7ZilGkX3!j7jqao?6aei$0%6E#i_?.n5'e#=L%\ZWL7Z#9T3"Qu/*@JFZ6W[l@O*PsS9jLeq>M1i\jZ3:*N&Q[`/))Rl(>]Gc;b?kQh,AsIa&,^aE?&5s8+A@,2%_F[VXo![(HOA9rk#ScaWe3P6VHl-,r_@Wf#A@>B2-j:fQ#,?cp"KG@h!2!(;iQ_5!($c40/d6uW'F0G1*?"EXja@f<L]K.JV4_Z?%bA@8\iklD9"d)j&es7Mi1]X:F$!Z.nW-[V61h[bZN`u"Ao")o5=5HM&ff;pR0%i;./d@X#;JjQe.WtV7io`u"PUUh@&D6j=SL*Nf%01Vju&VlN:#0&\oN^GO,@;7+#U8g#-1ldo`7<g2se=(F=<Do65,m2%86H+NeEX!e5:J%)s!R!BaS37!Jll.p=O/=VSK4[s.h,QJ7%d8[Nfb6MA5Fn<R>"I,0O']n#d,JQ9r)FaV-S-7QW-Ct$KW.qE_SImPI;cPjJK8<U>OFsmsi0)_bC`kk=@pg_YAUS*%MW028:7ML$%$?F+DS27,?js?*gc-p;U`AQ'6!MaKWY5A(j>?kl0pXKNMjr[SF;gY-gBIG+E"Z!-5M?kM2!,o'L[0MLQD<,R\`@@m-`XE&]nhgFu%4/8=L@O/8?8P?XIA7V0M*AiB<PHN[VAUqZ7JPs#c`$YSCH#+D^/9n))P[tdoRg_`T(_2EI:ent0ZQ.j--t(tnTpFSKE#m;f9HFq,%mY9QBbT/-0LSct#hN=i,oRR^V^j06926+.4Pp9P8*OGF8I#(p,Atp$Ob61/bhKV:=F>7pi;V";`aZlq-aAENpjW0VT0J3YW>g[YJ%Xq[*W-V7D"+92F0&Nb(N"Q`2i+&3d.@iBNV0Jeu<,(W^.?<R;C70u_t\.8)DB0!*82WFIhraNF9FiinP9is@C]kCF3[H*BO<OT"Y%3FQr:KIZ):R"-Ng79*EDQpqYneR).]?@DF#QI?ml94"p$@R1(H-01Ga83k5'e%cp2-BN!(@A6_Y@C@c4(8&*NhpD'OMRB1,_^C=A%UC]nF(lK-eSE^sKYW!bqN#E=6-.5cWU_mdfblrBtV$E\68>p!9kg[+&5Z@1k^rjVhTcB\oWY+3G>bOgK;Nlh?^&j<lN)%E]+@\5A%C9k4eN%-8>L1EG)V](?MRWD@-\%(F_Vp,`;<smuuDBa^U_ete2&Ynk`R$0=D9VYckJrU,f8trSX5:"3REikQT8#""hgELa]DM-8d%'SRWeZib:;<.\$P\+hDbRg`iagSSkcpZlQ1_e%pI(asI@d[b!7ULI\(mk@_g9*?C+:DAQFN1N]cBt:C`Z^`e5P'i*LfUas_mc:jA%XX339JBRHo#[`aiA)O.abWa-`b!<KGeBhb?Kn'goJiB^r1H8FCf&O\spu8(XJM%EY?mT9m:)gI<'YGCYJMYY0*%8I"%tM*UD/e0X%?o;D1j185CZ^iL.0R1'n5cl]!ku(C:b4S8fb\pdd25_2H'rkFS<3m(>E7?1]W9%m+PZaA=]FsO'Sni=RTM'E@ZAMO++ihN?acYpN%l\d?G(V%(4WYA(ASPd&A1Nn1F%II!XMmm4F-:P^XA1q"V*&&<MDRcWM$i.?mmElqGKNU]@WLP95oSO<o/04kZ.up-/TW3jKaqOo^%ghC7MkA&[H;Srp.;[PL`<88ef=G5"5MsO$3[8]nHE@7EQRW5Hm:kFpb\2ldhnGO:3N4(49:%CbY*=4EI)$0jc)oPQ2#QQlF7DP(Q%lHk"r&'!"S3RID=dgfE#'+dBW@d261$j!8!/tOC'(4`:G&<(i_#3(u+BPNIWm-l^&goA85@%7-UVm0g+/U.07@6K4;(!k+0+pQh%%'r=W"N3g02O>Z96<tYo1WWDBKj>0F_4?$#@$7.K1e*W/`!/./d.Kdj]#N*91j-)ZA6^U0b:NR/EjI4]*i=bQ730Z"PZc0^hY$:TN%>bW/XW!Dh^:843r_'dP)cEQ$-:n4BcLulVo?1KW<3ob8ZL8U8KZDBu4F8@BK;j<cjPQZ9iGd]*Gm0[_^gK$q<rAiE"Y$j$2#n5cr%nVn9%)$$\B%>&,];n>Z592IAsYuXjE)&(*XOU<;Lj`FiO)h&LYa[!APaT7fiOuA+B*ko0P#Zm?;8MOr\aOti]b(6Crd;k2ljsR&%%8tgn4@WKahPAeAIJHKa8R;C$mU>pfJP!!+kKg8ot@md).!i8kh@Sr%$,gtGcBnO,0$[K<*LBt]3X^o^jf%4G"=i"ZE0L\rf^?4%q%I1qc,'TIbk^cZ22i?X\:#!5a=.Q.%OGY>'$)IRZ;RG!n=\J"@`gL@R\qFeX/3(-r5,jB)%e:WncKkH?25jBlY3//>mWKBu-$0;;S%_[B7AY*WF_Upi+gY')-T=dB1I8eMak-m/Y7.9Hiep>'A#PtG5@PsPrcoc]KbA1O+R%.pCWKoU]ia<M(gnjH['!@H=k37#)IZjUun%nE0Z&E"R;S_3eCRZ;mbA07.4Q)G8BuI&fpH8BJ"^&[]l)=EISLEp6i>M(6m*Su@c,]1+d3fb.hK;`Mr_L0?)^Mo84E=f`8u4_r*V%2g"k958JgPPXHB@!E#a6ft!=lJA=4$1l:)@-"u=1P6bI)Ct4_%@D/:*asoo05f"s"4Gh%DEiLMsc_'>dTJ*tnY8k7g?0Ws0*/Y#$%`DH,9K'kGIZ]tLqVbFQL5pF?0JI#4Po#,=s$J&"7N(pi-^r!S@,j?b_!-.MYF'/Z?.jGESPsB17<@Z\KOqV1o<CEKO;G.jCW,5)<%Cm'+;R6YN:_/X=^NTJLnH6lH/:g"f*k(s_O:q"-6gP`QD/Cs+!9'S[)"=<p4)?M2ge?_SUI0mB-3lid/Y`l^pa.ZrF$?(_U"rl2c%0hC\ME1n@j0GUB8=,>kV`sAUN(ZN,Ziio4\k,NI]EWd[RdBD,dgPS8qMAEM3>Z]u8e6-#d0@N?MYN/5CR96%].+0P)DI3+TQE(-s%=e`E'WoWX/W&Nm@HP<n=fsQ'.^f2i+LL]iSc=+geQ%UCU)+D#45sKM,jEP=n/^BKSl?Ko,?9/Y*j;0<^EA2uD":s7Zf$V;Z@=el9%=@Q,EIhZr^<n'amZ4X9Al5`$9eO2kL0hP5mXF1:cDnK5FZAIF[/7f!=$Ve0Bg,BL^XD(p!K!f=i%!GBfR-4#QCWcB[!i.$gG]hD+%Tj2Ml\7239](2/+jj\nd,%9a^!ZA<WM#^mt8?8fE_:')o7]M\)KFrq9)?Xgfokr_M+4:83DMZj)mYns5VB]\2_Fp`<K\1*hj(G#8%Bb2V"\%igR+Abh06R-&OWtH9W7H"?"qD&njK#j=%okr-NBeid!\km>C$9gs(og#UYCfUB=&.smCW06bANGURM9U:iJ$?bIAY7,6'%hE\nMPKN!p/.HcjJ1W&kZ)C]Z,T.1nSj+u'7!(TTj]\PX:1I)I'*>aSR:Z[l6<s(eRR"V56D^2g.4GCP^fecmVQ;'Hb-@Bgf0gh8%'[tX=:kR,c']3k32M4uBT57EeF^=9f,1jdPp]Qc8eY@hm>Z(m/:]cEG@;ee-^BqkMXR?Jt+C!4;qK*PhV^@*L%Nh'7"D'"EZ3DS/%.mVea`g<Gur:GNH-$`(5PQ,:t<4RUS;K_2%LLTlmq.Q&``>@Ql"3.Gn4<3&)&3G#GLXi)):DI_'1QE:&QR"NB,@m^@=tKQj+Wc0/%e9Fs0bE*\nnpkV1Ui,FO5c[8hhT6ZSiF>qe0C&LPC'P24dU="AO^;-N3B/b%gb0U>3P)3946o4JK99OWWKMQ/^gbjCVfhcT1DuHG%-m;Vth^/o2#0^JhRg:Z"[PIN"@ffr-\;<M!a!ljr`3>a5W1kiI=B/*4jBdTAH<(L\I(:AQM@etk_FgM8.&K%q>*R0P.22rc7;Ne_%"_\8kU?=!/<2i@=Ec+bkjC#okJ>+Zacfm+f^)^J@MmWU+]_G<@6q@BL]$1@qUVUk6dtJ6;lK;#USM8^Gltjh8'4-UB&DI5'JP]6o%PDYmYGe9ht9i\`D_UeJ:E'.jC#BE2(.J[)+3;nNHOc'QT-ZOiZZR@'N;WfSem-*;"aVRM7pXI`Z5h-[/?g<)QH6CfeTg@4&VE?;8%$*>*El;/^PT'fls=@j7FYA`h!qpq"tDQORW@jEbK2t5,$^FPq^V6'A=a+%22GTu(/&n:YHH3DBiPMr_"!76un1_o;W:m^7-bfUZ#%+P>aJ,dt?-9:eY%Il1i2$J7WEO5DU'Y]=aAlj+LLCI9?:=2%p+hMmkdk5'&EU4pYjP^j'$19r0GDECL8QbMun;7lUW@97jJkf[P)%&o%)_Q3%&_A.U6W2_QZXQh3UO:=^"ZC@Q/O:LU7*NN4AK>qd*.4t0l:l^3[P5UY0A8?DYmd9Wh;3O1Sd<_ST*0B_.V3O`(;b8jQ)%.Ie1$ffTQtQl+Po*WSm14HQ!)Jf6IM$5E<IHlrtHROS"0cLsNs[@ncpMeN7SCH^'%ZKSP'5Um@4/Ebt,BAA-`#a/CrH)YbMa=rcD%!]\ttmlEo:11)ktDbJJX9(P)EhkVpa91r#U\Og."_?YJn)1eZLReRHUK*8'7,!fR"Ba8#t8$j+N.<jY';"!T+X66L'J#t<aO0]k-%k?+'h?)$..F"F"qpA2;#6cg4%X33PUQh)[uI3EQ$g9^];%02\]:</GW_/f*`,9KtF8j=jV.4J4g$<X0O0>l3ajk\8aN80CDeO5.%%A5nr5M<1TM`OZa#_1jG9)O_"MCn2,0"MC7<>Ic%uV?cd*J$J(lC0.S7P?SPShe5Zu,g#tX^8Xor+Aq4Wm)g&p8Q'jgT#Qr*HoSo5%WRt2I2'^1bYElVP0S4=c.lo$"aC_KV06cM6F0e:.l['c_Zg/akhLiZn<mb1P.b.:7m?FHQ>m@<,W6+^cG]BVI(Yu%R$)Mj1:!Ht*%=u\VhR+nh#qXVr=_U;elj;=-l*2uo9e?3R#$aBW5LFYe0[R@#EVn*OA.m$dg,a]TT&W5[BHPC_1:3%Tj)dI8oa)Wpq%//dmK<msV%SPm#3Npiu4O]"k'\KL)M8kk(/G&8ZELMG+4%pR3Oi*$]&qnhSqg60T)NZc+=URG)PLkd'nq^']'Mc7[j=.Dg4@C[(B526B.rdKEn%0.h.^$R^S:E[MlYlUZ3*\7M\NHK(``S*q,UM)-HH.A$g)o`pO;#0S5J&dh%M6Y<:2,=QJrNqF^7Y.e1`V?a_%_l"bkYc%Xm_oF0@%)U%;F':rpD1lNTS!hLS[G>^bfXVB>r%]S6XDR>)")KctkSRLO06^`P,j&r?YB2QO2Ga(T]DrgbP^p+'A>u9P$33R*!;3rfm<4OI\%^GnTh7OZe#;a[L%LnCCmA$b9i7SC"B/LFr;KnR4e9>EU)>SU2]PA4N6\XCq2o>Yps-eNQY+dS.[0K:NWgeOl1bNnVDe7Vmi,^;=t%"Kt9GFN^]kd..o1r$?"<-%SoG+7m`qRUm/%%U`^(Q-:?X[*Q*)f9,B>eH=TE)!!aY\s-_/.biSlE&kUj>YUu9n_=0l<=mOIJPi(u%N-FGD=+:2n7L9F^RA=)G/f%*QU2p&0K&!%4kbbH[q*^U]WQL3nOfE@q(bFj;OijO,-ufC&?S=-1U+W^5[rEGiWNiSCm^#',"o*Bg%[;LHGHM6aE0Dt,6h>Yg?2t%?gds9X6:OmA4h=%gK3_(cT[PG@h50Rp!2LOQa(]49HC/t&TZet<q?fiFpA^E(^<OEmV^AjmA*<GGh%NQmQ$"W.3TQ(3+U/)5Util>\A'>-O9L2.(J-E0S\"kEhQ\]lK@&-]@Bg9dOL/3BfA"k=T\SLZOFZ_W<MPC[fj\-5?S2[S)"B&ChA%So&,DprbdaT3?1Q9cfF64bTEC="92ap)m3pd^OPo+&H$VS)F7)K02GFMNFep[,rQEI6\=M_$b[!Klt6rRGbp\Y95r)AN%jtaA6$T%n8r&d8Yuu[U1gN'MjN`(#.TGJ<inm,^Y/>)3cY`b`0ZtQn(5bRiLOpFG[g1c!ej-Y;aB^8iT*>K%BkspiEPN2&<IqeO9jblM<kqZ%VU*de;QYK`4_TF?Del?dj-lEh_hhZB#&=8f-]&&WQmc&dX0N2f,Zm%8DR^!&?*&Tg0MQk)fZgiD;ZpJENLRc7euMBB%:HO@$*a'/%6+%c]m-"u+'gsH-N])9Q]sG2RD/n%GDY8i[QeWZR5Rrq0(-Y:N%=p*Y5c;YL)l$m\*$FLlbGo2XRt8*\n@,1i61SCmIHHpL#SKc>%EX^TJ=VOO:$b174p[fP+_LfTPa:-knC&J0kA2n[82tsXpIE7]8?3*V"2$2%*BBOq3-Wpt$GD!]04mP[RMN.XJp=gN"1*]&,;eX6f%Rf#^smg'DB&dL2r6%9OBY[j.a!#9bd#gAUL9Jp'U=?5Y23b^aSlQM`/H*=LWLfk%?M^C+YEI+T=(C<(MgNgCMrO;#7iR0\M3MZdj%*^886+XPM"E96iTOC1ZL@\Usf!F<(ZBLi]8(,12o]K%A?#"V'p%VeagQemed>7(jjcbCCj*tQ!^EOYsgF-FCQ5VsR!I!#cl<(2iX%^:A`sgWO+cDO6utO#Lr@Has++i2?`BpUZ.?m\&GYrcZ\A40>!eT(MmTd:VgtYl!Erg_kOmqInp_p2JZU_Dlqnm2ZWtI<_o![ib7_%oeZBppp\]^4M*UunPeUi]JDP5+6C6*%"A/ZFo*:[n%YB?iTGCQN8?P6+ai,7N^r9jK)#PJ\N^bK+2.!VD*N9Zh)g&8I]aHHWdD*t%0S&c?a&(Sof_=8=GQ##$m.kq^f')q5QdBeR/^a<"\jtd^Mu1h6X#Yo9SaO[&j2HW^]T8BBm&ET7\9<,U"MAE/3qnB"J"Ll[LJ)HY%.J.huW-[EQqI_1:%`dt/4%fkB-LNr;8q1e6mZ%h(gHkLg7YpcFgKS8\'?KWi9]NJ<MhU1/G"-,X-2*ke?-4S@HC;Z4$cbU&//j@A%rnZC1(Nakp\^Gc7BKUE=0:;'*A>O2D4Ftkd=odfX1XX%sCj=UC5AZt+l5hQ4OCcFO$,\a3@s-Z6Vk%7C4;][l6&g/(HXV,;E]P%[%a3/:Q5GA8D%P2Gnp0QplF_C(q?(SrEf+-8%p3c6]XW=9'c='lr-FmUbdUFr>p6XA0dXO97j'b#j7IR9CGI7(2efN;o@p44QCQE2X%WS$J5h!#ilC**n6\]SP>S,2D2(JFFL<S\%0%GZkQ`c.L)M\j(5oAnO=1A473A!#d:lKH3)d:dp7fD2u3L7TsV75V8&9i^(hT8c=r%G(8\&:0U0)Fn'2d/KpIA/jh<'NfQ]$nHJN4Km*/&bHQY75Iq9Z^6E;:?5d+tp3hV<FG2X@kd5F+kj5r'?Qn!MbP^slHbVP`@rsUk%DBF$3%bnZCJhN>?msI)X0^U"!n8Q_n$pXaQebQpl;d]R5eBeKg&n:0b8!#[Y=g(!$qs3L>hruf!?"Vu=pZ#G'=M'4bB\\'#@F]:$%,qFID<V\j\ek(&.FFHZljQthYe,0.rmeqVfd0b+\kk<'o9=_lg9YdcO^`.6b"nC:j=`lZMARkS[Y/e]=<r^@jr)MG"MadL.oB_RY%j9*]>cY-J:p%-u,B%QEBRWbmZ&m[Gsg%?X:k3L2%R(_q_EP$S#R=']Ff^bbdA[U,I3K\1i]Als?Sad>&ptsP3=3%XpK37`fLH6N#%L+bVBG?;io=^!XhX4dO53j?mWq7VC<RV1RI%L0V;@Ai^h`F7ZSc'2?XgL4ZGJ;_%RU*2dueql.`5#Gp3`,"J*T50Q8F4BTbQT0<g%I6PQkn^P^]'",-Wl@%;KlCKT$gBI':9[CQEo[TTnGe$rNXcDLm%;I`N@V@(+ck6L#CGE136g$/Lije^)bG!1]S7QqfA`sc.Zb55,%Ucj(ddNbe=,j#iB-XN<X\?73n`-UDZ9;q&Sf+?,]Wg+=*Ms#S$mCRKUpIZin([!)E>bs$b`&:`R;u\@"J/34PapOg/`TJPZYM/r(%Vg$MPFUjaYok30,kJMVOpakNdLGetK4!3$_7N3p^D'EO<Q_Yr$\td_\qlk.il&Qpp:Tok[W*8afCZ_O`ppk@GnCJ<8Xl-m>_6u=@%Yki*S$/rP&MWG1PLj.:mU_Y=L>R?mC(M_qN?8S<TPZ0:O`sl(!pF`]Q<d+3iT)Y)3]h=S,rkWe9XNE.V?7mVj\D-=$Q0$Q.K[m0L%1GTjl;>=nI&tr,gHhVgQMn,r2954,Nm.d;09qbo\9XMR%^Y4HuB.%=.SB3YoeA-M,_<T"PG-o1V.>7?=HU$ki>I&K6NfL^2ma''-%7_r=q+auNnS1Ghk&8MH14iW+#9ZOsqFM6N-V>]0.NKDDbEI53crC)O/:`@mQZkq=X*4C3L%gPbg[Polnadd;D]-kdXd6B#es,(,!%Fa+qT+Q>EkiY&i:"RE/<+Pugf?cVV3/TIE/3YC?a'-Rjh5pF6&_J3Wcm5bhgKn@<G1(iO8)C.X#ZOKqo&`QCjTQMHs3YCAB$u<*q%[n_U$f81((qBeNK?@tY%AVBZt.[G3$`(J[h=#1HJn/<Q=/@,FZG5&-Q+o[BfLm:/X\2nmTb:qo')sEGcm4)H#[7h@cHJ[QY]YD_'%#HkkLs)B'hUrKV;NG7,XT'tVi'$oHI=Qo$`S83/-l#jQDA;TOD[Cf1C/YF^3:jt!hecKS$"OpmM>RRM1.04R8QiUt)l70uT%P6T3%&5R*=Be>q=Lo7ZVZkcH<+J.08donk.Lo9Aia7HccL4"->eG?63lQ*:t%LN0!4(Rl[f/r&CFba5rYJ*-ern?U"m^7Okr\f\AhK>N2%eT-S3$u)l:/<a`!5eTdAXP5u)*-_;'I(=[X3UO2oHcm,_2c/C[p.\39d8`iMr9pYNs*#jjcMrAA5A4@$[*iCGA8prW!pdHehU)TE%$&8,l,%X$+H*N0/K%&:0MlcBVGdENk:>pqcKd4-opKO_Vh=>$CYH+gRLA&%MqUe\=Z*KD*g65m?D1*g>MI,FtjB#l=07V]^Z3A7k%D=LU@;!3#g^HJU.UqQ_-5,\C_?+u"cnG9e2;If7ukM:KcMn=GpJP!36p+lQ<`Eb\]4ep\QZ^P0,6<q7=Pj9/)9'dI$JbE\FlH8Cr%2_lsc<gU4Lh=7P0c?KYBidXb%?(J4sRu)rDe^[P<=J&]u:Fp,`2fW;PKl9%WT3-t)]P]*_\?^'cWN/,(Xn)=QEd^Qj5,DMV;GN3\%I7j=mqcDD3Pk'>"(B.==<S"(4F3Wn@.HR&mIXOi!9&"Z3`9+"FI!dj;ljikpr:cQ1gbUUb@)/<9d(sahUeW&Io>1@Ul1G7q/0%Nj%qsr8s5MnSV9*uIGC)[,CO,M]PlKa\8IA4CLI^7ASn2MB+95^%em$6\4lWD8MrPD,OqsM*:FuoR`H(T6Ij=tgb%ds8M*V;DQ42]@k%S\_Pd5;uuaN\dft9Q)b>V:=]ifX)R5VY.tf#O>dHgQqp+@+/[k14Jc(;5]c\==uqe5^iA^.P;c7q`io#Zgi=u6>Q"-6+jQQa'KR1%qL-_RQ^&\u7je4!C[*Fgf%F<AIX_4YZu_TdJDmn,F2-GC]Xh_#r%d;@m^rA^BsqlF#uAj\E=&P=993laYj:Wple'0f`\'5K6*Ue-%A7,[Q*P5Fo0%R:cFmNQX]3**+hRWhla"B"!P$,gX(<%mY6S6%$"2SalH9#@TisNe4Y#UkKRaa(+adT;Ict-LGJ,,R\M$iQk8cE:C%I8rr2Qg":GQK7eOj2^QT\IlY.UrAYFeQQ5fG"k/PYV*n%*F6+f?=nW!bhMR^Wp?s+E4*oZq(aJ$d$D*mf"12tlE[I3+M>@#=C3M`%<!P%Tnb&/&MiYJ'pI^j+=7)d!05pLk(fs5OXNR&67WC)qctH]%r9dTqnV>SRc4blUm"A_!JWU/Wa.posk'P`@>&I9?r!m(C3>R)o%&TOt":@0?Ej%%0iru8E@n(9lU^OC*1KWiNZr)(l'/$K.l5A9Eh?&g"KL%!RI<:7cChCi:a>_\NJ<8X%H3%r2-<45ucpKtL%bN-c"%g:JGZ=^hfC3_O%V'teZ7?l]RK*J7Jl+o?C-i8(M)>XnirBnn@H*:$/23YJZW"KWgKf4#';OaqR"i*AhS`pI?c8$:ltBXP8Cc@m)%%;<Qf?oC'"\s)89C@g`1jHa\j]')Q;hNt04tT9h"4DrSM&Z1J8+j6l^3]Jr7,5m"Ekh;0nSRQu>b@ldj7EEd^`r:"R#.BVJ)YAD/K%GhC;gZ1leA]0mY?]sVMn6Mp&hm-Ak>b&t3iA/Qu0^5SfqkV=gO=Pq(P[2>6S(WS<)kOEM1ZGa1AX@jDGiX]:Q#>;"h_'O2PI1sc6%6b,NBU&6&GPG`'2(MCF_bH>1(m)n4LY`+:MWnt_po(<:Ski"Xa\F.b^>#IOKY@R84Gh,MuK</`5d1STLeNBSk)WVJ^1PY4c7oX>*%f.M`j39OZi6,1>DqD`8\Wuj\N0Cggr\4H&AA%H7ndo&8:m5(kmVR=aWC-L*Uj([m:XaR(ScZHjJVT&5Q=3P5Z4J9+*[!%k?Er*u5%Bj*SmCStn61p*=G96-K8*=Rs7%bjW1rlTO\S*K;89M>&,<P9`'%D8QL`c.K^VX%3dIc[b0?`ph[<TW^ZDfo?*^IkQ3Y..i@jnKps%\A&_iHAb\oP/P^sIq-:+:,lPE"0sGlEL.WaasuN5??Yi%A%j&"kd:q.he<[9E8!MBNdpqNRBZL#r7b+VH7-'mgEQB"?rq#s>XpsO%].Wt_fkBN2Rt"F\h]EWZI)k7aiN8!LDcm][JXGf(8?0Xol22R1h*E-t0Y;ue48m%.O8UUYD%@-2b@nWsjEEeT?X><_]%uCbmVZ>V%fG\7g`dd0h>5%Q:/$Bbm[M-&.T5&I+4Dl6aQJ=!SfIP-FfC<l&IsjL4D\f\@<Va$"gUo`3P3eW;ppU)AD<reJC&)PE^Ye+1L2.gD%f&:Q?7Q+\h]>'pIqOM2fP1_cpcmt5R0(3T#^9P+KeeZGYB<eNIQFG7s"5]GIcsjOdWr8AshnIbKUfZ&Bq-Qn6?'W[J`:r396YT4X%i4SqB[)H<8n&2QcFh=)J5OULtB%P:BG's[rq0Jl%=24<0D!AIll>!P=P0)AuG/pd]3m6:Y^Xct_0:LJ'lnU,J<RkYRFFC:7<m-b2%=adaNJuhu*<E*O2-]5M7$J0$o_]L!4Y/'E(E?2PU97IC(F^0D4BlR&KAR86>n1'AIA.`.+cP!F">?M80XBHA=1[eCr/6j@r[=f5*%]Q_Y>p[bG\$PGM'd/JLs=gkWjs.l2W/\XU58o/mVa*;jVJ6$[Q?a"LNCS;En(C.%i#2-Z+2[;IVL)#uCMk.kQ]fP(tKq#5M#sO#%%@0rN3Mi0'7a6$^eK7W+no9Ik\lU7l*g>^`B)q]'SYuZ$XW$OVm\i+9[/QY(smL8Q,LY!XYnjdARX)j<#>DnO^`pFSUc8SCNjsH2I%q-mh!f-;>Yn#V$6j9eJ4XjF(OCL11I?FkWOGY,$VdL*>/c=Nh#TM#<NUecd5roeT`bKs=GVkNPn?bRS)e!m5#YAEF\NQg(@Fct>'%K?N03QpJ.9lhpjRqs&D?D^adL5"pB9o()d9`o$!<,<*%QW9X37r_`L^#_3m[SprW]5L(PDp688QmrVlZqoo?b?_,&t85C<$cLS^l%i<M_.DJgO*??B@4_m@akf#)[GrN\4q4W5C'c<^@L71XUs]jCFZkpj]#3Z.L,[p86@][_<0+!eB[Mu-puF5uED$gQ_1-BV$g'M7@%%*p$O1LekCU;3Ad#q"K+%Z/BO2a,g(XgZ)?KGe6N+<I8sMB_P]"Xa?Utd2?9gdU)\2mSSss,Vi8(f)E</cGlt>3lB81%pN8FML!l&%f'k9__E!hT+af!<?6].XedVO^<VSdM:-p&_r4`05VG12YCtRfuZu6,k?/Vf_\)(rG#M?+n3?2VIs7/C(:nqU'd&=ec2n`uE)XJP#%a4%(^%G,C-`-C/d+3rV'\R2s)]+$iK]Cg:g"QrY*hepP#0N5Gb3*iQ0SGSijG><X42c"RJ:bm2ee_S>?[hW26@fCk@HkkRpo$QdM%\rC1WNV`K0-i6%%!u&r]Le%5?k81sPfuZIDRf/_ATn6jk&cRpQ9CsJ_e,`hE4kdFE\,P<P55p\HR%)uGFkY,ah[`l[I[-6+9Upb'%a_@q'-roT\7\+/us#b(0^lsambGP@+P^`h6l%b*J^mYIkS4g)P->3VqV3UWXdE\W?ZgE`5DtDY#q2[3#O.S2k(YIFP>MoHW[>m$;%folk]oP!8C<aTD!h_5*E9Lq=XKi@WRh<X-e^_&_YOiJ#<V%jI`q.T7fV7"T5;Ph%f%c7-_8Uc"C*o\nLSh0+&Zi=i8_`&VY/l-Nn%/p1f)Y;c5PUbFsf2o!<nk(rk`2='XdG.*nq3l70j\oQB>Nu4UB(P4HG!XSE[DpSibPn)BEf$,S7k'u:g<4g`,VkG0L,ad:>4us4-%HrV'^&Q?gc!MmD+fY#,YAR(S250TCOegLpn-t>'PUbYA#dF.(XT!p;R.r1g$<^ii0D6#7%_ZMc`Q/'-sk-pR29mY9LGV(G:Wdo/+%,L3DiRBD5Z;@3UhX,YR7+=cL;#%VR<Q'!k&?Y,sWCce9cM:O$3]Wg6sO$/KE@08E??n=A#H,9<um3mY+go/%,!t_gR@60"c'N<Ou%B`cRQ!Z_GjGr<-d]Lj*00!eWU&h[792*_F"5"p7kR?e0aVC9B>eX1[$r2!)`/b3!B"YJk*n^qq[R4WCOLo'\/AJu=r0=Ren/shKa%W2Y=0`0_n0e5YS'9G(kg#&M*0Qm0nZC`\\X:@RTbG)J&633n@r2mE'+9akk/#rS#1lqqDL.doNQ9$Ba6e)k*FaP6tXNNIK:m%R01%,Zt#,8SZjnC]Z4ne0j&+.O@GDe4,-3l(UJH:nfqM4?eH`O<nlNJ^6/phG6gQ"3a+fNd*K^J]8H]=Ue(e=&g$ubnRE\[trf@C^/AL%?qKtnUJJ[nd6jK38+]\s',NlF_1OG2.bqe,pO,;B+E&TA!bOqOfJHW)Zn_*$)p.CIq`bTb)2/teM^#?El@e8p0h#j].f^4rJWcV_%mg1t]TX'eN,$?,JO1\&Z6CkP"bN=pq=:q',>ML[K]in-dTW(Go1=8/OE$Hi9U6rnH8o(W$p9]sm4Va?nR2;O^+He=X[C-`9C;RN\%]K;81Cri]8CmWa4+^qQRL"mdY,X5BZ_-XA]/qhP-j$[*M:IGVF.[$kk*Z<0PP6-UAlUX&N.HElSfYZAcD)+th;%?9VUWH$]@-2*W%Rl$%GMo1I-P\K"4JV5Z_+6&bt$F9_0O$j^6:RI56;bppZI6ccSSVb@\nB4uMa&!X/&O80QZ,)PN"0&]0G4'j;]O3+?`8h"A=j3TU%2/1//5`pH%aH\gd5b[+HpTiER/Wp?7o$7<\"T0:aUm>j]OEK"YQQk0EA@b9JOWX1\:q189s+K](e)N@%W<+rH\Jo)*jI/e,@Bj]k%)n:m6^d6[/1LrajR_+W])2'jeaB)9,7:dcSKEq[I&:mbU`.5pD?<c49g/u[EH(N8CH*lUbqoE)?&R!>S=];&D`'[BF&8)0I;):5%%%0bs?V6UXuX[pXmA9XAAM_(P9CS"Rj[a<MK),+(;`!oiMTi`FQ83#@f'i>o7$4-hsa"Aj&7/4=8&IkM@G#^AV$E$+SjY(FedE)K2%$MA*:*+^H$1%drche?k>Oc@=SjB]XY"@GMq/i)"^m*c\?%2'7$\%sP^[.Yggn<ic;E.drD>t(2>=LO,sOUEp(ju2Qdb&)j0UQ(Ii%RXA)e/@.Z.)^HBi+F*J',l=n"@'5m5=jWpYn472LgEn"6'/o/W,ZgCMk'LE^%qZT74q#+DSEu>&SB&b5OY"4*B\M+?20%[>l*BO3%<7t59P<R-`PYGj`PbXgKAa:eI-WT*c,F1=?#DFs4<E]tNj?81aM2ok=2iJ'L>[UupP+1QbM$IK\#)0Y)]<"\g^J^@aa:>b'<*5^p%-OTEtj#1G\,%ol!<PVd8:%I)X'5B/cKF7N9$TNp5L<^\\OgA&MaAX8tX;H2RoL:0B8SI)b\I$iVH:#lQ/<;XUgFRqQiFQ_),nr\[%,(iPTE'nU^OAiH3%IBO:b\SUCAb#l2jb$E@]BY8iibVkoVkgZbLTYVC$:=BtX]Gt5\tDlP:Dsl[&#cVs>*;+7o`nYgdDoX/lR)1b%^mG.2MIQi&Lob8e$Ui@=IZb?lT.oG\'+7a%9qT)58F0o2_a,$rX[U%*g,),&m816Z=j\f3Qj$4P41q25G%N<Da@QsW('@"1rDhBO%*6f#sHY7A#9g0+?mPNW?.6*5d8R?"aHV,URODsZo6rF6gK:5fa8qfG3qF+i@5+-X<+VA?"`V)(%+\uZj+.8m%Q.EkeW*5+>"[<Hk%(Z;J"'LN3&CL[:?Ss0P?AB._]3GXsP6b._r9*"tq7jp"%Xj+M3,23]^9fdo*O2S,AVBSYf.2(ok#fq!g*%$QDLc=OciThMc,)X%+%B=IC&,;JntIR)Z'AgU%<RlrVKBXXfh>UL<0e0^Zj\2MFXj>p*5eC0JGiEari6Q-OshrM%3;HT'i&HkVV[.Lbp-PHdI\G)1:EUj]G%bBYLuUi#4-#A6J7BoR_@5"HN*SkJIsEN,FH1!DFti#86n!_m7\fO51LqsbLI.$fc,?-H/[1r)rg!JB.K]fbh8rHB2oBl"h-$,PuQ%Tsmt^AL#H%e;=*2>9.C?:T-jl:0N'EO4a!1@%-$a9+(&rRtWFHPKKn'OjV".W[Q&ZrKA%_35tfZ&%F@W=S)cWI&4KZEOmtgX";VU%ka4&<.h#1`3>V#C'+sd^T[kes2Qk.>XB``q'8sahb#@&-W9,7d1M`UW4d(OVH;f+Naj[LARnJdL#oad[FMFSa#Z@uG6c<lS.<REA%L`;6)Q:/a9/NAXHl=d`)BpiC%-q#"["@JUd@no3"XfjD[jte[N]]m)<OO:A^B@DUi11IDKHOgfV6)B)F1a+S#+,KTc4W7$D#*at4%5:Tq2bblKa=N+NH-(7se'f=*nR8k^M%sT1O/A70kNU^OAAFY;A[EA'+1mgh2=r>hMTl8*e:JX$,;ic/V40R%Db.G`Xa(b*@d$:d)%Q?#^96'GHgfI.ZDWe4l>ZU1EL@BgdCmNGZMYlCJ.ct(C63MN#*7L:9+'#nC9Y_'h#C"D,h:O(EqQGVMA9gj:`4/<QQeXF@9F_%(<%!`QV#4D?S(X%A4nnqe=l\:>&gPq<j6`baceYW,hrpS@RgZ1d:M7o'gd<dJdc;ib$A),$ZTr'2LMBp0!$C8m"Q?aNq?i=frSO+K5a%Cp0fc187AcgP%2!/]AX7OA!j+WC*Q%p7ss6,DA2uiK4Al`oEV1[O"FGDfY9Th]7]GLOCsKB8H&(%N&27Nt-V#GqnL`RK(l0cC"g,%6_+%b2`No]l1E#Cm;[L5`q.sUGO&c:X-l\Js/m$[AfmV6]p2G@J*W.CnJ:>\P@estq*eG+2kJoS^H[&DF*fmXZR@+PirXU*;L@ZM%B]?3G3]f"+rM)L)Ki\Cge3&QmSafc@%?"ktM>bi`Nj1h40?f3qBYD7@lcu6.]jNJro.;QoIl[@`&e/bA?YWlY:a`LVj"FZZX0g8=%rd!b1%]G`<`A"sBZdF#:Ek.A"O5n-=7r:f*!M,QGa0P(,L[U.RKpQA`bH>**>rk%GAVIP^-#\E5YBtNEAauWn/pm-AJ%5HQe*`bk%fL7au?k7^uCtZG"'tCGriG]Q<-q-;/m,;Ibh&-VR(rhKM33/JGcLL\WYkrHLV$M6Tp79AIA.0W.TTr`gAA<5I(4N+l42H`>4=ZUd%AXm$_W`P`;4pQnW&BkkC!)W5`$.BApRD0I[Gbs6&C<k;jN/cT0Q^r-)$6XjQHEam&K$V/PabK2LO71r?2]/-n(LAG\OcR,fc@s=Q%@r5[^H!e6g,doc^002T6G'>#=#;GXY->;P,bN4FmO^*NW=)X^AiNUi&2mG#a?l-$&l#?-4fGT[[5;0E^'Bkd!9iR%HeA'>`^$^+o%;m2js\:lb!*Ht;js&gsZe3L`Y;>]35r6H!rp&o,Pn7q#q7bGXcnVu*A4FEot:#`@,Q*a@n^9acVUa:$6^#<7O`CHuWVpY#fQed@Z%cFA;P*hRYukgKE#s(+FO45qKdAN!fr).3CB@HXS9G1(]b)%Cn)>]s/hCd1ar<DLX+g7OpF:%#O?mgNE]Z_$NB>P1PjUh$`uZ2GfQ%*d1#V>#3kIEG*AJdqFKm0\+)\O3YbCBB'0aLf0bp\c$^Oj]VIlVtG:RH?MpU`DO>+)n]kYSod`RHD;fEHFhSkFH2rCbP"Xn\W]g]%%SdthVPUKdJpc993gp\M-gf=I.1J6t*K6o#ZAK\\-3f6NFP>OpQt=@tTN;NFm0Bc\Zgj^4fsJ-+=cu3l^$ZC@?Ou]A^Dm_oIa17H%k#lV`409=4%N]0*+K*e)q_YXqW-`R9CY.mIbPJ$c(iD2lD%GUk6b1J0;9"nS3c0"Ui3nF$(PDGNW-&@aTquhRB:[/H3fCElWGL#)%G$Bba'Q_,QBAE<MWmSY:W/V9<`%<!+R(Xu:_Wnc#rm0uZ6((5#Z$s23LHfud:HQ=O>Bc.>j7\CKD>C_E=Sd#M#iAGuB1quJ?CBut%qfdN1(Z@'ir&YaMC@M6,U``bs77jqhIX[CSSj!T<31@ae<U7.cR*;PCDSOX=kHW6?q?CQD5OPuNp1a-t\Z,L-[FMp1mIg1*HY:$`%bi1RlbFm2$_tgoidbm+KoY,""o=OmP_fcP9h?]b"1JS9p*cbog@'>F?I/F](*MCs9AXk[aU[`<m>0J/Ei#``U0Z_"mOl+m]r7pP]%>=;S\`Y+lpk$bH?Rb8:uN.0%<pbL/'2]QSXSTnY#ib.lGbQO>hZ^>UiB36d$jA\*]n8i5e$Fq(MR5I1<pMK6aYG[$3\Fjsjg-%DT%B<e?5Y2ofupu:PUrROa@n21Kbr_X&kYB;O:O(WS$r"gEETLrokP]EdVM#R(G_g'q2`k/O=6O8d8]!,BJ\NUP%2S\BKK:Shl0=23a%gP;3Y^DLK%1$F\Q]pZj-IHNorY]k6n(K\G5RD1eHDqlH$B,L[c-=qo#U=Ygiroa"@m`F_g\(sf_2d52UXMSmFTB<5!_1&ui/]=!j%BLH?sR&;JV`na"M-%3T;\EFIXV]Zl>)(Fa`n['-YMtkt$:ci@j%*X%$gZtO&eLHmk[X_o3cKk+sQScHV^!U&Ahg2W;,/7^HkUe`3%XV\ZMnOr,+hD2jHKAh$fjX7`l75&3^/Xl^b''Sr>EUW8$Q^KoSGP)n:SQD6#i#HSn4b%FBE;ksu=]N<UnI=Ac2Y>2+esq]a9j4"#%;@@hq%UUc7ci)/`m.<?23tZP1H**8?c<_J$H>m*64;lFb^@gjOj8$k_KjWPOO'CLbqaZ9Gk3IaKhS]'GgcdW9^@$2pSJlM.EOTZ&%:/T[bSGkFAF`2G3m%Y)hebdj\1`Y/r/5@qgW_&b.U&)qG?>PifF&Ag+2;Qm(oBFYR3L9')D>"Zs8@Ijp#K*=^dHmU8DLXM\:HY4f%cBW9Ya79/5IFNu%gY&qVDuCm[S6jnS@l3o_?U?,MqPD<"<9ru4K/[\*hHJ^cRg&s1#<Zse(Bc`F4V2SI_=cFbf;!T49p6CXi<o"Y%62dTn:sYdu@XJ-JC%#-d@6H36;:@9j'T*1Ore=,;SLKbM!qjs*"hmZ4#hEYQB`d?!o0a:ZRjc-Z3)c#So;@IbQCBD%2`4a<)%u0E%C3QQ*m@t?6QbG)Y8%GbVFnkk-:P0Hf8?Ue78Z6#RmC1<P!*;X%p7E8@H#t^Z)SPR1^;r,$H?.2'UCFQY3?3/G_krljMg7;Gp#\5@%dqCMj`^&sV-jRubQ\-(bqT"4hm6iUpht&o$U,tPQK0MCK>=]emd8+,@]\[r8^@^@YG`-T`MTp/OqFQ&/H8LUFDmh$MT8bm7U7pIN%p1<8.[<^4*1Y]_`BLHFp1c--F[Z6.XnpmgoI&__ABQZ$)!n>\oPJL+of3c)sValYY;LWLLS@=TXVaEqc@"L0E2p+FfjQ8(!`bV@r%7B=bPC1d:?GTIW(,$Vb+nWK:"JHW/D\/99h2]jPm0lE3RDIuYd;Xp^Yij[Lq0K\[>F'&cUml/5^C^Z"sdrdiPF1*\D2;f#0/Kcs*%2RD+nKd#Z<jj?q<e:$#B'>g=k04/Z&eO:/aZ'"g$+^TL`nn4(IS61Ku_=iUf-d@J4>`?Qd5;2[Hc5nST!ald$p4=n.4;W3dZo&\P%D)Wj?0o^FJebcD`n3>.Pk?t"']N>S@X"Uq7j>b0<$3O;!MhPM2&m>\5I_L&cUVkR;iG[o&+Mp/*O"TGIN&/cI:?1!gSFP]@lEsD(%cNE35d!&GQSN]H<09WVk21c+h7I5n6,`M%`Duj]cmr<PVG0?2C09lPqMf1<4-H445RWJSUiG`bI!!S=\DRM>:TFDiaF=q;B6G5&+%_pJXg2JEQKWac@rEFVOtE#\X`#m7'm`Y-@h)b]*I\hS-L*;@KX8%ji")r[:sNs@ILYA(AkfaHJ]B&4Gcnj(A)b$7#;P\imo1+ubn%d8n$RZ99gsAEP(dLO]\D(NKuCAW>-QQr[!'@]3hWURo=A]kV1)]lV"@!E*P=LGf%c[k\P:WD-iUGuFUme#eH_U&'"\$>VV<KOZ]E%*p1X+k5%2&ep-j"ik4rcn`ZA-@a(pl/o2.1,MNllmQ$)Ue&)Qh$6kE]=E-_g3a9a>T6fs8>9`rLUW'55Z&[0,LDR0"iGb/lFJ7TL%W9o%@Z6Cp:>%Hb;Shs-7RpU(SCph"E]P-[BZIaBOqWH+UD]_.AkD-13om(H)8[ch]k1`"F0]R[ReEpVY<_/!@3=eo7]?#f.&I3Qe%qAaEt>L4>gDDU#*lM/ukm]W2<j3I/(1C*HCrH%.1G(@0%^!?=^5iHpsce\TdhIrF':WWd+?9dYgDF%-KCZ:;b**Z2BlV?2_&\)j;%qVF@F.tMsG8SEbUBKB2gjkrSn&Nsk3T0ep(L,H6u,Yh%20-'W'(r*c5Q-%ZBfR<63]"L3L7rX%T%K"aImsfiQPA`\ai(j1&7ph_Z%+)UFn5.lC9lJn605CIhG:ESEj@(4nI)ZA?=rP`(BhT)7<IK-X/p9,S,s7:kuT+B6X_nE\Y@D&;8IBTY?HU$o2r2BJ`kBHp5op<uh%q<2qmq<2bnp;W*<n*L'g-qI^*G@#agp\iE&Z(6O'm\cZtmVQfhn8bD*rM+l'p;5\")]sk(mZ7*kqI.En\,"GFa^BU_f73_`en=uq%Z[7&mcen0geGJ1YN>m5beX%rO')Q`@a5NN&J,dj^Vn60jSDRunn)GKRs5`jd+$T^LZupD)n"Uh7pMShP3o7AtPBH?7kE!p^Ndpg^%m.<L14o>#!kLFhO<VT<`9ZN4_miAG,It.I>?U+=Oki=@WG5q7+?\A:BrI=9!3-t(lS^$rYT=5=hhs42_T!aX)2K#=_DVdFeHg(HX%F8(rJIclp^)s7*'4(!F.j/pXO5PY*3DWg@>T7-=mH`uiW*k#FnYO8O)a8<'=AQ@Q(LLKr'5CVDdf9\uh]c2J"?upSYT4cpU#Oh[3%qZ#O;GJ8H92K&:Ohu*!>G5q&aP?XYC]Q60)r:ABT#e*=EAp\dt5i$bbYppFupV%VqPG^![cjATulKI9rmd51(?hNp;S!tLBG'`-;%$'!jbq_p^rIIP@*hqn;[\PZ\"#N,FQ4q"uTJ)0t^S"oF:eh>nW!QffA^QAcnRK(HWYU&-'DuJSj0Me>.]`-8r12D>[ZsTdShKubV%]D]kKp\o:#]-4Q@iPE9j$DM@lW*]DZ",jp4I<P&mrq4CBGQ1.r]-#l-Obi7OkQdMuT2i?aqs<`@HLJ$j5@ln5Ieq0WUS#9s(Tq<5%E2NACa)NUIC$3[fJKO.eW10DC!Mk`ER/>@XhK,4P^!>iFeplk43o#1qpX?7Xj4f(\pYC#iK0Si"(LR2*4hgIQlg73S4-0,r&%_f?%r80_dr,Ui;Nr@#Ik;8Uaq4mEH5$,5-fs/l3+5P]Kl.bC5h4OW443&^-?JaF"reno4pt:]O4?4>0mDX^-TDWR'dJdMPG&QieUVG43%a@$^1kLCZHDZ0Ob?b^=TRg/MQO6t9^4<=IZp<t\8B<sspRb>\Ca?i!.r^fX$jIPmUGJ%qUmWV/[?KrUsq<M@0n"63kA:[O*r8c^@%k)R3(FDGNNr\_AiP;Cru=BPphSA2cVS`)-]Yr(Y.bPh=mcbEH#0q[5^^%:9tS&^$5g9*VbqORWTci<ip3\i]9rp35Agq3C]l%cmS%r0,`VDs_K!X#W%UJ:@tm_Aq>o!Y5/kDlT#qo?c@kE;/Ip];'?.nEVIViB.#*oGTjkUA)n8mJjeJGOqRGC#5#Kf:B\DDVWlnqXE]L%Q8"r-]q,+O]Um_Z`,+Afs$o&oS*$lVoR6UUQ?1',msXu@GN[hSqbH&Fm/E'8)`R&%j\[$>hn-M`_N*N$oF2.t/bR(A+(:pk[spO=%bK`oDUQ_6Ts-pjudoXlpS4WYG<ZuF.pS5Q+qVM+=iVW!ia0.\JYPmtiNk`"%MPT?hHcI4UiH&oBY=K#WrT;cL,/SC'J,A3(\bGpC%:S32gs)IL]IJ*"$f/F10PBcP75C**R0E0JUque<LXU&qtp%-"deL*G^Dk;.@I<&]NCrl>=T)>G@S<L$I)T#ZX0@'"Br:JnHT=ci5%Y2W"'I0.*74CBs:XrJsUaca(X^^+F^K5GE9UHsDJgoLJ1B><tb&Qr+<H\:QHpA&^s>3E7]m*)ON+sUTXgZ(qJkZ>U]U[S%,1;-30%(Oe$PSN)&fm:2jBqd6-Np\r--S(E/eDJ$Z7c/1G)>aVWdPM^6a("iCubM@UHlfRm72raT_)[dZ"^qn$[rDR(fBhe'Z2g<PpHY)oV%^\7HE;>9#*c->b.B4(',Ve>GqCi9E*Sa4!On'6*;*h<)XSNJt1G(?,&H`S2)>7ugCDLiMIfTH3XfD#2Cr-DCj[h$[_gX<nrc`HO-%Bl3a9s7PgG*Afdo`q\`jb)p+Y>A3[-30&FkhjY]sA!m2)TuUk*_/+SYP_S:;E[!#(\4g0^-Ir-8iURGn:33Z0.idR<(:>S5r[@e,%N-F*l1A#1Ne+fKWpibFb2Ws^S(LK?dI<F1oleKhF.q]>4SXf]W5qP+Ns5G.2*J8c/qd?bMZ+1;2e,4BZjf6=MEj4NGkEjD$A*I1B%rUl<:PkiobU4.4`T8FCNq*0NL+%-JnhA]KQU<:p/iX^X_Mjniif?0T3[c?_aAi.6-Cf:l#e6rI*lAclg-MQTNr".c2cXo(_=`O;b%8(i."Fb7`qC!E46\IiW1*':F9jJn^kB)'8/4;:B_KACqcqk%g"a74jfc<]MPL1AC4+I=ukc2S1]ogjg!UstQK]U"I;G(kG1p1"u1%4T=O34R73=o>[n*06]@hIWRq:rPsB`@+<Gfnl@s-g\pO1SQ!.m*FG.7%-oD1[9rf/31'$q)n3Slq.03chQIk[qp5<;8tWBq4-ACu%n6p<Kb'';b9lWX5Z$CnT'A\,CG3iFErI28$m-!nuS!1:l0/d]rIC.:k^;"i8qpM<*[\aGdqXr7u[?oWL2Qkqao0>:f(E3Tsr[T?E%4.Q/]Hh$Ei[GQ.7*WG`$c]A#M6KkQ'48UCDI'])6qR)18kdDNpfm\$jkJG;EJQ)F5I2t8d\?MUKQ&4]_AKjN!Kkst#m(ReIm+K5U%5=XnGp?J-jf7)Sp]S'2rDEZhST*Qg:+I[gZqB$%lT-0R>f/I+$)O@6Eo:5/on+eB*PS`Y(0%_&s4S%;&UE@8*+r`W3dl>kW>ET-n%kpB23pj)bb<rQ8dE9tEleW$2]Dd>Nsb<*#I+;Oj<I@A;&7/M'$de`[Vhu!<2[Y\OGNO/$0I!MF#oj[C0k*;F&"Pr0_.WUO_q2eFH%qfsgWj22$[^\&d8q2*o,b)qhd?_$>T/)06Z+*f-`lfo?92>6.8POHf3rqo'a-Vh_NkD.mjJ<4g6CS``J2m:!K3$Gu-r8I@QI=&qO%h#+7BUjD(r,MB0]nLoQEJ+raTZ_p$;G"O+Zl`]^JIp&-"Y05YYH@G[C#U2JqNl)#\"i9-ReoQ?7ZgieOft1/n%pj?;VXNYXjLhmI%B'8@M@?c68hClpaf\LiK?>cT(;@eXof#]S[q5O#`Hf&[GrF&'"M`V1$gI0rV3O3r'qs1^6CUYC'ruQ!;?[^Jtcegt^U"aq-ro3k1%/!&O,qQer"6f7mT^V"St5fqiA2fG;EN2J;crg"Wch0jYH2b8/!mW"e'S;_mXp""i!pjT8b-Z?`tD!h^\]!kg<?WnCt\.SaCJ$qpO%D!0m!S'Sj]Y^?<#aXH68[`CBT+23ukl.YRnYK&hRMNrpU1Croegphe*`)ik.T"+bn*l%P5nU*Zo(DI]&f!`>?F8Ru9YsjWID!.=s%*:E:N@%VUhIGXmZ0-Km@Is$7YW-%t4m@?oR[oYu6=-%"?hEK-0.]iSjXo!#!O4g3=5=*Ga%"%Y'H+D\s%DohaHGLr+>kq'<rnV(.%IX&>Il&L+ha*@=+pCF_T*n6A_q2TnVEr*9$p?]X4qA??JqX!"K.KWRrG5H):p#rlg*n`__pu.^E([K\C%!qjufoD=BqShoAQ="fa%]m&NbRJ`8p2ZD@?GBA)7Sdoum<&];P7!>;2`1-@/kJ9*$T?Zs]Ut@n/G.73lmtl!UrU%e3YKsu>g9NpVFrp&+]COl]iD!("i&j33%Z[\_HGr$MD=,$S.0$4RSkJJ)TB>2(Teb6t7B0U70><f9/?9S;*PKdl%:5EG#rlFnBqQ8rKiL;9sU(>E"Dmh=u[!*M6`\fXdl?qaj%ZH8FP?[[3JpX_(4]!M?;p1rt_q=<V?G=R]7-$(ltI<#rrN]\,JW1T]2r8mUL90O9U&\[m]kJZogGl#)3XBtq<F`6<kQg`c??f$tk%Ie$Wj\$p]Y0KIrk?^prWld*/#5Fk#K6O`E627/^"J,K)kZ`gQ=(7+CLk3hr6$ceScD6@/*Z#\pt0<]j$q.#D%*Ugc#5CMWiPLGT\%*ICOEg8XP5S:7nfo$q"nPVK_nlY6*[o*=`EIuSWd2[ZmA7:3]m\)d*YARrO"5G"Kq5J-UU+l"d;`LG2&'"7UsCN@K8In[@>)ld,/%mCiIEjTl;<9?ppNmcUF:cgLdPiQV"R]ehL\G)5n,ph]itp"s*#SpgTL'#]f32IE&fphCZViEUnT='k:/Y*U5[j#4*2g:=S1HL(6g%o<t'X3P+`mXhG$7hUq1EH2.@3j8.Lh4*Md[qs)OWf&,A4I7)liHZqAT4hYl@G&/4&#'Pk'r-=gF9^:Aj'.c.f2MYiL;P.mqgt:uZ%26r4VDEkl3<aK;_'fOeS?gQ&rIsJ=]gN[c+_O"ok`Qe8(o?HAk2NRmPEU1W`qn$LLhb@]-Pk^0_2br1XoOO`0Ie,)_P)EZZJaPMD%9!IN7Vk:OuAb5%S3HP2=jb"60qXYNaIJMpkkrZdK"X0*lDkX&C.bO:g<u\Uihfq@'qcs-grV$)qLMIj,^An0-KK5D!\WK,6I5s+4%bA^befS&n.FWdmFh"H6rigZj,met_FqGEc#a+Z&4[kHN`qf_ktKAE(Sa1aZV;fM9P+'StOcD<sW\b`j!?dJ1m;`a<+$D!)FKN5YS%c1^0:Da`7D*Zn'ni5N1?r-&(\mUqkEhL'>3h=fl1Dq:6tCmA)naYDFkIb^JWr\f_ea5e$j#<`d+b$saeq;^qi3hN!.h*->Va<P+J%C/uAAriNeNLLF!I*kh@<2MB8G5pLj6IWX]n7"t@_7KK_rH,B*Ha%CZ!qR1?3kC;C%ijOGpg##!N3-4N\(Xp"KfHC"UiAZs+m,">H%S'ToL4.BsOdT$hc\+g[ri^E8&qAW)bUsF8Z?LI0XQh'7Goj^WQlg)gpqW2!CK0);6^=ms^FST!Kk:`)2%<5@WVs_[+b9qnSUc6$a%m#u>P*89_hHjK6Ija6_s0(FpfS"9S&pSo@dDr&_<SMt80j21+H>2tgM^sHX]V"8dg?I3Y)gr5,Vhqe6KZ9.XBr3H!ihtWA/KGcO$%N!oUSpRi>S:9?ZCo4D+h<!@:;_Qe"E`J`?_*>7:#*1K(F%sB"9B>0sXn2=b,+#[K]Ifugj(GOE^S(D!6^"Y_rjc>1V;gSFlR.^*"%iE*bIg&F27,*L/_Dg$?I[0qbXNB]%#gS:EhqXMC'?]!G7HQII+,oj^3U"DHm4Dai97sKp?[s(SPq>,b\i4ZOZ[6&S8Y2Q31jib:%%bJ(W0AGGlcNAE52O%joh_h27pn@c^SraY[#:Ap._b)(1Xn(*U\$FRg8c5sZFljb;*n%X/A`MkZ5d'cEU^V9Ii$]W@`2YnMflti!Z%Dr8D']s`:[]<tj!GOsb[ksqYc3fl4+4#['.\N^SF7=lk9]DlQ9>/&lF%phJg4:*:CGH]l<+M?R3me#Q6O5:j']s!H7Il$=D(l!l(%.nB.PY$MonqtfaK`Y1Z/lgJaSr+l5T'RI;#O97*CqV:e]O.<bnH2ZfYSBI,V0;i/#Epi;/s8:KnZF9`m(rCY+^#V2"q.M9BJ+t_T%](sOOdXO?j0RNZF_p9K7ID0^`C:La$l-c!G#@m;_DShJ%hZ%>'j7Fu`L$e61T'6*o5PBfRhgI+qmc2ogf3Y9-F%#g&NuN"urV63^%V=0#/r>/\AQP%_Z[K#3'J)f/T03=0)bLtS9-RjOok2cE3TB1-D*8_>WkkH73B6O"Y)[H3rOJYL2N/kS/U#Lj2:7U/(5Mr@,J5#$j%=b$D/X#%VP^]*f\g8Ndhp$gr>NDoiUnK52GXLT;5J%Y[=90&>_>GF)PRs]_S_>E'GIX1r-hA0Hs2HkHQnj_\+9Fna&/Iak&a5<uS%Q@lqtFS"UH-Z97D2E0VYJ&"!^iaX]%ln)XPn%G%s]Q6K^g=>rXYDQi!2fIL<DiB$ET5XYA-S%Ek4f>U(0)p*!SuC8sgWf01pTGr*%;/Xt9f4Su;++O"/rgAso/o>HkP8>t1=3kD/]W2-%oV%goLLV=\N\FC9qjUY>?%BKXaW9`#T:=9ZcfK.ko[E(%[pT(ddd&hR^E;.b%WNVo\h#$X+9d)K3GEt)c/`453e*fb7p3(rbi7PZ^hOT,'Z_*;TXinbF4mQH]]QsXBpgJ%3<I+<lmsZkPr8lb*[6*Kl<kKI(-E$n1%hT7.72n%Tbc[T32s6WsONK8s9FiM[UD]%U2=h-0r:-ChRrQDN/?VD#J(l)S6]K$3=)BrFW4l(@m[XI\bm.R,#^[kNVraPWcV6(s)%o#':IY9rS-dt?h71-C3eR<BY,fL[<!SGVk_0Fem?;ISB<,^1b].Zfc[pMaI%Ebae:Dnhq"I/3/B5OAAmoG<S3nFQ?tT0;V^l*[dG%]m'>4Pmc47W?6%BOL74)2&9%cc)AU*h%Mes@IoN$#C`90lLUu.Ieb8@U/ZV*Z#f_/Q!8IlUthX_Dg1p$?'(atIeEQ\H?88I0C+hV%+sY:T/jM))IW+hte,=KXj8V+uGj3Jb`bdN$g!nL>Y\2`<s8:iprKmP45U/Ji_tNN%Q5Pt(kO<s"iRNj!+,cW`Pe8tK4jDrFL_!g#%\BsZ5<sP45hYlcjS*+"*&WYI(Spth]hm:^)qs$#'jp.EX5<54dErY:qA`e[!IeBn2>/4R?o1-AuIeE9^r_ltdUTsiqB.Z$uVu0Vg%]ci0;QsS_b:1SIS55NaI(NR"kMKnf+otQ;gr7Kl]Gk::[1?&Q<]'0b"T00\ENSsRcP-dVqTA"CE6Q_f7[7=">PPs.M2,"Z/rR=DD%)l"d@hK\n\mA&5/Dr_n05$G@%a47XN7DZa15'jd9<\k]MJ%:I.3JMG=ODlLIn%Zh[UDn)D$Fe<F'(>UL\*Q"3m(Zo@?[XN5@9)gp%dDKVlKp0k<TA4qiEqS*YG$CNq`Q;-Um*Pd//8+Y3.u^h7B_<6qW:-q(\Bf'm7d@S^Y;LY5DU[A7qbJs$M_DOW_`*UPhpnpPhS#6n%^Nr#fk1SM>pFi/RPaerW!H`-g8d=.%oBc.jisaXUm)iVKrTM)"B93&bf*ADq\XpK^rmsl"R.J(a!q5R.1q)V#'_oZefukPlh"$2^%HXL:'T8J\VA"`-X5(EOerKe%MF;>s6.;'dE`$:ng&q>1GXjd#o&[gE*>gj7eIuj!sZNoU@f$+ks1#1jZ]D#/HV@hIR+u^;.fH9DJ%Z.+"?,Q*='](*K/kjsVVgjf(^`maYe%pn+BFuY9/dYjjK].qD<q:GBk`.sh$@hK[TnV7P=R=E94d`A37rqcKs371e\hd$?DHl?e)%m!W.T<]28nLXOj,O,*Sa;uVWT!;B2*&c#R#\8bfin1!?KNS=5iEr:=gD`+b16Lo?mEL>R3XiW#a4o/i&csNll&A`j($-O/7V?#=t%nES@"lC&7M_5Ai2F8sLc#P[-Ch>d5E7[)j[Sb:EXq!hA0A)lN:I[oXF9j5j&rb&i!@7EHB3/%o-A@2*MLN9KB*^=Gf:S/a3HoOp`%a4]bRI6)b@rfT'DH8>Ldr7rM?.)0Pfe'^q4LS]l(aK#0)#JH(*`K0F(d.5)Aoq?p'_lW_%8,jlQ%$>,lS*ngCO;@JtQCr+kG,@^9%[1Y$g(Br::6Z(QQK!7aA:DNtFPBsUK\gs_gbF6&ET^,WUn%#Xs^MYn0\G'CmkQ?*qp0OmU-1&7_UngZ3RW@oJ>L2.M?06NtdiU73%h7U6L@Prp@J\Cq\#/8b+p9>d=6cj(m?0PBKjo9i.Q`O`h[JY/YV-E>Ajg`h_n#piA5&'_/q8[^Ma6s*+f;dW;bH!l+d]G^O&D's'%majf4ATb(EG-E_;o,=<L'<(MO4k)(lE9P%F2XUHfAT+YAb_=<,$N:Qrk4*j8J,9IGa%$(*%d6(TZm/aM+o"r;R_)4Tje#1Q6=mRk%O?,X'Vn:CZeu5FidbmX!SX'4<J(CA/r)iUjPE4AjrH^%JY-,=Bm\>1*5[\.dp,*.-Y4oI7X1mY;=$(+rf0bm0+f(#OP;VN6;UT0,%`L!sgLH_qLWD8JPe9)j"A?5!9>4kmaB8<b*XOVUgX+%`/mfXEW;bCA"`H<eZc"1%mNrmGh;;5Kq^9V+2cVte<bC4Q].We^uCs<3Q%B^\t(VO&gq,ZF0.nSBL2?mGOP@%`ierHd^Sq4>Wa]g-,L`-H[<*^f,<c_pH+Ml^(\E%"s4Jj\(3`u,#HX$F7=faZbigir[&Loa3$%Yd0k^PX>lFg%Uc$d.Nqp6=!BX[#f\g=aS,t?G.mh@"C2Y6Bo6JS?uMH+o<A^VjemR&.Z7T=40"^Y)H,]\[AT_F92f4LEK7/(Bfg\%fdcWV[Gi`K(NQUBD/t_".f89&._?8oNhHN9"?j7Cq,$>Q<M*j8N.LqRl=J/PS9^A;"T/i]YX_m<VpPgYfWe/Bdpnm,K7'AqB89>p%,@_hVQ[W3o]Q2b<;k2'6QCiNWg>Gf;^:;]=a5Eu)mHi:.2=>g_<@<9>JjHB=GGm\Y[n@3,%O&s0?4f0-/.D_"A<G<\(HMCCJ#8#X%PW!OoZCk47;N%2Z?PSulPIj_sGJ4U=-`pH9#GFb$h*jW4-nE2tqAaH?b,QG7&4fL?97J+9dRJ,.@,n9-dVq1Opu5hRV1B<0Q7oE<%:A.9U!+uol0&%o/i1o7k+EfCg'0o`^0bp3p_/uMPYTpsF0(K#rgZfbTB>+!K?c"558IIOm(UspJaDDPp'PqD^HaG6SZSabaRVU5F%'jM`0G[c5!0X):pQQWB:_JSAY.iI*0Jug<_Xd7]^Cb'N7N]0ai+RhrNSU?I,/35dXT:P=g/\HufHM5MgPXn7[$mH_^I?OPJJ[_`(%)4Pi;[dD72,8W6"?>_Y5`66IIcr9E7,Z\RqIS"RLA:Dt8k8),l?!h%@]lgXKo4KQZD@-Kb"ldZN"RQg)(4'sCF=&IXPtg]\/oXm2%^@I'':u4TS>EnO]+M*Y+6ufqiJ@m!bQFl+r?G/:JNU*oIaZd`'gG4`S@eE&#4:YDX!]5#HAY=rh<$`Z2E_l4D_'jI68r/2&aJ$]#%bO(.l>s_83+_Ks!N@`6+A7m*5$)/--m;#$$j:nCiO`@+#S2F]@_sOKk3$KbWKA_X0N)C!-%"$V-X+Cno,"EN$'QNt(&.IEDTjg0l%!Wb,-VDQL7J1/K%=Vj>'VEM#O,_bQhh,u^#?j\nB4>JY4?!g5k;S*>Qa;:P28a+@ugRH">cFHVTBC*5=2YMQ8S:LO!SD^ceq19:q%m"!kMS.RH\_q)mcJWbNhjV+.0:XFY"$>KnXT0Fj=d+2>a@OCeT08@,?Z$2ciW:g9M(`r,sP7pKBH_5P?1#gRcam"st-XMuXf2Ze9%V8-,;^nJlAf$nJ"H*SY<$+FK<UpU<4"cQE=`)]o*M!Oo[)0jaLm3`^:rN_SfbTTA`P&*GHXMB`nVp'`VhS9SkBC1tn7)+>cNI@us%ZoRa3ak>^2kQP>h4o#3;$_8CCSdiuF#U07HF<m9"Yh)?XWj[bEA-K3[;oMiB2nHo0=5Bi$0+@^a6f9pO3Ort`Mhs-U*j>Yj+^d$F%0J8W^b7fJ-oVdGcEd?<_U9+RoZX'e=-3q,$m'DGqJk[kJ?c!#g?_D>V$(3*Okt3/ao?(JKU<+.,^e.bDG=495A^6nW5W%)PLfS%o%ni:9pO!$Uk'::I__ElhLg?1e?O'C^m\aI2C&[K`,[2*eC6S#fnrS0pQd_:Kc%@2g0TU'F?Tm&AZala):^G=*6[2Gi)%(!1JrH<+-%OZ0@2h6RRp+:\Yj(23oFJ&PmtoG),?,PF=ZfuZf&)kDfSJTB@C5nQDbnV3<d>:"@1jhU5./cphqa4NuYQ&s[R1_E@bZ&i[b!&bgd%!]CcP4.n283ls";TEo>Pbp5(6Qt<aA-H$!nA`:L6n4Qp*7M1S,;[n`mJ/n&f']JhpP62[:#-TPfg6]=[^fg.JR'2js;#llRjI.Rt%8Z#k(_'QN<'dO(>koj6g/5lSbl\Db-*0iG(9+Zd8!-<kk8^\m5_JHnq(O9o&6BSL*CGC-)2?Mq]CW)"D/l0d[nDW@FKhee"k#o]q%65(J^55bbNEV8NV>k(c"+:B[>&=mln"<^"-j,OmG'O=[]*F6KBF@h=nm&*ZC^1Qr4'Hj.VK.3%KCdk?F)r-WZJjC/111:"?PpBe%%CZHVM@!Fef6$T+(jG:hNM>4C%`n2RMD+I)=B:NPRrt5kdisVR#k-GT$&o^?+KtT8*Z>ieeVXdZj<,Q+YL'?IlqM]N,?$.Nb#t:F:%DkuSt16>0ng4OpuZH-';MqSE4T>KO/q#f[b":C7k\T't-C6k=t!-p3M&p[H^DE;<YKIJ6N:I_Cd<.8k6o-ZX3:X0t*:T3%SCU=DK%ku,bq^[Q&!crNc_#/N]bmdSk$5<Fm8ruR"lK7GYPUo1D+)!r5+1si^O2FErliF/+-ALXtP;_RJPBp@pHfSqH..%^on.-:F.,%?Pk%3F2tH.JdS*>F$AVb:=1cXXJ(7.mW;tIj"YN*h7ihbR;G4Y*1Q\CS[,>m:%5Q9AogS#cIo'c1R9$\SlM6)eji0mt$o:0Yrk[AnDlO%:c=Ld)8=]Fpg0H?fP4O50[eqQ@69*oR*W6[=S2r8F60O@oc;V9o:pV>>Vo4/Om=&,!Rp@FpBJDmKb7ke*/A6D)87s\Gb!.5BNW>0%d,Cf1n)K!$&tG$h.'h)0U1VFNF5VsF[KOV;OiuuT\^??e'R6(6KI[/##'l\U;0sSTDj[mM=E,;F%f+EX'!qk2'V`O;Z6mGcaW9T0%PC14@J:bV+83X#'$?`4o=;-Mu192$%n.UX.,3/[bf<_B,VA"E8Di%;PN-c_o4`1[H&Xdej/.1HF5cEDsSH0i$HJBB`;^Mp=9YLL8%7<Sq[.\dSUT7_(RD"^hj!RV-++f1dc[]6/J"K*0'gQ#8m"M,#lhsh]f/7WjR<+K-AWsY79R_Z)ikFD#Se=/^6"d:P?IK`*OV`Huf%kd:]Da"&_)]?eq.$P#^.&J1rG4lD4pLL*PjGE)I'!_.@&&9&eCPQ:!0DIi/Kacb\c%W<*m"_ae07tJhRW:(_gg3W)_7D:5"DZE\u%k2B%L0V,>I;>@H-'gXu@[q;1HgDQE[0`;k],OSqL5Ym7]j@Q1\8@9@0=]Z`7a/^d'npGbfj<2+;YdI=2%CK9)$G93'OZqaT:^&k8%24SBS:1n"E'X;]k"pAjq?nQ[0a*09hqq/gk@3Rep0*SU*n@J&kXb?ulnT7061+U^RXsKJKUlkhs3YE*>b2`YLk=,BP"?9g:<7T`S%'Zct:=-?Fi,[?tuB\t75<&G71<0[dnMJ.16=^U-\r%iN2YL$D24G(KFPA0RJe:b9K&[G1@X,]M5CB]j2<Z<G8f3dTijl\\'[eE@;%aA3JWH8*U:7'QJ"6G9q/,64Cn>\0-<U1.h3Sa*]VlH?'G,!=c+)F4`7;L?rsj0\s;LAgK`-3\S)ORNRaUJ;C4:.ZR-iFoti3J'RT%-G:)s,lLaehiXRl9"cg9r8:`[lUX*g:lqcsZe.uP$Jlo6rtL'+Vg",j*m%EVG%^JDU4eDD$+p[G`_c&$c]Ge'#)"s?7PV'o2,'09%<`b9=/3<5&0mjQ8Q1asBD)+q^PJ_F&N<8oF!@:>dct1Sjcn"44g*0@MmZlW54A:T)JjlDC")rs"10[1V)nDa;3eKc@nC3-.k##*:%#p<P3njZK?(UIq>.49hs.;0n&57I]8d8AW=C!+jpnZpAW<CheIR$$O$#e`Ng/Hc:'W3YZ<bck,id+CV_$\BHTJp4:!Lk$U1B8/a+%";'9YlM.3XLX&s,:+%;aefnH(6NuR+.$.4Y-1_$]#Yf!fl%XL\jqt#tViG,%8e5_j^g+iTW:"X]@8!7^"6]k=cm;#002El$7R.!-%`M6@m=[?)G'V:uYkN5&Cae;U$*DLV/7HG-emLg9EkGfI9(=7tj]R[VIZ3M@rB5b#2RrYnchXaSKK+</Y$<%%ea#4sNRrIQ?D.T*t%jH+/.`a/YNMf)NLURJWVa"-0aO(7Un)\c9X6`gd'=:[['S^!BW6S&fR&3>\G8e<=HUrPlcOE.>u+;0EPK#0!rdf]"aT!uoV;BL%i%YV4*9;p:k2IEjbg\g^cS:`V-`jY\Fk!jNW/J`s"`9o/MI6(8tXM-'q;_B$q'ie]dFn+:cjT3[U0<%IYY:R-aZ$F@37fJYkKnr&;[%Sa'<-GVb+V/GdI=7XZG=ipo?#9;YU\Cb2MneE]F]$mIch=K'ODs6tu$6dHSYO\4>-'ANi#QslK6<Ztoh\\PY?qb-YWKq./I(#bL?%Xo<Pa`cT9/[A3FX#X_gQ8kop%k9tQkW.9ucX-)+WYGub!#FieXB<W`q#Fe6Nq&0FPC2XISUP"i>;O(jE/L':^X.>tL*^5oP>Z8G:%oI%jkajR@>/.@VnpMHV]Ch:lMC]h4N6^Kq:b.XWg6k0O8-3+o7n<@=n#.*5Mg3_YO/p1RIq%EQeJ]V<jc:3'_fX6K^Ya/4?LkHS\%h_2'X<$/.n$sYE)eq"RsrLnN;>7(1X4FhGm7=n+[h#usI,--S.O5O41D)3;HJl,mu7>3BNpq^*$E5Y]/okG6!kK8U15-F2\Jq91*%rXLE:?MPd@iB9(.5;3p=i;n#Tpn/tu2&SAt6phfq!J+.TURlod7l@]ViLQ0f=ME3N+V%4p`7"sVo>9KPBpSUh*!NI$K!#dEZ)t.Q%rVcHqf3V0EXO(NH`iH<KVn$XX[U>Z0aLH//MhNq[A[6=$okI!amMu.EKKJM?]b@Ju01DFJSfFe7c)/,9KEcYG1fCo9%VCgDO1$'N%T]QENaVFr1jmn,i*m0s*(GJWDEH/+1dk4N7Z'N([AKVf%b^sXbqgocd&[t^VgI+e)$*ub0!KR44jW14nTRI"EOJ9hp"9@CQ;SND9%i%Zoq-O>V3M(0aRJaa#)5gOr\Pm]$1Duf[sQ&&895A_'fXEd$hF(^3"%U>EMCl]\G^Vb^S\=/T#.0BS/@BqH95mo->0s'3I5m?Q<%@<6rp&I.O/K8*,f[q/XS=gLAM@Lp'NS-!/<Zmc;fa]qJ/?;16MaLg%1:IX.AB,&mI?gk"H]Xej:@ePp@&o8!4aFmh67[]SQ[V7T[%pCS4JD<Cn]Nd\)@5%?)[]kR4W"2SQE&<4a!$,bA-.L+Y7K_hXQA=,G@9DVJ_.nn;(Jid`%J6lBMaC1tViT"<i?7TtHJmb2n$L!bA%pRL^B!8F!Yi!n$F1j!"))LHp(3sWt0S'/osoOPa4MDX"XkboR-TqJV9Ya?)4&BRO!9b<?#kp$^(ie`oPl/PQ\f"R,LI:EQT;,"6p%Hs3RAZ%2<Z&-DP(CpJ$DVR!muE;RbWUEL"V0P=:(nX[L,gNttdNNXOVP[):>O?>k=k[PO#h-&MS<JgW0bX[6<V<YN<I"1?2(?Vt`%FZgcV?^Ur7.tYkPO?^kC3'?,/.k(1?E-'d<0XZC"kD<]G>J]fGCdD&Ict"/;H/VU(M!&J>T:G4XXo%Gi$&"1j53'$OKWcV&U+Y+i%4]gP*p<KP6%Q5RNp;_!lLSCa(WS61X&XhulJQ(J@gPb<]m6]/1UVu]>J44S9jAm_,.k<M@9";3QKfNh!!24gegloW;pJ3jNn,_cu%F+lI`.5iZJdXVmM6.!5Wraa<D=94_sF%0LCg,H14<^1Ha9M?GG)?B/_j>7bd$LLN^`%Vrp)b3EHiL::pDmm2Ng9p`P7Q\7Xd-\5G%<L#=Fr;a/1_p$u(l.UKg9mkg;V>!Orb*,ls!!b^02GX/DADI?(R-66LYaXNdP=6"')HmTV*_'=8gL/k]PE=]:9F%Gj?K(sN*mWFJ%-m8<b&Yi5rR0GJK_6+6S'>B``-%Ro(5ZLb)-*$:HWe\]i[sir$+tC_e8=c;4]JASC:%2i_ZQ`S-FHZG:E:^$QU[:1.U0Iu\#AA;_%ghR6GJ9j5YkK]p*^$)fj@GRoZoqINWNK4J.5G5W?2LO>YNq8!2#kZ\BAdO)S'_!r&#K:)l:bZt>mt(p=2:2;[enJ>n8V+Sm_FYS[%-F<.'2Ycc-b_VQ3!Do]\C*Hgg+4BgjKE7g]O&.FEW$-PnCqMrG_E3"['GkGGV\d>k4AT@fnE-AMNHE$O_EZEsEg?;g]oF(hb"YlQ%;F4ck?HF84&)3=4G+PM@8;BaVP*e!e\dS233!5k@:<0'?X/?b.Y\On,*Vc<i^3s"<@tOLpLQo,_)E''Dq[Cl=NrgAP,)H<@O>so%%N)[lCW;1B=?UuIo?p[ce]LS[RQ*!ZO;L#LDo,BnMP<'FAnFc0?ECJf?],TT;Goo2KEfCQY,]c2(s0;&SGUVh;#Aqo?fifc)6<,?,%>4CgiNH[.V-ggt=X1`hr_C80,okRPT4a<V+&)eFIGAtQUX.$S-F\UZa73<lMoVp9VNLh*c_GZd-R+_kI=e$1Xa]+^AHgM&&<qK&)%Q=C[ee5l>lEUHd]aCeo3`UgE*Vf@tl$f,BWp']4X_<H`.$6Fi,B,.'JZo.D;"u#>,+0Ns)dtb+/&f.AN8'aE(OO.T^>r"@YNjPO9%;`EMENNi_A`Xa\VVTccSrg7Se<OW-aGBfX_(oVR39jrr"&#'-gYrn(IiNQu%7mFL=P;7IuMi+KYa!4kLGf;F`]%)L6Y*MrqR4qlV%i5aE$pSHEPOSCm+@r\ke^fUh)Vd08(ZT_)iG^.GU<6`M/0.K7Tgb3[Si3h&^Q.UuP(.&G.a)o\b-!VnP[Qto6gFnfB:g]@QFi)N6%U8&IB8V+t-o9oI<jKtOe&&_e!+p<-L6M/8nE&-]do^B,tN=19R_nKlQ^h(VAo^]j6Y;c_G1a+K.6D0DD-qg(n3Y@UNmlBKk9e<*h%<i3!+ogIF=#A[.9h,75n*L+]P,/^?reduAR.-*Y'Ua*6?[k#G/\W6A2KH#$aWoAoOG1ShQ3Xd6KKee*nrTLOkW9%srYUf2i-,IJS%\1P3Hcmb@AN2S@NQd!"/lQ?DQ%A>9rKio.Of98e35qgGCr.#D;Ku0hK/P)BC[G6l+1V!hJ&:#ZbS0+uk'QTm$N^U&m[;RbX</m20%T1I#@!1RRtM)?#DrCk;^"j.XTAeRG-NuZm[rE,&@jcs;u45%MH76(hfOYFGh^LP]m$nl/oO\^PDjFM_6_n9RgKe>\,,[>h9bX/KV%)UXs@MO0a*4++[c*G9mX%+kUT'S<>GJ.jW_HOY%hncS=tLfpPVNX&@A@,Q&J5jXcd[fpB1TSaI$4:n8TGNc!ce?1:(aL1_oAgLFu%B^IkW+[P;SeU^_+=p^p9!RQOD]m[TQ(7HKOUabmbomf@iLm;X@a.*L"eYUhm<DChHe!s%TNMBNWd#+4%83];>h32X(aTIt-:K6d'%emg6ESeiYTkXN3S\]qsV8[iA)Q[PliiQ-7/7KmZ`5],5HpBX[g!:5hrb,0^21^63L5qhsu-.DK&J$Kf7"+#$1SPjYf20^pIO!Xr7%+UjJWX=Im^a`quCC.Kh[dLg[I=fN#p>I'iM8qoR3p,Q5XcjVL>NXi+VB$40r9296tM(YrR@7q"c^Mf$W]5RiK;e(m.gB$6=q+oK]%$M=QKQ?HJ3FY0W2%P,e;^_Hc*(M-4&0qrhp28RfZCo=P#*o&!NI;#;;U*'h(Io[Tpi?IG1pd5Cq"4`<l!n2<*kac8"fRP]F!k,\G%!"-P-8ThLJ2XQFXRD/,aq3KPcNG:N7#;Q^sHFG`XP9B'^l-+_amXt5=Y*c22:;^/ae]Ilo8^D%3%Ms2TXlTo-"i]K]jgMuHra$n1%1Ybo2F`ju$KFRX'RB0F3V08%sR8J,OX_aK9VkALkA)%6=3/uPUbe4JtB@^NYAfm[;91[[?>I+/b/\m%_$@Lsu@6WZ@+<D!X?.cGE%L[;PN;\Pq$3LN!U9R=A_<ZFffgt`"@2[+N=c@_]^\h=5Ih1qp\\b@,^$A=J$E'4FJ/[q1KhB&[Q7hY(g"`C6)'(iIrMjC%.%FYLQ%E)<8jF.i\#(*GjS4L,$&ZZT+=36!TX-m=-/%VOKMC03*]\s,u;0-GQUrQ05sDs[lGSh@pd`&0k(n/Q?$U=L.X7Y>R*%kCsI35Ysn%_8_BZCmg2h0BpakdgG(mjh("7ncZf0"*9;,60!U.\K.3a@:c7LaVnE1.)*o+*$V-b,JP-n^+4f18ZEBM%K^`s1*'lS,,gQMGKH0=%rsdOq=6R@e92SPV)*'.!R8>[/Luj/"[Y%4P"h!k@?6#n$+PnG?'$<hVF7%.[H40'0$k.n]?g#\Ceoug3D'"^"#qA7=-MU/6G52ii%7:dfbdpl09)]F2VpCT3uAngB3a(I#T8*?N6itih?@48?JWm6PiW1FXXP(im07TkM>j\"(YA.+(pV]KWZKa;0AWD'cT^eKR7_oWYu%fK`r8Cn^I/,Jt9X@BhETDqmZuel`mI[Y:r9PO;2S0S#Bd1HX8VYl;9Hit_t[7^Di,$PsWUGM9GZ6(2]C>UjKl"tCf)5b]nr]Oi;D%6?tq"!P%;Y$Qr,,AQ&a=F,'obDak%1@BpH2$Nb"9JNC<t':/Gna/%E"\WI.ep/PNtk:'h*:`D\(%N4I<Ok@o91OlZL1a,*addO)^%(:7ZbR>0B@7"H^E/j^_tbq1Gg)Ncm[I3]affc_U^8/.HF7cJr\^&jA,K=2>0.mRi_&k3QIH't<F#_E-nfG*XDmg'0,&aDO;OE4BO%6&D,&JuHm-:p7S:6L[7@3]s\lA?Fn>,is1F$G^*qFMXo!RXh1]Sd'kV:YJg[D7dnt(#gZ"J!4dXONd`8DP0V0Rp1GoW+26"W;m<3%'ZM/EZA'E>j1[)hlMa"aQGV&35R4&V"css!0EQgEn;N%T>4.9NSQ6AY8-n59!8:MC<C36l(Y"(Y3nakFYG1=g1d5n!NGelG?H95Z%+EVJ,)r"*<cph5E/%6>Bh*$VmA.'a"2JGSIGA1q&6mh:A'tBGZ@%:u"CBr1C']O5A$#&+G$*[-M(i<O3nC?b=%'uG1)qWG+>?pJ2%MBll)HX`?J(5;V^!l+#nd;)QnTM<BpO.ctWR5hEe6Aj&5OC@Hk*7^dV,4b:YpI&nM>qU`:B5h2[!^oclO:9tb&7IDdJjS#^,^.'M%P;JI56'sVtFMU@H[GBlVVC#U]9Z,-eaV:CgL!+)*3N@191Nn^4nOBJ@:C?)0K5e^3en6/SY.:\"#E\!O+CD+rQ"_p@$$lp\=/#_\%kG53G'iH:@0d9_j/RXr_<HiA1PSkBK<#9q2'E6ij&JGT;%Rl,L@`(iH*X_6ZLabU=bY>QniE0ap09'rO\3RTO5bL`&"-A!TGCXl2%Q&nC^]KWHG,$%$=)/[Ls4>IJZpYHjF#M>MkLg:Z2jF,Hj-B_NLk;u2:?H@]LI?GWd_#^dGQ%gKC6.LM5j%T2Pj=W?S=0q*\R7mU5%q9U'/Nd"R<5]Fgh9GK[Q5c6h]V/V$_%,2X7=0Y_nK;oqVGXR.(Zu`@7(U,TWKe6:,.KF!G"l2jcG-GR4m*ct^3#OSc#e089&5DG3%aQLA".S"P&`",M"@C@q)4W'NCCE%50.jV6G_S=!8I)=cd,!qt&Q5pZ&&]%GHO!qrD$9oWQbW=ONhR2Di\<4>K:P#eB+VUKEVc/\P%UHEYpFBIi`f1LFF="g\l(_(4)]^'qHf5QNimlA@e`7'B1#=1fQeU6e2.&*-kUsn*=2@Xas15J>hDl1TF`'kFJ+t9V0]\XB[<qODT%@$$3NWkIAdf181-NG"L%j13QLqMIRi#\+6-=[R)#<RBt3(i+Hu6&`g%b$QGqVkDu7h4U(\HMYq.HHPpbkK%k"pOJSdp_S)=;ik=l%RKjn8=8*29C3V?G_@GX6>*`tG%%AuC-8lc8$PD`nlCJ>M?OpCl%]Rg#V0?[.e=NXYMidH=$3G`uk"u0/1[YM)fehl)E!EZ]4/OL$%jHc@jaF*.^V8iks?H!uiOiAaCD.Ei6G'LAbT+bJHS:4I_0h1pbW!4d)l:M,s5\I9D/rj!i[1=$I;6pF%Ogq8t;L"(fPUDoe"J4"$%'*AT*!*69H*s>FCLos$X&A'^eK88/0/+<-o6!"8uWN*buN];)O_\JsD/+MK&*>AfGKiT*<n7#5AC':tA%`<)p$Nu;1(=%MWfoj(O%e<`04K0!1l.Hp#CLt<8;'Nk0+h,`U@a=n8q1#DT=nPkJ/mtM(`_>?MaqXShWmJmsTok<e4J]ZQ4:e]5Tl;\:``K-Z^_==IST:.Qg%,"1mZS'1<L+FQnbCWqm88b/=793^2cdQr;aE>]m,3(D:pSVPoo(Q%82A\*0%BY;0Yk=dI_9BsCqSfPb(`Zn+<0GX>=_MgaI@4LiA%[71Ei$3Q3,BXej#OhN"(BD4u=5Q:YSo'!js^iu-68:!39(be^90.7C$cU.foqQ","pNCb"dg\]@Hu=jtCI>=CiUm;/Aism:61baS%)Z0RH[=$]9+tAa@+$g-?T:d8D5]Cc'[Sn@s"F9-/3+]=h!+EjBU):]$1&_/<a.n>"bOrbG%*TJt#D]4=TPWtm!(/6e[E98h*?B]Q%EloEqLfX5XLnr`K0P,?fnVF'!'eGP9Ct`u`QQ1[);JrZd8aZ<so.0s3@[=S@)7>&h,14ff(>qc2^H+ML"3ouRgjjb$`i*orljRZ\%VhPUTlL=!\Q`-T"8^0-!A^c:gqY8=#S%Nc+5$Z4,Gjf0#RYhdcrL!%CfK'id-id8F3Bsg,g0eJK6EV8Q/3.Y]^'d%mr'^<T)M0q`%D,p@CMF+=tac,X"8;2[GBrR7b(c+?L:aG(d#&bP2T6"bgBR;2D!?!s<MjMmq.'Y5Jq-:Lq9nYj966?"FcThX\.)Mrb=.l-X"CI"0%'d5kk1juoDCej8n8.ZjfkgGXap].=K)B_PP!o+%mCPgFg_C>hcj3qhthVn6Kpe`]aA4n;V[K/'t$g<t,83g_$-IW8q[lU('1r4:>%4E=&Lp7T[a[L2c`S"ugKW]8d$OL<oBc;<tWZW.]-%e@c_Y3G1<bR.6j!Dg!39o#D@;ugsY!;Sh5@("XP=#Y+;+:o\R>IJh0e+YsP%VmM>5H_B&'%N+/VJMjLl#nV(\TLa?S!9j]2<H2efBCV58dAA%8Fams0/8@1BEI]A=jS>J0"]-OKQl&D6CrK1%-U_5Lm@&XNe70&\%Di#b;A$\!sO/eo]5cN5_:Hg6`CTk6G1e[(Tj,+2G9/_$e[_G1oBJ-6I'M0@kbfjc5BaYQ%g0CHkL^;t"q%6iLDYkZ;B"$>HA2b_:%;4PQK-4M]]"+pQ;7TX8H_8p,0lA/OVm3.qA4h4#MKhN\DI(MQ/rD;nRAmnYo`PnE)[6a!2fhH,M.Y`.6VBMdj&!OT7,LAY*WgXbm%ru]F6'MWMLmSAPYOU!"\4IpbDZaVm&W!6_.(:Ukc'.-QX,$\!b(1H(i%k'X^;bILLDZ1_07QS!E#C(jZ#=:STG7u&uBSDrg#*DF+%]>2M2#i1u&qP="n2sJ'c2YR,hA5cO<-(K`]MmV*bm>LE[A/qCKe)2+IQOQ\nhAM9/d0LFaQg$8k^ts)&qOA7qmXi+2732%T*5-5]%L-njW1Km?b$]r"=kYfp[#8$TL2Ra:fGOp+L^(@Q#<0<SoW^>ZqcG\9G068lsmXIk#fRXTgA0u.uA3?HFaQ#N6*$rSC4]<Gr==@-8%;<]p'W<=R0@J3MC=f!CD.,nDG?'/WeE%Q#^7>?a,QIep8,W%h_Yn>90U&XTg/P^*'r:S^lO(\Oao%)5b5_&(<B,o1KY#J,T1q+Qb%;uDE@VJu+2q!!b(]&Z&0kr\uVL1S52YJ,=RZCYR<IDlan3uO]^Wr.rlW!q1Ffrs&?e(lF`kHjETE-MhtKp8Q(Nm\HLe3GbIN>(i@%,8Cc^Z2%UT-p(MmDNAS)"lgVEN#rn?U0WXG[AG@s$kB]Rb`9KnUVbsEDB7G4.N''$#F?Uo,#7LP$_=h"k(-/;"n\f!DZhS)[SZbt%JY!cEN9o0Y1>&ub*h>6)V[`bOR:H4]ru-1XPMS=^h$tQ-(?<$X=^nGRlQiCg3q]^uk+8T;.dI$!HfHrhr8^6S%;*daohW+20$m[r%&526V&o'R*e7Tkr/^$oW")#8Wfo,`;Y_?@fh!%02Z9MnWTGW]8+o9nq1LYIEZBmp#SV7klkrZ9A?Ko94^S*876)/S.$ZQ*!:*Z_a%FuZrS?$^%;Wu`CZ6!,sOMk)).$W#B*5#TT+D3EcFE]I,,5X8FOJF!.W5SFu4k8K,p$3^26`kh=$G0tu5:ApeH'.O;EJcSrQA7?&o%Zp)^?+bc(kR@L$=<C=Ea$q1^GUuP$d8ql\\ppFH!Z9S<gZ\n7d)TlTrHN\ZHLWQ9`,O9rR/fdt>QR5on@rP'j23*$oVm+l5SGAun%n3U-V6C@MA184(<2#@:G>"[qCh4`r>D&JFaPApWSQXC?:V]X4DrnX:#pU@'r6IJFC`Z.>cQkVP0=S)\_?3P!KWo6ZJ1diZ&6nA2W%J-ic)As:W$Q)HltSBYir<\X1JP6TBC_DIWG1R(k^>Rl1lC9DnC)UXKP.@Cf?^npEgLkR1SpcgU109k'6TNUkt!FZ(A'Ugkk-1QOe%Qi\'U5n(9;[6eP_c+-0>&;(E'g!s>41=5a@(&O.Dms6uYXqOCR8Ar1H;o\8K5X]N5JdS7$p]s8dd'JOs0e,+:U3_1^1k[A5<75P<%3qCKO?m3nI*%b<SK/"4/HBhelngc)U1kRj^c8#$Y#K%b3OLe^$2FOCikLd]8/9jff!?29Wbn)p+-ZPrc?j81UAt^!WZ:;t?qY!tW%h&ZtHSEfV.n1;IVSRnhd/DVOd"\44h^k,O,@fd5RicAlPZY>0E^D\e\ScKOeZ[&Ft=8*6Pa>BR:W,O@QBL*4u>A6(;pf/^de_(QI%/NoIg,TBP%\)?nGU8WdJE;u(FE>kW\jRT5#IE%kYcr\JM1*\5>*V?%i=dbu$c5dh+_W4D5nR;EFl4P`eS5$!2@,2M)X^^YELg#T\%LeOYAg1\_3!f[1e=WfTNOu"%gY?'S_$(D+qO`rT8*Z*e>2"`KLKNlg@^/sZ/bSWLNEn,\$'G$qqe,Ue@(`J+2\PTi4amf\\ROX6B%lE$]4+<>jf>/OHUdfV.FerFpJI8r\VbENq]]%4JH#4&;O'nWic,NAVn.db^%-No.3n%bujb`>9B+NbMI_.PW$oW=tu^SC<>BPGlg%85IikL([L-a`PZINNa2.`6kJ7UZIfYL`/\_R'80q^0Op@'oKD0K/*j4PqB#/"?"7p!Rn"LL>eq6B^o+sR`Lu%C-MoIH+i67g@2lX%X5:';kM@UaBJHe0?1"NaX7)M)_<\R-GKT(TN8Fi9RY*@i'8(T+*>Qc]<*aV%DG13;AC@Is*b',thRVp!>RP:6L74k.5q&_/BYZ'0%h'"nIZofT&[ZG-0<L)be8QS8X;)P,n>]HB-WebBqXED2oF,EH>+[h>.9_!.:I0`"klA6aPd20Nl+Y#!mVar+1"_E%OqIEm<j\8`D%CWg-dB\Z"uSnd_Mlpae_'919G9ep@=(aMR1"%>4.+&FgRcTSW<=nM4Q*c!j+G16s:@3:pL-q/S#d^\G&e-pA&@u;&\#stLD0lRch%H]>2("UH`joM%bMVeMaE:\^YM+f[eX>tKl4i^>2+!)tda&^2*\*AloaRmF#UU'iaZ>-`]9S<9IN]3;m!!ZBZ%O?%TJ2oGTNZoBP2%C/f@mpe<At]0MHDHl$WJFeM2Q6*Jm!,,C#I7kc2lemt&CBEhjd/5nRL#m<Zp0Ple!iZ,YOL7UrJ=I<h4+M*f"I8e1X?G0f\\nS#:%`C-7e[HqRKs/>X+k_?s@^L_XTY/M/#&2c[(9VTZJ+^!1`okF&Z-`c30n7uuH*iiE@5VhdW2%OHC>\^?jX,75YBX/b$>ZEZUct')>%X>:8-LuJeE`DE\7YDnH:ocXN<4VHZ,U//!BCq[.3qSk<_*a+ZC0Y4!8M2bWB/4$\B^&bUe["Xt0B5E?F5H-Sg.1Js!(<033I]$Y(%p6Ls_XIb12,=j8aJsf,4(o(WCQ7lFk8;""/$iig3(E%sDc1DL_,<[<!U_r9qdhPp+hEkDo!E-Y#&#hKg5.7@(6_G[)lkq#bBk3"$%7obk"e*3'kp6n)EBn?h,d$V1m_97'g@YM:u0[67b/khIAU_k]Q8S]pO8M+Z3E)rt@^ZT&fK;+;:%/#Qu,jXQkUrZ8f`JYNh`t*FS%A1nC5$sG>m[`ja;FjW<;`-glV]A-e/6"CSE)Ho,/HHGDebkm4WiQ>@uR&@i,<jU`U-dAT_N-t'u%]iaTF4V,&W1fTQ0hf_Nbmd@.%jW?7eMQn=r/pjG>@o\0'RHTmjZaWmeJ9G47(n<-Y;,"l%ZE,n(3"bMB-:_RZobCP7T!'eTI;?rpo7SE9om6m\V]i]9Fi@[4jl-:K%Fr)_NYR1e9mlFo-MWM:'7PFQX8u!Mh`?_WR&dkEQ=J2g=Xs'G&^3I&<[M-e`mD'T@$E$tM5lseO1HK;@,Aic)D'Do"%Q@1-A%XB&%[*PhF4u=.qg7^!&CIU^ITTX@0e^SRA5`MigT;rKHB3EFZd`2jLh<F4*P.2COJj.dsEd^uo:h'-X6]ML_[2L>Q_6T06k&LI4O3,C^%BF7E92=Z79ghJb;W(Y^l%jJ*]1r7k&ne.adDkJ9@%8RPGBK]Y=VquVI\of1Z3KS#b,MqR]e()CR"Hn&So\;#Z[h)c>Bkc!86(33h%AWKDEkQeD!MiPNt&/SL/9Q*12R4=`9a`V]e"Jd!/YBh&&']bI,S^nh0S/:6JI:ji9n\sI9YaUesB2P96b*9^X`JPd_PF;%W=aGKN%f-T=^Nl?,FF,@O1I7_]J8O\1u"^5ge943sb7#*N&b[<d_F#9_OqMg$ScuP+RMaI*V'!eGYJZ?@K]0s&j(.ZON`DE\%>V0SoNM4BS%i(X:8Q)?PGQ1,20-A=d]e@1KBJi<ah10(IS%LUs"+%C.l+EJNk_=f9d)dsi#p8Xa,I'd#@7HPW%`[F0";[uON,*KphlrfciIW#t>%0X[q+V=;lU0t"tN'?DqBfGjZ7;0<)PlKgBihr;qCKZ*&>dmS7q5]^O?!di067[@AU*LYtjrFj$TBlY&0jISko:c5*rE_J\"s4E@c%hheRGT_8pVe^:dZ<'0d&p`L-)4<4Ul*6mr]&&eZTq!rFZ&]``Sdg@QXku^j&A80;d6'-q8!,>I81mV,F?h!?o2+/Uj-AX%%;9rmg%FZTS'@L.fb1MC:u1rV5@GPfBpgR8H0=s*lEj2CHH^7*cQj#[=!Op.@);3I!s=#HTs9_9mVV(#<JqSB1Xd]"YLWJ/-]J4gkMffj!-%UeQ!jX'4SK4<^O@@EBX6`\\iBo/Dk.\n]qsPncl\]BU:cq[%(N]mCu^/CV__R(',oR,I.M#6qNZ%Vk9tZp_KpC0X?WkX]Z4V:"ZM%@VK!V(%_LVn8ISq6fZ6FPo!inCsR:=%o$D0PEC+_Zt@nShIH_p6j';C&fcRGXfJ<h+cr"$Wj.bm!?F%P=@lC((sA1&&KW6EN:FBI%MU3TJ?RZtQb@)]\_8t?hg?OD%/X^q-R52t8Z,!$b)nQnJgFu08eG5;0iAc@qB/hi)c%Y:9Lu.!/#iUn"[;TZ;,_C\4[Y>4Cct89p%B8.c!b:H(3gLrWCpd_r2;N%<EFpU)iqb*!t^Y;HgC`,m`3c[Nc-.;FMleoj`ksKd.G,hE-ULt0-V/&H\-e6HbYF956'n&qPD^#cZ%ZHp#4bVVSdLh5g).[!22"_r!lF[M;gSsa>2dIF$O'bARC.l7ZYB17@i#d)ua7i!u-Nmg@tH_8HjMLSje8<#GC<m*n!lLN9&3@&VV%pj(6(jr&Hm@Qj5+Zkt)2b]Q8T2Nus'-D+bKHrjQfH<If@G%ELi&c@DV-DQ0[L!KU2FDD)B=r"AB?\Hu_P:c!r_duq1>+1*;h,N-k%<5cLKH,\u,di,3gGS+0Zl%!4M3h!3J""R8`2Jc#q8H0BB6Eb!H6E1'aa^^6K#Rt;gUS]4RgEG*,-'iPX"r]\KXof63i0jqQUER(A%f3Ag'B*Xf,Lie*pQK.7b&JnNmPd`f`a'jEA#2hK4SpKjSZ91N*1*1D?$S3aWca>7IZoeiK5grGp!8E`n_8_`LhjeT#0XXKaEE0ni%$O`LP^l=f2<:`<s;UAAKbW[dKQ+UiUJPs]&8!u,NHL%M`:"?W"nO5m7!9O8,9X>]Q-<W-lEF=TU"_VL.Tr\YhO?C_;iM\=E5I1#O%eLNmH6Y<0jFfQl`cNNBVdJ.4/c1G$b^4"&7`4WAQR*Uj"Y%p<L%.IenF\mu-)IpcB\qF)\2XQp;+XGORnCt&.Y/tTt>GDP/Ho=(7%6UlZ%*n[!B.qFKGV3:-!0m=+_:/"UJ(+j)bE.t";?63\#)A&S31Rc'Mq=NNGc_)&6hO.k+j+S)R#IIG\00rR,p!_<of$;bJ\C?Qa%T+-'PQB5uWeq[d,(rnm8e&/uGJleD$9OL+'c,hLTfYE*jYZQ<n%FU4cCd>Vg[ifWdhS+7N!hcPd(_Xns0TanSC::%,[UB75&:j+l%Mj6V!=/JIK*iYrdnf&LKMQN\1JFYAC#>[7*iF"2j=9MbYj=B!pldYWKR[tgp6L6Qo>)QO?/HsV]^nEJ568%660d6%2a]rMj"u'0E%A_,A\#+Tp6;:U95=<am;`+jq@HYts21J8L(kLO6>bB.Hm+/VKrPkC@:\SHHm!Mk3$@@E5d6A`C(#h=$s?HA"dqrU5fCj(=5QE`s"%HPLs6*YVjaM&6Ka;"bmGOsMM+<f@Rr6SrZg$82"VM_074*:Q-J/8?4b!*-p=kT_0d@8oAiS"b>9=<_YX2QCDP;d#9OHe"8g#\EJa%/9)STf%L[AD_j;iOp*q5q4[Wg^;oT=C*n`2*u.dA*7ZU^<0^.\)fh--m#2a"@J14W%T0`4_7=b.!G1^j<?4i>GQ8:HF)W_%WdatI%(6N-l/^71K&q5\E"[O&Gl2=QH+S=Jp_ntW96R+?6!opLNnDN!jJqPSRFc<anYF37M3)mSH_o&*MA#eW7TTGdD'?^q%.r5/D[5$s,%bZm*70p[h@6&:c'9?3YT;a2MjApBfPn;oE0QDjp;;$8P]`!&b0Q>Go[k'qsCMSqp&/ggj+66d1mD*W-P$a[T8)jo0#"s.o[maMdD%.HhP4RHifh[Y*8RkSZLC+B^Acib[:[0:p:VPpN?;\+GoOTYm<2+jL.Hh-#brMgKg6"/iAJ??\SPZAU\]7n[/V<KC^l(l-7(oG8E@%DomRUQC[SQZiA8Je3tmpe![j'!4Bn*AS#R@f%`eWcXb^c0m?@O$lJ:4cSXFoar/$n3-qnO=lpgYNE&=NV$JTD3\#o[3J\B/eYZ6l%=P1tX=2DUSiWA#<pTO+hWpp5A1)AAM-&$=QB&0GJW/@RcZ47.,Dmef%Bi&GF!)9SICu!l.-Vl>QjD59;]eodtg+kN4!2!l1+(/-d%XsUh*1Y'N#emFd(ZAH%rW5a6>LB'&jmW,>k[?rAR,)'hOB3J-Q(0fAPd2)ltOLbbXblFe,CN>R"IW7_1dqio@KLL+KRMa7pGBN+d%/[7di$0*j^[9bsiQA2aHa^"hVA0rTf2>\J'mBi"mXYV2lW=q$,2pIbHeT<gH*f1KmIgcQiF^KYAbu04g("M=?1cDI<JIVeA3'g]s%>@^jXK\25V0"s?dNU=BDVu]G[1Q`W]e+>p[]XVc`KB=0<b^kZiql+`>m@g.mn`FB_O;/4)`e)eaPuWqb_,?Z#M^D[uW8m;ebH:nY%1FfY(C6"D<1d]K$GOG`^Y1_o&\ddKb!!GMViXIa);kO;]-LINg=m6U@k9S$D-R))?Sa(^L]b=D0M^1ra`.L'%Z@Q8cpXDPAf:G_n%?@Z6-rI?%][CEah1UL=0Du0$>%ULjP.Nd+8&S\2'/0-mID@<910I\m-BF;U;d0qctlsO&b]2#,6dZ>c^1LjF!`JrM&.1aulc!]L2%mfWn^jr"N(pS?b__5sLI;"J<;]0\U2:Hni.]PFs(/VaZDI8dXV("nOof%LNhrK9]<0i:W(WZHWijlWqkbjkRV$e5Cb:ee5[^&^&/%;t`^gNTPi-7MC?D;LWcaXjmK@MYcfI.+hZG"'-hqRJD\=njblCYMmo$P:M/nBHG*kh.ki;.=tX!%-=41?5%d>0lqbWQAJuuL^A)r%6(Cod/?hF27pc`cs$q!S:>=kS3pcmkM160og!j%.'^C:&Pn]d#nSYSE$&faBR0n6+]*pUkKub^m,-e@ALb'6pqD]NcViE3VXeJ9C%SRNEC#GW7aeD3g/4dgI2kR%/<*)mCmbkE$2QbY?'IiD/X_H/$_%\jsD<6gr[2BeP/2<*:EoHl\VPaglqjJDpXUH;[OW'6fS<#f>P%poZWX_8?TnkR^Z^1NQS)k+=.9[tZoA6WCOXKL_'D5"p?S3(q14+7.oJ[L+rjcg1uCJ40W[J+?8T'3='R#;:u<;_FlU#*:PLK4G\-%LNJ_t/?'hhFVqUhg8ARV[XT2[r*SJ.HmV]j1H>%-QSSe2(:6S.%_U%!S2mAKZ7E]q)<fY&_af5`@6KakA4Jt')X,.4idbpp%BL3m%]aj(3o2*]S^+@/]bI.Op(g`X6h&3^&3("in/H>qu5$]6EQ^jo)VZXRc)%!]^;,%_J-Cuis:esibkB]b[an6EN*oN<6l+m5N&TOjP%*Pok>UE)j\S,us\k[6-P_W/l`&D2*@1F,d7/IO@`%ibspUXkPr2lI2fl['ek(B2QH<sYQtoiQg/$^E)IPQc2*_A!17P9'A[nECAd%L&WG;e$)VMMOsVR">QR=<U@o5;ipE8r&*IWS1XpT9:b#"iTi,f7?XqZ*e>2+YXp6B`PA+uX.*]fhJ_I+>Dke*R``>f7ig8=^u2p3%8>]TH+@uh>+:54!KG<S3:ZRM*[6e=o6<ME_,7/B%!mqJXEl!9.m;P,$lI[+m+@WK6S:h$1>(YP1&<0g^dqo2A<,[FDgG>$_$CrCE%MCANL$R7".;mTje$LL/QNh\%W_&H-b7,F&9V4X[R':]O+#ZAm+e>sG&Z<%!:%=jJh!YSG'JOb7r$3JHQKDj(fJ9XGO:(qp_?PQ\A%juUO,_"*WjU4p=dK#D3DM.ob5**5R"l6eXo!&]4hrBe^E>uS86Jkh.oh)jHCMM*L1B\ar*1Xg"M((D.SHR"&pJVZ'*KFu)l0,%k-%(lRd@-khJaf8jS[HBer:a9S,sJ]n4R_U/?0N^kp4GfTNE>_!Xj>Re-[V\'?%Q+L,WTNK]Ogtk_#n"M_d`4.kn;6:NQNb*1&[<uP9%"O.7J;DS<1((<cCC]h,+I\^`f0<rh`9Csl=]%>Cf7pl%tC,^fRTi]g(BaI;5:(k646<K_ra7NOhDVqT!X`M/kUXi(*DE_iH<ha/o%f$:4WZJJGQ64hZ8&HH!PFkWB!"M31c_Q9KqQ7\R_dr8l["F*W0F%I%@TV!.GYa=YEL=+Nd)Y&"l\oh22ClL_4dMf0]%>;dOd0DB\%7l[9)EHL,V,3(0<j=h+:pm=/I#h-E0$CLB._7>d=@S9HW7)(+O]gaKS*$VA,SDY-LoU^Y`ctp8u;cm)f7tRqL0j5UaNjpk`8(f#p%8&:o-``AXr*uYA&+ndqg)dlG4A;ha5#hM'6iHl"8bd'eLNQ-7QJJM:Ak;K=1,0m<9KXIerdl2$Y=Bgf_T20Nd(;X=:De#i.<?ik9%NKA/-,HT.4(hm*un@cr<LKP(g`gO;u(=kE9;Cu7sPUpk$`^mnr7n]=J#'6(GNs5g)@=]9VkYgH^O2`qFR0k`>igj#c!r4NN1,faE%\Vo#E0j;4*SQ0617Ol(eW^B?D,JaD#%%'<^5fC4>%7PMR$"R)cV%4lDoS!+"Z9#g(U1dlg0rQ*q@8>jB9H=:mepG>6"q0O5Aft68%(*C$8(_*D3O0Y$]7^>@JL3#gVP8LS2?WhWW?k171_YID%3kX%W=k-?e$EoW01jL\OPjgHfal3[eh<FaqR/J8(,q>;i;$8J*G4:$?%W%k"LL,s3"<7AWebN_G4-!C9UYkd;sL*L2[.m3$5Zr30=.cj1nSs\#D"/`@k'h#_1aAMkRiQXZ3;6^k1B9f$*bk`6jL`qiX8S43)%?.:k'L<\'?c[XT6#J;]7$._B/P6kt2TmJ/I/,*4>A?BKhM^'7hq!A:=V[T=rp<X.l\bJK%,7P4_)L=7H8utj"!S(&X$K5iHSVF=*%a?Ip.p7uasX#BEdV"qE\Y(f43E*R8_%!+fW;2Y@j3Y7PVE].&OU?jsTe]((@Grs#c)IQZ^!t=drCF"l[D%5l*PD-kj9LE8nUGh.@%SG>$:#jFRkk0[10Ie+!AK>eBEZ6g$F(iM(J".(3r4U-F&U4H<4oe#m;5RgmuQu*g6Z<S@i!@c;=P<iu>V#L"SJlq)2Z"cGC&=>8I%Tj#Tsp(Fq`"/K*4L/0e;U"PT3U\OmWOXi)AVZ9#K#t`JY`:uaeE%d_GrlmRT!0@rd/:nQ%TI<CiPTp;hDmhP0n0h-8"L-'E*JU9k%$`-0!$CZs6m(q55)gQ,'5q-efkQHr*Zt$rBPY>N95QL9_njnlDE<O+AfEaGH`E\CtbTJ3_0hf_d;UY[J0p/*p[IeZPnR?G2S/'Bo%jQXVchSiLYGK;9.<[Mb5#C\L+3"=pA(>goq\[P]>am=?)!Q*93VKPKYeH:L!e5LmW.I*fp3JEt[\2g^-F`!5(e8n3ARnnnDY'n_)%Ae)J;.+cUm'4mBlDB@O%job,aYU[>sV1>%cV;kr)k*VqN:T25gqj,q/;e9d&]Y-'@E"?"^HdG;?V?=%gDZRn)5^\8d#N?>CRhc1t%rVp.h>l1K&0r=64rR:lXNlG3\.dn`9:-_?qZ.L/QKc&MXbZ@d<=f\nSbIf@)_17pFJ:J\o%#m]`0[mcD<-7gSAT8JHc$:dsVqAYN%G[3\O3]ZNUK[I[S0q0s>bU!ZdS:&@TQW]Ci$"Q?g_(U>YQ\L98i"P2(CJfa1[I74XYFj`_ZsZ5.kHfI`e23/3n!PteC0*:O6fd]%%cJe0/@`hAJN6Kr$I7I!q`jd*9.=c#9,F03KKHTae=&$(t_qYlm4s01)Q%(2#7K<V)VVBIl,![&k>&&>>;Um6R>DY5GMHS$VNftAI%/G.FjP7ACU/X.#.r!m#+B$kXB"oM)+f,1(SF#!)CU$b1RX=DH+VEN1qKK'U?b`+$h&2\YH!f+GOl8;'?6(%`YR#.hhObP_YgBk#^%`<'X(7%=:bf"/VbE]'dM")8<?HWDt@Np!',8WYS3&J9j#3Ss<GK'(`rA@#bi6s*TRg"1"SjB`3@K%bF7F:7V:-7P5r(*/;;`hT(/%C8%2'HR79i2Uel'X=XX1"^$(2eHGos>2jY'/0>:SKoc@8R;A/sc/4*u$*[/M\gV;+A8!kd\EP$W'nEKGN/(1cM=MKK1Vc!"@_(Q5%`'Xe1)jM3<fLOKLd1]mI'76jJ2sH4LB?1pO=@Sr,N<fR$\n5,[4ah^_QN@LT)Vhs`Dh5'k`MgIN6:&rQ.Z;iQT`YUNBH]HJA-CU3%PWdt_&r?"!O5Q\aX6Wd4?l.IGGT,jQ_8X:sMh1D%SKST-`cb%-('=5n\OO!X$F3ARPZb"iCB\E/eXA49c'D'IU"1^$IRr`5,B6%>%1(@WDZ<b.E@%4Bf`IR[l+4^;2oPoHkKU"0QUcH,P&-FMIK?-LNZtcs_hQL(?!KZ@na!?(]S8bu56gW(`LWUEfL/`65B9$[U>d]Nb%<?k*gWL61?8[BPU.-)pm"$l"'KmD)*J3.@t+N.O!:_T[8lqX8k::6GmqW!YIBP8G^K4f^J.5_O!?8Eh*,tbG**m$MH%K@^hm'NM'%i^,k5PS#bBe&k#8W[e`:fg/km9`Zs7+KGrb]M7-I,\Kqg2;(;^6-J[RC`t@pUonP>@Jsc%c?':aYhTZI%`1M%;h5B>#dd7rqo8cC%/ku'N%Yr841@F&:1B46MU\oiWC5OY!UFPUbG>Zi.cp<[lo"_$$:HOd75Y7]:`jZN/@QJCRZ<PuS$WU!&.i'>S&PiP'eD=Mj(+=fW%VD2]nF0A2PA;I2LB,%^`(I2!dD5*a;FMG<sYpGE%IF.kQe,bu_6Hgd//#!X/La%@`$b7U1H_!f=fHX3R[1mjZN<I?t.mh(q,WjA"%3[2-h!R7Q-A#Z1o4,,)h\5Bc,dr]>YA]J^)rgB&9k`I"m-5F[_PNa=0Usi0+EL?mp'n_7s5Ue4cA^al6V^5t<Z*ki$Q'N5jp[URd%'l*CqR'GqBJHU,;H?,uUI?_,$`Z4KpOHW;^nrS0`^-Jg1aPq_Q.">2[;9On-EK%a+"hm?[UZO[-UA9D2[8UE4jrA2'+Co)KRO/K,%Da4q;]nKk)@j-!#n12N;W)E[uQ`0n(a]K2%C5D"R`_$@R9YCR%e8,T:i6\W$Y;b;:J8DOV=Q\u+%g.U0njUbf"^q#>*7-GUq;@Qb%$PJ=fOi*cqebH16=ecNHeO@8HV-ju'.FA3:&3.LrBQO?6-#7`\<Bmo`aNd8p/K(CB>/CjI!Vpn[#k^@l<XoSlac6'#9*7;ciJ.n4%Pm_c[fJb5CL@0SCcj`IpJMQteE1j?V>J`=R/ueSJ@e-a6Hd\>0Wm)f(p*-LWqVL4LkY\F-#0kPr[2b*+jeu#dKKM6?qpV(Ya0%Qg%=8M//ON>3s+e(tkJ8\$Ndj9ul`<P^a_Rh>NiZm_:OPSH3iQ5ebf1F((*pMZX<Cn9LW@B?IcMA;?e@Hh+<82GKR:*q_m<IFU_oFP0%a&U%1";hp"%]\c_!/nPp!,8SheC:3HQn?O1JERn'2csjLXlqXV[1+tofdF1?"%)V.WVstYW'^%Vh_=l'JT)rT.1L@C`q^-t/Z_lN%W3AW'OF.VO!%"ghP.dV(2+&$.h6T,7'QT@NC:\LfJdb>&@&]SD$nhL@C1!)LQtE&@qBEH5ReCn)RDq(jWp/4I4D:Ms\.(?IkU6++%VQe.aUm%Jp=!M1#o#V*Q-\nZ1m3_G6_%p(N-;8*SI@+79"D6,:mrkA'I99EC>!d4HmDp9af7.H<!hk(;D6+%S=S`/4ZQ2LR<]#8E%ZLW!E6bCJ,D6/FKCARFLk!Gg1SZ+?`$TS6r>D+3i>-6Y!)@ZZ<8"JF*.&31EG\e*G7FsNI">nuU$*[\Y,[[9XE4fkJDiXRSfiQAP%Kq-B%NOH>l2;LsB%+ChU5$T_23W`EH;,fq+3VBNBqZ'N8JkgX?DHp?aD/KaVe\bT&I%Lpd5t?*:q!%jb/Z9T<dFui^JW@1K<c5_n%WG5Wk!ObQY\i6d.+HOtl(s(pnDF/0o?un`HmD']=eiD%gAR3t/;/SHL--FeT8sF1sKpD),b'du<)`Rqf/ki*MWm.5&FtGk#7A`(+%*'28`<@]Z\0J:@Zci%FmIC*<i-Z!/g&*bHuR%SVR5'i[X;Y6*oM9^gNA3t'L:Q#UV!`9ViFtI3D!B73_c!=NpX)o?nQti/nQ[nM&%lWr$t4Io&P+e-,29kPWKLQ@`N5D,hC<u[Y)]-I+Y=Z)"I?:.Q&Wc.u:IM8C@b2DL6krT-7O6Yq/3m7Cl("i.<r1Fdo*1R'(#h8Gd%qPM7To)f0U)SHW46;fZS:pg--!;<h!O+h*;FXA.C5uU(`eQUIUC]&]0ZpV("1\&('%%1r-Tqc<N(tIM>B,Ho7<ABQc23,g53LD1G%\nqn&kOBZ68F6hS\o2CDj<S6VFPoT3(6p\'Fgc*9IpFbuDmq\[h0*Ec="Nlb5d=+Me'qnt3d`)2F,T[RK2jsNdK#)^A&qDS6=pSk%)$sbp-WLLco%cPIqdN.`R(!K'aaA8rJ4#\O3[)TP<='60=[jjF&n3Po^=/mN!1KjI:bQQi&Ys!#G,TP%i<[-!.J6BX$,r+76M)\n%UfrE71l;irDWg5h*AoK`"$p"N9YWKo/"Ph/k:B`3*F5'\C7%6H,m:=dgS#[S)U'b\PF^6(WW(/qic6m3:/EPLDOI'W,tdY:V?o._%<Z\Rb2#`AD;`.]=mr,CDIN\-tbT9nn]QFD2V1qV6AKZ<CWL&%$W2Q'r$48$sF"O;t=,Voh>Vbc)8m:$^B8nl;c^9[nS$'a%$,1_/%%>3Ykk)=`b"ng"l+jCYAJTI]oW1>@R6.n(mMIiGqe&?JKieDth,T6g,1?TI"h#k$7p6O_^Vk-tgEtQ]En<7n>@<GL]pqbNd`Zd_u%;n^F*@t#Vd/D=MB.)$VM^dA*5%onT\I947oAu1?c;8UaR(@;9u1+NKZ<3\--Aj&J:ZJ7f00St6SX/mhiqA?H5HLo-h@1qOn9qQ!c%imrNRhdh.G!g:tHFW?FD2B8mBT6-=KCo+)l$)JHo0Jmc],TCXD&:N.WL8`'s;."#L!`26"cZ\q[IJL\$6L*TGC9YqK)W^A/c--)f%b(Q/ur\=r4_BYfJ@^>85&+ohb23Vq,cbP*,[@;CdU[fm3e&_eD;7t_[<l`#L-./_6'uFeP"OY-i:n\s;a&dKA)"]HIWBo61rI@tQ%C)B`Y"G`s.pLuUtfP898UncL.d`]Q`ZNa>3U]lh>[hWFr:PL<Q?:0#ckDOFoDLT"/!p)YV.E4%5BtA<Z6Z\6q%A&\PEJ(Y5_eYWs%,peR*o6/*c.(!$7g-!W\&R)qMe<L2^#u^I>2@BON\^g7Z0"ZOTeP+,J<U]V2m^(K;7FWbcSLCY7WW/@,;r,k&e0KhUOQXO3e<!ib%W+\uMrsKB/r&tY8V#+g4BqD#6[=3Z[8Me_k&Y^</@5%!>>s-VX%e=PHo$tuD19/,MJ=hLc]#HW[cSW1*JGN!G$+=qZrFfVRj&#mi%>?2$c20G8gMKW^d?+`B%ANN#/;$56c^Mi37("c,uo(WIt5.3g2ehqWbTgInB9oHQRT9V*.pKk$].]q._RP4.-mGD+d#n!u*km]/(%66Ut]j>1+jk'Q0S_W,N/Yti!rLL_n`0j.@_Z3Tnq"7bWVA`3'beUY%G5g_&BZTL$,UT:7<i(4"G)dp+kqD=j>%CETBJN7hE2UGW<%&Ck=P&^ij->?M@!'pCIXIW#4Zl4A($aD$>bU@?bEnD!7dWC$LVCum?]D[#r*J;k"i`uYh12Pg<#4ulj&Ps&%Grg3/9i%M'\8QP-@%?j3fW9EW^.HQsrSD]jWa%NUmd`f>\fVXHY4\%rq0(3M<PbVT;?6Uf.=L+T1C)B@5=<\!dbPKWk[$oS^qG9/-X1'?37QX&(.\b4*h%#E3"8c\o"EF\-$f(jsGm:]N%fAJ0jPN)KGgZOD#89Eg6WlhE,Q"rVn&M%Z;d/lk\@,ic8]9miCc+oj>>8@47P!:[ss![oQ"OE<\6%dW'n)Bp^P=N*cTVR!o4<>)`,rCP>9f7Us9&*joDFFD8E#R%j,ZKKQh^BbRBcV&VncM<JsAWPWk$G5tMo]Y4Q\%HS;X+q,0%)0ej^%n9NfJ>:W5m_F+cKbP"t?;!bEg:eh`0("gM.^g)BVE+\=`>7TqYV<O?q$=jg?3Z(V&Q_HJB1^qt:WV\a"?V+5M?c8NPbDM31D#D-/%`Xdm/E>cVZ,"WF.G.7^,'+R\;Y&e2hoNO;4^dOe^Rs)on;?#j"DW,OOl`9p'&sa[X$e3`r:kV4lJDdu*/KHtF.jN+Z:APM.HY<"S%R-JoF')mrJ:K@_]<@3!O;un/ET!Uk,*7A:C5Q%!%1Ar`bTFm'[3]]6$6XALj0322W7#60TK3D8o<,Q2,Ml^T!Q02,qp,-sto1-t(%n4!L5f>@hcOGOLG7gB<1G^"89i#A3N5E+?N0I0++d1$,^2.^*kErrn&#0Q91cr_:+MBXYWjVM(WW<)&gHHY=)5Y.Tk#ELOD/.,9o%2ts"PPLb@P6*em3VBHFJbrlr'E@nC+areN1E@YcA2WO9EmJh6)R<T^>Ns7PZ0fLJmfr:uh+N+:]E*E@s%;AK`3*$;M67clmO@G'h%<7/AK8@G>LH*?<edAN-L(+qgOTFjqO0gjgG"Sl(Y%KPRKo@66SAn5?hF3Ge3\>$5(JqTHA!)\Ip_\?LT(7\iPcAnk*U4O4*"WoJM%5XY)E\?rMg*Mj<<miGg;=2r<C7+Z`.#mb0coXfbd;Ksh(nZmZFA,GIf7.Sjn3;!1M(MKM:"ke.a$_7"NL`Fb=%^VORdNIZgRI'06%,Q"*@-\CeC'CWgZ!DG&=<]N]YVXL0k>l4'4(68'[2@"S/<P]9JOJ=O\1O!2<,%mE<7'o\hXu"k0rHfUsMP[C0&>B[m@@%EY!8;(]%;ZkuIpNi`Z'Nj&MCta+"TDL.V9NhOhB^:.]+[`aJ*_d\Sa#cjM/5gG032lo_?^aLq9*PJU66oC(js;uN?o!;+R;!X(7)LJf-^%Y4%B(fYjI(;9J,m5[^+fuQ4I,Nh<fI(?HnU"[5"h"DRUf^M9RS;sra4bTD+qG%+31C*P)&//R<)d')='=,lY/*\nKR,CV!8nP>2JNb7%_*FGZ53=K^:0K>/oko$;+<UodbM^,JGndDCGiUHM6m'NgG=opoF9o_``.5T.'2Xj6aBsu'a9--K@S4btdk;<bc9!e`*K(h-T59i9%$8JF/5cbsS2bXbHcr&5tV,Noe3qC6Q!/Pgg!L,XiZ\0eA$rCAk2e=QoKV%I,nl\-I>mB#]@V)u[7n"KS][clq%\m5,,B^"I'M4&P%Zr&(N*h+\\JHn38#@F8MLtY^Z1s+-4a+.^3WNmd(ns#e"%B=V@7LcqhcUW`h'<`ob/9s(FIha`/:cefn[Dl5kq1qsE/M_`XVt1=t%W>1ht(^UU:9HVfC;9m^6`VOa3a"F))ZYCBubJD'PU1slH2pgh3:g-.\7&R^dmXqoROFYq[B<'`Xa3)ln,,erO$edt'5l1`8CZ@G"%TB/?;0P-],7S5OgS7QA%YQ])*1dV?$ZMKRk`%$&gdBQED_,B;A%5<s.!<cka^mJPpaI58U0/Wa=e1sP$2Jp1G.#6D2M=LI5e-+.>%__2fpdD7]XN4;Uk5_9mmp^dTUT4@GH#_kenZ"e>hbe:U@66Rjtc"a[e1,FM)>E5/cO+,W<L-tr#gi5#B#dd-'n<]p[edSIu*En:N%iX*L>O9?OaEotq>YZbTY^m=X8oJ=nS#)WP(J@G[%YHVFZ>sa3Z#rmd^[-)oj[@OYP]m0Rn'38`7AKVi-lSA%$BpOC3Na4uFA78.t%7_91+U_ZB#Uch8&7j=9EOKqnf#N&lk"#%\MkcB6\1FAO(M0M4W2Q`dhM+j\Ih_F.0F!_VID1P+aoRMh:SdLUj@g(L>iYV_oa0a^9%+L$I6-NR!p/hr6@K78IOQ$8&H)`_GjlbEXLd'%tf6F\4!:1i6JRN["/$F@M:&[Q%.QH<SCl:cr`1H?FL)(d($*bo;GVMq+ZD'.u@%5=Wg>;]D>pPJn%4Z!_X,J3BVhMK#SO=@Yk9(V2W/98Y!9']TaacfYX1nIPt)eEZL5_Plie+XP9N<&pq.>uLur/[PQt!hrjOT]06T%<JF%GN"+D:*N@L]g>qiBCX*9VhN>5-M[0;.=pSNsI1a#]R,Sa]U,i_25:3o5U(2E\gE7-?FRr%?1>.@Kqh3FKE&uf(&]'UCU`3N,%-HD&)YUHX!KLbFYj$pEOmB&'_KBXFo$/'?n$u9\0>UTE!kKXbW\lZT-.NC@Qm6fXt)<S+kWnXLL=/H^rG]M.a_1WHeGd`EHoHd2W%+6.Hdrko?N'"TdML-lpQO!Ha5Rm^m7c"_MX!EjFo<-4lg/LsNF"?)C!SD(`3,/dO3]er*E2(d"LK8]g-d/M/fEY]NHN.NP26E,\M%[=8RHCNF3_@CC$7Kb]18TY;OIn;b[35rM*]0k!>4X[+0Pl?&RVF*6&PD4K;XClmW5_oE^lc#4GnX^LqJ\B850s-L;]fsN*IRe4rS%n99[CJOl/Oer7:s%bqX0'gpsl*2O/`5ed1Sq.)'7h.N?2ra<8Q5U;H\Zbjqpp:=Fi'[=Y[=5H!F>g9b+g^V)L$?oHl^jDStf@\JW%>2&Su<Cp#katmuiPuAF7#.8^"YW$LNci5Z.&o0F7P=eUhfHKAmGMt'+?6n]T9UphUfBq%cE0eNF$b$<sa/]kkJC^/5@55JUlMgVH%:%[I=&)ZQ4Poia$+2[2JS`*cQ->0r>T_=MjODWUskCY1/2mt.6b7VNSrou9=nc)m]q3t0d]K/6=fK4aW#`bNIp9.8#Y[:-Z+>27-%&EQ&c9&I<>+5)ZUjC(m2q.#Q/+B!Lli?YE)H8(`N%Wh;A9!GLSO2R:]$)tHk<<SR^\`4Cc07NrpB*Dmm/5?$37<8pRqMXUXdM3(<%<8I8u@=1#GQjGNR`^k3Q9rB_/aIC+bN/<e)a)V$iM<d,IHl_B)WB/^ekrpF?Bl'7Za=`T8j;GWYk]hi&_bOO.aKFr079d?cW?Zu]%=\],=:q,A*[O6?f.o.n8(9Z_/plaKO-_/TG6F&S7Veg[C@H(4)/D\Fkc\4U:3ChdQGa+C8Lj"PLH0nj]Q'W'g^[a0Qn'fCd]@iaZ%0)^n=g'Ut%jDLTDf?O4EE.0iAY$6io\rn+=dQV2Ill"pinaO>2C-'t(5&7pt%cs0K9)asG3@3cD7A(o1$4^g-FkjbT<&OGVl`QZ<%adFA7J,bZ=B+/c89LN7i_M$+tQ$cD;nsh7QU^B['diMjDkte=n.iIK98eTb<mh*2_VOduuE$suafE(R)C23aIgFDE?"Za(uI`fI\%Vifa"XD<4g8j78CFQ@C-2-qI;Mp,Etjs8kDs8K,Ic8UTm"U-HmLa?anf:mISl;ATNGA>;P+PB'O4a%#UOZ:LN-3(5r5/(,rs%9]o%R3<2(8k-SAnq_`G,2MNAp%N_&/(o=C[oHP+9D^bU/3f]\FXu<Bpm+Ja]D"&h+Ln&i71aocQ@I%r@PanWTdcBo(9['glMUB'QY_,M%#jknt8,74)&H6R-b5"m-,<k_0?`uZ^'"Rc?AA[NcY!n)kH]L9Zjr1/lQDskpL;N8IlrKc]iqL_SX_I4Oo5.(:?'"IOb'IlD!os7)%1Ru++4Q'iF:rP3eUgsfCfpBk;/ShCXm)B@'V$7_>Uj0^[+=F+QGep/JSiqWH4NYuA+qIKELtpfladM_5Cg.T3_C_2bX9]^Z(3md,%8EN&F70#him[c&C_'ts?G+C5@i`VrbA1rs_YYWb^>m<0:S`s=WO))Bus-kcHm2CJFb"i\bHH,oXbaQR0rlFSgK>_^@S44;(]h%2<%lL^+KB_CpAKR;JVXEo4B]TF/8'<_"MOXJ1T,]dU0[&SV@5i"4X=G*#aqGFRg&LZ]0f0?!gQI&f[b5&#1;(1\^eO#NW1VMnW\]]I?%mW&Gk/_F>^H==pdprao8G;G0$#YJXB[iNq-hIAE16GM$g_C]q)YIPt"1&^6)aSMPL.o9:=ocf\ZWDlfZg!O4MYV<ZeVN,Do1\kb!%hqdJ=+ZO$s]oL'_mLsJFr7Y)T\BpkGdQd_YBmS=%_eG5B6;<L[h+(`'(QWu:(.\5meC0obdTc_eKDel`-gQDtF!s2'Yj!$^oi%^n%[FIkmjbTM.6B<)=M6>Ho00??)6Pq&7c31q18>d6t$o%]-"NQ%F8Dpf)9?>/m^(FVC;iRWkWs-XVEQ+Fnb3B3#%`AKX[6W\I,s)JI%ohYta!k/]HV7E+r[@)C[#Y3/TFO%Dm-Y4*4`5Uttm(-m/0s]+c/tYTD\)lH!lXg!C8p64gq*`et3us084qu/3\4*=I]WqaE&NEGA%mpN**AA\2i4g&(L55muj<Ehe#_P9`cXR'/HrP:>FE0`t)POp9B+-\K#SZ_bd_g[Cbgl9#=iu8I6Vq9dr'smrdb*eWs3\5BH,I;Yk%GY",rBsI/nNRW)Q4q4+^o"QK5&.Gp/'NrenIXWI;f9<[?b.[3<c$P^`n)%<T5d+-r[rkpVB,\2ZV8o:2rJ6;7W/E_lEU0ZD'odOO%O8%5&F4JM.`@g;n].-0S*6cBd'osL8X'+]LLItfVo0\QaIkG!-Q6#*kJ%d3%O43?9rj`^o?IgQ0q@Xlrn(i)mJp[1_q2o5e+'36$%kOGrDSUR*2o;T[gaq%4_dtU@,%=LF(SU#\Nl13<!PV$0t0>2RI3Q-EPf1:I0Z]%cBdgcVNDIY8G3997]/'\D8Sj@o'\#f6N.9#c%%Zm1-%\?nMC19/RoqjUElNq@`:ftN6UPYRIX^QEVljf_TOV3?Be_@09E"U4ID9=&1&;tacc""?glJ.V\46M%H0dQ71GPa?<+fB0Gf%6/\NLlEru:&0G8,l;nbDrZ6Aiq<hM\>ZK`Sp8MSWiChk=#dh-7#he-*ZHl/T7$f='K`'/mV:s6ZP?J7lM@?A%:V2ufJg!Q`'E[tc%'tc_ZkqIp`MT'ZNC!(j%MWn,3f,Eu8>U=W@].(>P<Du3^&'Of!q[\j<Q/J>BCnTmhkc^@nV(D;`!\CSkII4u;Due%_LH:MU#0FK4%RVV5J*aaOd%IUjW@nDq8/n,0FEXpr=.Z7onQHmkj*0^s3\f=CNghs_l=eT%t(?=I^juF\/l[#KI/J6Rh@IHV*'M>1Z*B6<Pn5S8;%[jb8P_Q!RlY5cNDg:,l$O]?T7!);Q(]uh%$lBCEt(TCfjI\HL0+]2XloH'ib4mT*_k2'7H:j]]I.UmAnD`u:^qL'81gKH)h)%(&\%KCJ`&?b/tc^NK11ZfGI,(&Y9/_OWi$!`)4)j^@N%6<tiAq*2r\O9$UVr9hHT9IXY!pR35*%Wp9@Jt[2%(2_Gb.!tP`b(ke@Qb#^i%KE2sY1)CQD+Xp(<kjiLUj`fNX"+M1ZH@rHHG/#[Yh$`[(`1R'f?&5_9ZP8u2#:LKDI>%(.9(R#llrVJ._1REqC2n6CjeVg(lh920%et<r[f-N)Re+)8tkB2\$rYeg;2\H4QgEHZmZJ:YX8M]5?_C+An6tBEO=PpX.PVR2A.$a7Zp?/pbYdE;Ss2ubbpk>m91Z;smfpqX#%6PAnNbAO>t^iW:]C.`<0[@-$#$NKfJYn@A>ftU6q#:iTTK`?p:r8ZNJ$g;HdrL:c>XH3p[43;"f-CoXW$8%leh4gE*jt##gf_-/l%:Zo_6Vp!]XomMt9Xi.uh#f%SQ8[4\7&gu'"3e"U->__Q1(?E;g%Zp9)lg39i3a#>pU:`B2o_4&daHZ^PX*o9bI6Prj4S7XuVg;5/%D#mGA9V:/L6iI^$=(`&!9Ak[7gFmdDYGCS#?`7&I?DJk8-K..`14BR[/AcsR]UA=L?iO$6]`'19.^'U0<\$f/;:9-A7AV9JiJa"X%fMU,hF^$.i^3(]<ar3FmOhUJJ8@Y:?l`LZnq$ip-hZfD7nj35"+(kWCGO$KI*#:HkhVI>08#Q`6Z7F+>R"\W@dc$.F&Dj$YY!oPi%2AtK5/#p0%r?Ic_pGRL#W^9FUaX#F'i0/A%:QYcYM1j5Ykf49?=qVPbJ,dL?gW([\BS1h!F**t-dJ03oln0>k;SUs=5;(N=RR`hB%?gFfVb<O47CJ%M'1oVurCK+&%3[hFj:VLJR:B`$CBoZNY.c%u#gtm;Sn74*qHR+6iMf=^t[_Dc"C6$m$G4=J'rem!Y+\\CR&>S8H%7%CDk(A@N)8]poH8]kE5lXra[*0M"bZleEUGM^d(BVu8me9=.*?mWR7bD)>lC1B[07u<Hm@&ib#(Ntd'o.E.1).tB]p)(ZKRK9Jo%^k60OF<nte\$n!aZM!_Wm)6DQn%[2uJ"G0!ERM4M"hT:V1r&MnTq_ceU\=<u5&JnMUTC$armg`BJahLrk;%-&"NYWoYonGlC<j^o%_\"^Qm(:jc*gCeb^K>UX@<I%0Ne]VsQEbi[R(q4Bci:Jp]L\c-KptPkd@Q^j669.3'%H8CPtN*#ji*EX";9(,l,'26>hHE5$Fb8q%$RuWdW!\2$jCAnf!L7cdbV.AERHPt-?=U#D&Z_(BV]==+kENe9r\T*I.I,(HV[<kY&r7<WU3\kop+Y"fk?e,u+gLLh;KCfI_'*p(%i_-*pqoebK%iU"G%U];FLsF3fe88]M`H;TI8;UU+4U85g`X(PD*5t6\K(S;=(lP?@2d"Mj30kJZ#0T7I'n&\k=@]Y&.=NXaH4FN6%7=E^//Dp@&Mae@C5Wm_3A;>Bm.^B#=:%kLSLjXCf]*$Nk.&*F;^1Mjc63-T:RtY]1_EU>"AdooHeTFIh5OqfWNSf!r$lFZ%RS&-.%@&(`*%6\'b,H@q8o"3^*hGqHGGojSD@-l1bkmm(j2*X>'"6")&ltZ^Bh6<M)h2pjQqJ1:tW8:_D^'op#*aTTdDicn/GMWXL7LV"%%B,JP@.!\5Wj\S>Y'kUon7.J6q!XU8gjUJ-.rC(Qida>7-4<s7qQj<X*0nfGL=Qq0"U@0(PJ>k*Ga^8?3n=-&^\%Zdboll\2]$6MM%#BM'h)LhhcK6-Br7=G*"\drLCapY`jkiTt^cVT#qD!K$m'UfAg`Z&+5KBq9:P)uJ>-ZCE/^E"Q%(4cEKXCU#S,jApDKWTp"MmnTj%:)Q@^Ou)JeD/=nVW,,^V>&[])*U;J2Y7TCg.H..=UH`2[!(pYB6>!&mq"!.'eO#h@KV@LG.MYpXcHBdhgjC&2&=G.@[tqoomp?JH%3e:7.'eNT?r.UarXcE/3l9j1]niII=QqqK3MWjH8dEWri5BY76_(S0;NK0_/:@iECHUn[%:WWGNP"b?FSP$b=[(7Xm&lI`O#posD%g3_^EFWcP?_j_o9B.NgTP33l1PIDW(jCN,/Q%Cmh`Sg^7A2SHtl^u)-@"V`-:ePcgVA,G6OiGK-[%\mV[7eM5E\D!;:!s;]8Oa\&%\8K,.>7qGK2W5<s<ZcikjBM]kI1J[>-@eYHRbL<o_Fl^<s0/;Dk,6]an?bC$^gqh@>F>c;G^XUj"<tsjVDJ1^luGptZ-,=I>[<[X%B7,P?icH<&6/b_O_Q>K5?=Oj[_->/L4.k[79h0>]5uX4`cB?Pt6[)NM/Gj-dR?BrM\l&b+T\9IZ\,0D(7@'\P9&ultZ'dhu85"2U%>KM)+mBUhpr1M=qYE33o.m!&9Ebe`E$Wp#JO*f2ReE`:pZoDW0s!d#$lY@.%"E#L/_QsgQ3Q%RtZ"f#gW&<;XTt6KX,03Bg<P&,V%S/jcibS'&RY%6:7NI>1YKU,;$#Zfk$aD?[bqa.WJYAFb\8.cn/[Eadt$]sS._.joZfpJNY@R9S8A4tS`V67gZ9()#mHi":Q:J!=c%a=K<aH3MTm>2hDZ/$jE.ZCnbSO#)qh(q@iBfPr6BTE(JBcj0.,=@`:;B"n:/<"c?kc&Smao2GBWM(<`V-#snJ,4:(VM$9iVU2mbo%o(_epOY%s;>n=QU0ciii!(GG(E3>mt'b/O;_@G5,E;E-EbRWBnLVQJYQ;8$<)$^P8A3pTnFTX$B$F>2+2e:NO%Ub.KG^V0*%0!p#%BXjckNT3Y=WQhEK7X^;I7-bGZqm)s.U=^ZN;aMiTMBg&oQ`*U9]K_Tb%b0,/oW-rKEeAR@;h4*-n)hl=<a1`RX0fRhbUK>?3,K]K%p7o?QR\X$\QjOd9-n4nr^-"3KD`eOt2D3JV[N*$]cC;02jm'7&apn0qdb><`^;&#:dEB]e\bDLAIA5CdI4%_YiG5o&/in[m2LCT2%^%5$.'h;iZ-C6O?DVJD=q10PqmUY:C?C.4+eYnp!#k!GeD;/2IPd^H?3mLhhn-Ln#@PP..5aB/*ME@Y>kitH$XV4-nD(K@3ne(j<%MLMcq'_',q.6PAZ[8[G^^RFiq(pu[IiAko]re0ot>!Adi-p?`hi?m_gQ12(*Z$Am*o4.g_0$T=e'7h5u0Lbicdm0YNA&g^&YIl7)%7u14$RuS9e-hpJ^;oqaqI=C\gWp^tGJ8U^U5p1r1=mFP'F6ME!0q;SGVbjAAWu'l7K0%AF46H$YdZS<f06EjrDqPm[+fe9Jl,O\0%Kde=e%uqa.qB('oDEP1-Ts/,a.a@H:Z,4g@f-2SF:#e<3?sr*&k-l+iEK)b]XpoKnOgL=83Ar20`W`3u(Ye.<]-d_2Eo.u!pojK@%Iab\LLMr]363nAubYK`WTj"6+V8hj&P(>">:%%mZ,<5O^>Mo8!RM>qsng)KdNU'n%.re'P<j,K#S/hT4:oI=O[IA7_o%sMW>GC`A%6BAa[:\)DXQ^:&j<#@1loXJ`hU&_/X)ZCZB-=FE,k(M2k=)\2A-<Wf>Mk=ncE1^\NZeb_B3GekN?%`K2+>2's17)j!hj@_7&t[`U%;Pf)*&P#/Xid52hdkFui[l67bDX\mKBod.jKLj_t=#W0VXtQT4^Mt0aq0#I0q\$0r)P1]jb[mjS7-7Ce.?qnVdMBr+IImN96UYt0%Pg@N/-aZm5L2L@g6HX2q*9`hKOM["s\)`qYSfR,(DhajY8sf'1ES4V0)dqGSCFUN*4R@j9!96FLZjt58ZFu;T(-@HC*&UFL)Z;3A%@.L)h!n];>Ts!icm#H_0)'%G$(N,3D([PBOO.h/lisLZ;k5Q@!mlK^\>D)Fcl+7<83(?f2F7X8B9'XsEJ")$mc7*ibf$\/qgUT0S%JX`L&aE37:%f;Q*b?P!']<@,8e<K(uO8G_NNBN[a-b*0c/_s1nK(%+jFUe$GQ/4F`UP9CDWm7XC3NBUUfFu!4\oe_O_nM*(-g"CW%At)\/,>OO:-JL$9;h91YRb<#cU:P`+/sO*kZL9Hk%&$%nB>t8U14WE5XhXBMb/Q!LD"[D)m+_EaG_c!#Cm*[raKOZlD$1,Ba;tE!%=fcS<gINcJ'`Lm9i&>Qk1OmE)[#TP;O+phN=-l=+]qQNUHgBI>G#VbRpCWG!P(S_A/%<"4%Z1$n2nDa8p7I"Omq5%?4]"P9-+]*e%LWKbf/Tb1%KK*Si*jc2h;T;053WWi;gS2AO-EX6DVWBrBekhMh<9E\I88iBkd`glb]Ga"'s5N;T\UYo"_aoP)"<U=.j]b=N'E@R+%$2U2@[et/I##mXFi<ZVh3(C4/Q!_;hki)d!UE%U4CMs7Jl(3Onh6*ekO6;PA]hZV.EhLb*GPd)OWd6;c<K<_3Yg'%>?FgZ__seGM%poCThH12D&lS!&EII4>9I;.(kXjmJUJ2IJ!9.:<'S^5YUVGMEfX#P,C<g.NXWH&;J.eMqWO[h@3`$km=:DnWNC]rUAk_AhP5<W>u%+4:C@9<X[XlCsg$f#"IR_@AeY$K3\!&ASe_O[L<\nM)Q%,uF+21l-JSSqM&)gO@2.bCb4r$5=XGPuci"Jsk_:dlt+7+<D2t>Nnr^%bda5pLmA';=nif&6R'^;,q]ACKGJ7'jZGmP(npBadg!sJ%5G#F4QPkc5h&/cf.P9`/QT9SM:WfOCBfl^VHb3,V\j.*]8Ba^F%S-B%Xs>Z0jsUoYg\@%Rhcm3Bimmpbl*:/c$PO>f%GAEa"n*a*-?&h"8o\NX>9SC-MaQTb@*;m(g7H:[^9#6*FJ$b;,P;N;:\Od!qMfjX%lkBOAabVfIJEde%]%S\93gRrg2a@-21@<.Q:oI<Vb#3+;Wq+gT//Vn='3R=)Sqa16r:W\+"Wm_H8OlK,&$0H-)(q9E@`"bqae9,D%2I@ALEdgCb]bcl9b?]4aJgrWrg\0m/)H\G!hR+jkln*%omWlNgk_CO;MrT/s%#0re"N6]#+"(AJJafhXFQmr_fL6Vr%j.JOU,XjJ%k]IFmo^73UJ(MIE5Q1\(-.,I(Do5js'*iIc$n6l?[g7in5KnsO73Vom.Xe`;XkZh0+>Sp\_j_u,?b$oc4/s4e1dU`%[n5-#FsEq`%A)gCe=@a(hl>/rpo*HFGdp!J<`bd#Lh,Hdu_4X#8DY2=#!-`Pn1Xl;a0)u`845r+Gmi9NR[OUZm0kR]G"._I\?$jl2&CtU*2B)Qt%;0EQ]q&o]SZN;CBOM*;oYcGTS]K;hKo:l7GF&AdgmBhn"R;;43h:k*nbUdrWRgj/fR]J8MH7.0QOQl<Mh"A=G]863gAO*6KM2b6_%O%#q%gjPq$RZQG*9(opp'^]e26d*As'go7^2B0$*gV"Y5!L<_QHajE,WT0m>"V_CeVJ\Ou>TBXaG7&ZW-eOW8m'bA"0%A3i9\E1G%:C#/:?>rHr25gPN'[;t?+jd*h"=b5:RM6K:!#Y02hBFs<J?sGZj`tSN=aoZi:^5'u2fWd9pf9j@9$Ti@>iK,Vj`8U68P;*kp[Ltj%WlE#]n>h)d8V-CUGTDr=<W5(aR]&Wam4-YP#cT7!b$;G&@l@E!R&V5/PNf**"Dj#lIeK$)WO**7$M$iJ,_#.@gEPqaa*Eh.=+n)C%'i:JDS<AqOEkR&A5%V(Zq4Z,_>A=t(og[`5;!BHJ3W[7NN;E\q;$2HaR1=alX<\@^;$DD@5WOR`00q[Z<FfVfTf#('WGW,S@")<g%HGX@%!?aIt]k]kk61\JuaJ[C:Rd&a6;R6V(g1gVlo3/D9%pQ.dM*uF>m^%t](.!$"&nq^QT-UWk,9"mT]-=.>Q$$bUIG7=2;s?u@%#<`7JT;&b.mJM;eXId:^3i/18;=<In7:TL[lBD0T9aQ$Dm,"L*i9k6Bfmd[i>X6YX,3[<:nk>J3o0/)IRkN^jmK!&9p]AGbK.oQ?%G98M"+>@<Z(#r]=!-$X<j&V@3\ELDt3+bu9?K]"]9ju<IJl`TXk4uSl51J\%&iu-#!YEG*1VgbIgXne0+AJh@c*8tQ(m&,T$$`'h%%@Bole_=Z(1UEG7c44]A+VE8em0&=JWiH_+*$G6!U:kUMokhJKUhhnd@b<srSKodi?c!q>?gMTpOIr61`5Yij`3)#O"(E8='sD;'%$Girg1`otOY2flqF(Gi4l`;gVeWjeni'-c-2VGi"l3=g3Ro<(4K-CP/pbWl*;b"VU@u7D]!o+YhF49f'iYp;M8S3`gAE<&"P$T'H%Gi:M9d7I52'\O]/PH?-lWjlGjN78\L8]8oOV6"D)HYS_qUs<I\TN"gIHX1MTPBg!bY!m@k9FHj"*aKh-.7t[.-VP/F7KMp!*G,]O%3,A8UE)iEkJ#_DH;c]W;efQ5_LQo[r?=eI6JTEp)!Ip^C&2hahS0>Rrqn?X,JCTl5+bFcM+6:TNJH?QcJmuHEX:A:KdB);()i#A-%NY-OOA[eI81'CUqfI`#Sr6S#46fPFnMiaZnJ!,)-$8<,,hqIMU;fLga0m)&Bng@KlK5T!qn!RXM+]j,f*9-aj):/;;mRX["m*dR.%RH(5!OThqA&2JIC#SNZ6`)-0dqWKHXkS["WHqHo'B_r\&[jbGC4RVN$Vh?n_E^Bc[mpFrRCH0H?T7bui0hMIC_l'2_cP6q"pG&aK%!*AD9ZL2\;$*r+JF#PU:8[O4$0cgO2b4AR=ho>TB,,o;#4u/s4B^20B*DslKr*E"`XYF%FZDZg[V>'rm+@bQA:TkR;ZrM'Be2>JL%N)U:Q?H[iX97&j&6E/*<4bD@A.E[B/T?5A@5PB3pBi<*FB'5N;488UP0n?6b5@eL`U+_M;O<tB<KoU<5H>en]FFWNCDlR;,p=Rn0%"o?_\Dqmt<I@C(<ReIPpQ>3M.'(7JWcc[F.HW`SM6BJc)\.Kf#K`]6b%t_(!V]+'Kc$7f=_:2uraXPAcs7\^(rrIJq^V:A+nl()>%pYP/LIj5B\@85d";R6K(Vi#)=/21Wm\VZEh\ef.EQW"UB(mL)/VfmU8%pkq[:*_QN<>)ID,Le)nl_WfC:5R,@7L0\/dhTO7="ZSR%jM_tmS&L8E*[8;%*Lde/qn&D<Yp@l6=Zjhj=ALH.\cAc;\aH4j($.:dFnP.ij'P>\/__Bh0\slpgs\mBoi1<A@Z]lR$)Q`N>1("-%`!5]Z/;*gX"`[K3gZue"q*FoSY0o2K(n'7drk_la[K:-?H7a"$LIm#frod"n':)s_=ukrB(`NWJ#dM\Fdq&h3n1r/`(/1TH/p+<;%mWHb*Sp=\dXQfl+-h!J,E7)0fF"RrRW_k4MX<@>!I/pLs)FpM&a6-XUeS*.t=g>OXXeY!`er`;'iu-gbH2.@C*kcdfdXrQ]R0i%o%:4kprhO(&TZiAmC?n!I_F.Yt[-0sd3T\^aU85MJe[T&K/Z6!m8(/G7U'P0(b^1bTkk*e;Ad8HM_+lM5nC)uNgc#mAU=20(QqmQXD%RHkOtLC/NY.g!8(L%'82Hed2B8k,gfL6)qD.b6H\I7!/1^N](BFF&W7pTA,62nuGh;p^.?P-5^;WqR*-FHp2A:46>u![4;/JkWc\%7K[b^a!1Gd#cV=u+Ho$nIjnW/ccbm#)/pbe8#;s$hPI(JA0,0;^5!hG4FUDb?.En+&Q@B)OmX!JAVR/7QqE1CoP,8HC-52Fn_rpW%/IJ;SQW+47Ji04"\jSVW4%.4HqS!H#MH;F6'kJ=S$%p]"/A'6<W8PHA.EEsNP3]Cb9)#S2=UfYtN[P*YHCk$"X.fC[qnV=9*dB&=%XOZIoQP8sj]>!K[BBqPB,%JZZlWci-ZeYYY=eAVR_!>sP2t4k+WJ/cJDf+jaYA91INM+&YAO'?=I3Il(dB,iCb>TLq=teJZaZ6af%SneJ7,T?5rn?q7>G7XB@QT]:ID9Ek#+GDd/U]ot@lQ\j0KJ]W8pq6"qBup2AZ<+V'VUccaJ0i6NmQBri32Y9'/:2<Y_HunE7%eB7%VRPO^&g6*s/AP'I5f\kY0_P:Ld_8s+H?Ph(-Pb.l?n/!A#fkJlbcYlI0WlD_B3hAufp_Ar/Mr:FYfjrBDk7n<NtVR]cK,DfFuqsT%Mb&WH8Hg9SZfe<pSK@`QjI@a8@@`K^#2d2\gMbdVn#,ErDdT*I?_#AZBDD6$FP;4!JR;4G=8i,-KL5HZ,i=CSD,ri$`BloQ[7GE#%+:r8`ij/'C?X,(!(XLk/K^mNPC3IC>SkLsg^Eg8KfJfRH$8Q.nrtnYBm"+l4:ZC-bkiG50Hs-F/(4p3Z.L?--8%>*[$L`+rV"@_[%]<:I^8=b@&0"."E+FbNG[?i[[MW@BOgVTjI`MR<,U9/Qr#c7JIm7c.fBC2m\!MGkaD4l%Rpr<9oV#K]GX82\us1ePc5,u2QlMV`_%r*ePr<A$A.ZD]P4g?"Ojok.[>EL$"[[Whe%K^9RgXV0/.?*0o9$ditd7J-OCSQoNnEF8+'s0Ti'Kdq_SICol)2'eenf_::Ir9O)+%[.;P%bRgLDkpMH?gnb]i.m;hIfTBhsYCo$C+GsO/#$4tKV)<k4DQX(&cEMlA&g=[B:uhU'?DWlHeaCS[-UEjJ25'lT;\d3Zeu3UZ%'&QH*i5d6aOAC.1"QdR?E#MWr2&:e;&.g<75UYlhFQ'@&^BhKF.%n:7Oo?6:HYZ(?r>`a^PlPg,UZf(VrH/h5@0X+_7o>*fD'K]=%8!,p"j(/XaLf2tgK&Cm"(ifa`Q:.l##inuGee&TQj$)#pI.-4$7"53Uh`5Nbea/Y]pUYG6MGbFYcu<?us0u93SYeaMFFf50LqK)V%RqtZ6ROQ]#l*J\"1INgTXAp]HYksul1hotn0<BNq#E"a=I1#>W^'Z+0]elK2r"Cs%2UYspEtdM\Ia5BY1P4a"lU8E6HQU;^5VX>m%l'^B&p\ilZ<j-';"Fc2RrJXYgi_3]KdgN2c-VcPNp_T=<kXLX3Tr/=?:)2r*\L-'V7)GpTF@ETBN@^co<Rq_Prr/UV#ip>`B9Mo;%Hh.l_"A-+b$$72J8h\)M+s6LTp@=T<#,34j5B^UukPCs29qM;c)lL?ek&el3JV'*2?$uLJKLTGEcZnYBlI_\*HXEghm`BAR<t6^Y%MK^utn]r$1mPo?OHckH^MYKPX"chGB(=<ABQJKs3F#>E7T!(;Opf5$(#`GtCQELbV3/mN#6_YB0g[_>?"8SqjN\\%U:P>15s,/R8%HlqsaUb;V?EePFmV>nU#8D`pmIC/Xu_0dM(miP]@q"[m4lhSMto2!9d;bu`N;t%DiOV;SPLB.VOTdLVI^aFQTUemd,Kob%=M@pXG%julAf$e3:"-D*q(6r]1;h/+hVpFVQ;.K-tqb^]5\2=sfPM_=^rrhVki;3?.IRe3/tO`\V"8pniDhZ1MVTF?5"\_]Du$mKGccXdE/%NuL]OTU$Jg(WWB33$kkm&&SdRD5/)%=E(^be`P"f,:1,ZWqqmo7+rk4W9i-LL[[^2'[oAWj;dQr=i(+dJe'P'F^ZBJMQlXr>bH=`%-iK\mi;sjO["BS6W[e^HMaqY+<O0)EhXL]U7R\UuB3m]HLj$hSq#T+-Ot:SI2m[m(@$7G&<fY`Hd0GHjEKlg1\tXB<VM@R-h+f(n%PeB*N0-Qla&_t@iX',k9DH64XF84N7W'<`)>ur4Nbib5@7-^pC";K"0iHJF(:+tfUI0P=b$o'*a(JT$\_J.mkAuDi2OD&V_0p_[:%q&&Gu;);#0OVV#_eIrPH!kJ>f^84;TQ<$tMI>c,>K:@-fec.,iao[fWGts=8Pq7,:!CK+kiI:&gqObH08q%,S1hB=TcT0<T=rAS7%Lpic&I)k_6r$lN+ftRfXV>Ei;He"i=(fV6q8%`!!oF.0-M/:ihg<Pd"+Xt\]YV=dh9'UR&XFct163K\PX\fBrlD(_EbEZ-X;EIj0%I!g7aq:,8*4s<L`U'.9`?So9og9HpdcXkdBjH(L)=gi?,"IelZgF"/EIB0^HFh!h/Z`)uh`X09G'WN?;4HRu\]1%HUeCAZ5B35#p%N^M5]D7s!A"IDY8KP8QG1"'q:WZc]OpBh>a,=I0JkX>WSVdE0WV6,D+r$%[0Y;IW;2^C@U+pms>"XU6-KqlV.4eGZ3cQ_8jQd:/r%H63>nQ:aD%ggJ0q;>c*,bYo<ZLK)=V,=Q#-LLKj"NC]dG]k<SR1[+Hr*#^HGA.AAHQi3s=-i8sG-d%\hijtIVLudjl&s#)_o5Ike%,1d/kOg/5OM&1cbAcGh1%06/&2)Y$^ERe:CNUL0R0kNdN0f+j:ZandUAQ:+g^OXT4Ajf.'O6cfXI:0#Um^t_"nTIJX6i_a,mClgO%@]rdMM+g>VN-)ODGD:(C'QP;G`+N"XO1m+NT;Q/,%'HSn]DPK#O9S0Ifgt!\W2Vm;#hP)dr//-^K7W91&<=\+=-5Y(/ot9h94SJ/%6#u\Y0L+r]X#@"i&ahrEXOc4PX>W)Z*j;TS`ti6/+o&;=HU$fd9Fk*c4cu#*9U99D=@jnt9\agaE0:TO72I"G%.+*H6._j9a&;JZ%k@U7X9'0V5i7r>fD#,`'doGF?b-!4m/.rjf(nn<YGjW/[,gqr$&PQ&_aKL%*=u9:-htM3Q&(Hs//utSQB_TIVG9:'4>23aY?BhpF%D.,haFsdmo\a5qBna%*V#W,L3_;\]^A7W>F(PtI/_!,s!hI#*_s"+_rDTu&#]&;'J8oLiu%%H,-ls4hjnkc_ma78LEFZBPc8K-0.%3JI_=Q-'n(U+IC^YFet]=J7s4FO4;dTgWB0U$$Jb0XEnM8i(Z\GW/Lr=KU@nmIV/B<R_o.e/eo'H9)QLL$EJOeJfi52]9)oJKIKE%%lJLm9`@.X*p]T?fl0XX5[(XW(OWDV1kQuQ]m593hc7u`]Rm0r-6[VE"j=)t7$e0(I<^$k:^XpS;MjZV6WD*D;;":1dQQHGUb.Y'%]O^#;XBA"5_u2JFc;+@%X?\a5N;dk_S:q6\J16"GPsV%*NjT:YrsGdlZ*S9b\W!5nT__t'Uc;Ss[#'Rl.EX@hL3>>%UQ4IT^ePT0%lNa3%*0X%H0]g?j5s[:6;*"B+[`Miu%&qCW@)&706)Gk_0S&5QXZjRcST>ZCX#SL3kNI=HNtek]Wp@+lC4fVSX!oM>"Z04gD3iH@%FYiM/YBie(U6i2iY>-TLFn+0(C@EsdQ_Al#P2D\"hWfbL50^+u'@!9J804YD6!N?k*TEIEW+i7<G4"*GpQ\hrCuVmBKGIlB;8A#Q%;Kd"Y;4[t<Y^R,``pEgj;he((mZ2C;#h[;@^K:`@ZrCbKKANc;mf>JE"md8eY#kjZPI=1:AsuojK9\d^b0-HK-R.p4)&7bG"=d;@%>82)ZleqGW*3:r=\AMgS*8"pgi!6i$YEnj_JZM8hUR)OHj63^7d0$`l4!<Q;P0^dD:R&Bt25Ij,pnD`tVio2!'I=YXFeeUdPbB*S%Sq(_Tk:m]^b-f=P"T!Wg!e=\Cc'miC13,tW\sdn`/^il:dHT$!/IL8_RVO<!^p,O3p/a8lkC>p%[hBamG!g)SR][(+&Hbj]FLfIe%9]/ZG08RfYK#K3`&=#3^nAOumFmj0ZSIPdn\;"!/>4=5e_->Bpl=)*M;-gM7UJtJ-N\]fB:cgc`m)6dcb,4P3G(unMdi^Y/aO#,!%O]2-^?ARtU&IF.h(2)SgEGhMr`?@UkD'=ngR^^B]jS\X..=7>VT[XZTkF.<"<>%2gNjS/hG\]fQp)%MO`VL@eQU+@)8WN/Jqq'IP%S#^E@p,V]8L*s'(Sr;&jksk%5(TVChoa6'<esp2`;>t>MlLNpWEee@>hjZAYH3C5.+l(!&Nk(&;i^L':T8_MO'nQmu'(smk@XN;A%o6qNC&6nQZ9KNOsm>ipG^L)cYFUEkt]<6XF$s*,ieg&6ohd#DQ1)mPI6I&N+gBX,JqkkWD%=;&EO61R$:AU_S)>U._?uB/cF)$u`%:$t+rphQV*^$_qZ9T6DP[f>+)V;^<Y+@'ZP7X.aBM^jeerCsmSJ-"budc"GBLlhMpnpL#Kl3>3,n,`b78>dF=n[B-=I,8=52KhJC%P,tZ1[]%-n@R$+ls2>7'1]>2c;OMI6-lTYhZ]bNNm8ceE,g)kFQ8f66Sl5>e(Z]^833n9,^ur4:'SR"U9XDHmEtP/3FGpeTSZD)e%'@];s[T78(T&),=_%D,/76qqt,g"?dfi?W+L6W>\nZ-UfJ^:G--mmf'dnY[ggnG3#?DoG*mIb'I`A5:_&/Ns_2J=B\fT!t^.9d??%3.Q'rD#c7fXSH-3U=DLL-%3uB#'^:-oja@4%q0UDg"kr2JmC!&^1CD7NR6Y:#EEaJ*=PmDY`oT[Z]=dXGtF?IK\Hjd[!%9"dfCW8%n4e*sU?Ap29B-:W=]"%(&T-?s31Cq6fK$t6.8^5Ge$rRMOEl9Mk#BdP[`+Vd[Z8+tH-E%>8tscm;Sp(pAA69l&G;Fnhm<d&i.RaO%dG@L.9&e>*TdoYX.?mK,N/_'Us1&JZ6DB!nTNcA:'d-^s3GgCmoGMTpB!P*#Y3)%kbcSoc5LT9P+]jIfDX]FD0,(,6>#14EUZX#A%hWlYU.&&T4\qglZ-VTYs*nS/[7e.70kC":B,7*5U&j[bC+fq3nl4&a.2)uRAEKL.Q5g8QhUCJqcgl/`+[)q]h??CNukdXT(U.PQ(%'-\ReqA%)pZ.)?jOq9S]B4ppI&]dc])$M+E9mFW2E%(;k0YgdL8S/4d>&"7#MI!%\KF+\FMOV8D9U;Z/[Rregl2[QZ7Eds"DCU/<%gn:)@.J"9Zq)r3?QZQ5>eNc&RJc=20rkt=,dhBEP?5EaV>/a/m6.&POINjGKp(8LS?Akb8W:kV=3_)I^1=d(64'tj']]i*\ml*2r%_B]1be8IBHG#0eEF%/,J+:CeI\chT)(es'V#^i@a)'dpr18FaRTcD4pM1A8+o\BQtRrugQ.!#s`<['lr]X=7`O/rChL77+3f&-^J%eU<fueTY46k,&pZ9=4f'DK1t77,>(8W*/DbC@bYg,m\JTr)L5P,Q;Ch4CKK-F`Ea;MOoJ_lQV%=qO"#%.7Y^96<)9)3nb%9-U8jf%1J),C5*1^;pH]Kq3YS>,Tl\:Y?9;V+]ZPK0EHSEoVCGM`G9B>@.5aO]R=Q;XWDZUfGRRT\'4ia2Ol#;KZOR&F\'S0TmapkgI?//<%(UGo4PX@GN-e(b1R(EJ0^4mo95EVileqRk=JUp4Ci<KI4O)GFI!2^C>M!oK1?g$Qm-.2`DlVgep,8aWZF@<ElINgU@]1P'9M00nk%\9aW#`n.?pS8h!R.An6DJZ@?OM"do,7>%T7g($Nils1?DQIAinGXh@<$NO#GaTTP(2`g.sRNO="33JKiFUH?9O/jZjiAj+S<2d&/%i==U00IFCgY:k4u5Km3@c_RW>QgBL)g#$.lYYju[_RgXO6*?jh5"!sLYNIZo`\?)LAI)L7V"Qg%9jGukSN2E;k/>4U2D%fbh]0O7%>?#2dA(XDJ?f`,&WB+:p(M!6sdpFqbA@-kY"-Q3YVP;Kub$/q0_Z_cB9cO[o5^(\4m_UOe>7=00$TdK<BrT]*(^jUQBF6*A)_LhK%oGiYl=7S`eZ%u%XDf3C&4s(Gu-><A([hMDBmag80mVKEdK,oMf<AbF7=pr3N<h_m)4&FL5SQ27`i0V'=4,$;UUng=le8#&R]ap58%KI/NC:7]B:'.^::Io*I&TEdK]ReR#:88@(BBiePpfn9nKBMn$Z*Y,8#r7Bc44g=UNQfYMqh/WFIcA<"eiRno^m44jCRnh^:-NN8S%r%8tl-P?o60P^I0&R0sc=VAY\]4YIUN:Sc(rCf>R;Acu6\NX6<B0n/+/MKV3"[13o3kh.pSc+Y+1Ufbs04c&.hd9XrR835uUbATa%q+8TF#GN-9dL^9b!UG*@?]l84VjmOQ';]b,>4$m-OX'S=,gR`'YCC6d=r+n@hl$5e#nN*da"#jma-#_6q^^@knuUOE/^Q\MN*$]o%&6c(I8"N^0e4qa.J!8Of"A`HmJs6?kUXjAj)CGi"TgFDA#7ci)T+rCQKB4LJ$8danM$((N^>WDMD]3j9OeUA=3NB8aa^!5oOg`T>%?@pA#k:@0F!:p>cW$\0,\r&psSRa\mp'nn61PfIi"ZddM^&jE;%%rO&/.$Y3P"27gpb_c4g++tdD2Ers&HK!V/9XtYk];h08^pt&%JYST:U8Z^FG]V@M5C1<L%n!I>i`9P4m>`!]Wt)-cJ")"%pamuS,ub2'G9YYbSEKY>nGP:YeQ+!K]+sCg@(iYY3.3dpN>8/BZ?pt:%;0V`cPc0g2iIR?9[c!`\55'eYU<0Q)H%PJ#?bWC.#ET;a7oT!KD/%brf[GKKZ+$=MbgItEPq1d>.e!qjE[-c"7.j*>Fs(I/.oe@b%&qT0b^^F5;ajl5q,`#p;&+=!n+),qUj:hYG7!nO`[D8%sW:6C];AU4%1aEW^`[Q@E!\i.fOo#0j&S..p>@It;q6+#TN']cRa]5&o%;l,hB.Xje:I$H31[jA5d&a2r^,5=Zf6(t@He3,JZ\@"62'Z_&dVag6>^V7Yu`T@nE&6MYeX77M,$`\HI$tu?>W,^CQ+;JXBaj0tm%gCLDN@D!E4e<R`&S)<#lIc!Xh!VKO\dq=Ee7=^u7p!dB;FUCAQfe!)*KT0f<&g*ll;'I6n1J`a(DreUm?n4S$aJ^Q@-Ol>/k>nAH%+IRYf-.11t$VS#:.(pW:!ZcR<>\`OY"Jos5KJf]7:2*_FEp/@mFfR`?]#O:GdE,c0&g!_Y2b1=h[6<*5lHjcsW[n_eOrA,!3egS9%'`FtkHZC^c1Kp`J]P5YQWGu,nU'AWcrS/1,@GWVhNgbu"&h38fU*Bq1Of;SP6PLq<OG7S?Q\aB>MHk*,#B=)dNRE>&Wb)&ibF_hQ%4J1k1:LbmbdT%,sT-hItc1?Tf?fJ)6:/\J^T\,k!H>`<L[7)n_[8j0d)pS-K23,b$XhU;K09p5,HuA19IdOhP5"ZuGh2V5V1mO[6%M.Jh`W?**m'ZWfN'C.>!etO)!"Gu986mLr75@9'FB>$@HMcg_JGr_'jB4c6M73<BAO@VQr!A2Qu0gE+&i^`\(,Ad'2/KZLO-.^s)%8QNF2D*I^d+@#SVdgn"",=0GC!Eb''Ai:aoA9LXfBGH$]IoD:6)UIS,D$6>$o4*\l[Ug1CS(Fi4cdlHo,Hs"B55+Uk5PEs_"YAuR%.)`>9e;F,f"1NTG(Y,SM3*bR8J[;PIlE;k.l?1&3"uMUS<Pc,9SBZ%$Mag<&\>j'E)jGC6D`_-U'AI'$*2E8XH>KP$H`)K5UWqq[%]UV$gWq(o2+Akum"^VqnrA2_e(osZo@t=+$k$jST_O`mL0Zr1%C"G1D../VHDelhrLD3UJ`PL+Qogri"PY_>@jT$Tui4t-[BWf@s%;(qQ)\_$<=eK2OjSHgjI9!nCS'`psBrsM2uH&Wf;9K+)g&o/%PM19u\0HgKH)mSV\;`+??M"2^7KZq$X<8.J'Ado:H4iiLui%B8D%foP<P<g45YaD,#Ak:18tL4:EaQ5`sXCmRu!PXT%e+[mLJ0?gBj4=BOG=.F"2a&Q/;I2&>'K=:G4s&_Ghec5okr6Z5SClcT4E9T]<%mCfF@NnVMRg#Wde.?T+^5]%pGTHOp"J&e/%aF>;01e66)RjtBJJ=+KaCai5e[QpbY0_h=kO;$Ec%[<4hDRQgZ&(;UW,u:;Mb9;Sg%8,]N/eOk(DW22eq\+LFE,\+a*Tf:"(01KJGHA!iO#%L]=KXu4MkV*VQLR-.GA(V*Q4,i)=7&1ICa@[3?(>m/,n/_DZ<"Ai)g`Ja3%KEI2,SoPpDd354IaUgD,Z,#r@Rkh;8WI0d=U*tj@frtVV>"W_Z2tueI/!9-G*`s72dGrP)JB'*@XAZAi*QqU^pgWCbobkE#UD4@>%%>n2s2sbD-CsH<fHs?O:"oS(hcNU%Z)WIqiXZ/U%G,5Ap2CR,C&!sQfOhm%75pb2RqGq&i_5Zn\`]Q7-,^0b;<`^4*3SF9TT:([2%*Wm9;pT'j\f^%Y0SeY]*CT<23J7\OV3!ToZdHkcVnR'MljON;':i:f?WqUA]IOM,5.5/;p@:_cnFtSk'W2]W&OJH;74Z[W>jN6g<%QXlpQh6TNB!)-N\BhJSb+P\0D>q/"Z%$aL"FJUGaf/Jg)"OGeL)7VksIHODUjSHua#Qepg-6W5PGgI0p$qcf^ZX'g.KGt;/g`nqY%="epf>nJMM5>?0MM=Lr5e'ZbU-VQDhc4Q`UGq=mF?:E"[-_$6G!YlVgpT+`F6s;ZbJgek+<%d2R*Xi\X;&-L,6ZW"MZY+*TLWQ3`%RRdLK>rXG]9##IJ/qqQTXW.tE!?=h[^qEP:]YM/l8ta:'<.?QR\PB'la!)eH?an+;jn19\bNk5DZQ+bL[Vs+gGN\qdcAoY$C='[>%e&4]Wi\-Y;F[H++5M[(^aS+#UNW?G5ojf=G5RIhnS&#CR=8$2:p6#joU<>^.eFJcBE^grZ+qo9\?VKu<]aF<e,!;[T$en"j9<^\W%R1[/u:I)OIPg/7s->9A;-P)Tk2Ulaf/`!KMb-sPE(>tM3f&XROMQqhTaG]mW'g^../iMuD3Ja-M#Wu[Um*[G9gRBQb??mhp9'#T"%"l,'%I&j$uoO6opB>6i(/_<c2Xoo<rb,V\pGni$6R<S?5i[B'#0=Q,WQr#_oam0Aho+,I/Epi00Y27QYm9l@A\#&T+SXu\pEj]5]%A)ZU/0V!4Ro`RRZndB@FJ$dQl*g'3l.k@^aF#?Xkj_Kc&IT<RH+aL(+h</RhDVli#nuF59ppRQtH#E=aIdOhP;\pE*3TUsZhQ@\!%<0\nR+J-23L$(KrLu8MdH^cBm9?;</%j,_iOmU8=:@+9fm_#:L*R5Y<]".CZ6>6JCN!XCGlH16/<3UV.n;hkiN0t%?YnT[(gpt^6%&fK93NZAns9rD<ZpfEX=*fX#@e3e[!WcGBG:!oGC]72ZIg,G@cC<FaqU4#:nePYMFo\a``N!69U/KAd@6FZ%7fPEL_,o*&UY*7;'%'*gs#4$/MjI8>q))(t"6a''*\e`Je<1\p5p#=fsNbrPd1&5YF+#(#@"`-A)^Q%-;q/S/JWDeH_A59+"U@h*_c7omc-;?Aa<D4sYZ%134M@N%r_ff)Z[2Y"R!7ii,adO=T[Kgbi_V:TRD=2=S&K?(*oMPFuTPPbuW+-6ij5am"fq'Uqh.XP9P5XEKHb\a)or:988g!Z=EG%@1_ae%X7S/`f9I<[0OuFP,Np_Y+B1/<oc,8A*j+@;1$Kk7Y^[q@`&K5#O4Prg`p],^"Jqnkr7_E"gm4QZ&lID#L<4J8jf<Hk`YT)%;DlE2,r1>71Ws]p@@knXc<pJ=HCQV)491XWF.+[BO3)f/\`%k'K!CXGiUL$pD>nqL&O!&V,9.:<>eW*lan_^T@J[?J55+VVIdFbG%e+'D#NdZ"flb.t"FH>(*YA0]bZF5gYFeuaHCUoZti7>2Y5fUmk(ZB=M4pT8B/`<jQU#RL#Mc/U<c77%cWYqdKq:6a)a`=luK*ZCE%926UI\+tY"d6TSCPtrukcO[^5ng!LjW.J=O^'M'YTP%/94+"r-\Qn1Z4$MD=]KA-2j6"r/dF7t]R#QR/Q9BSDo]cD)[X;iS5^r"3%UIcJ*GNH%X4!4%#Hfo9k?HR]86X`)Cm7J]DKQdXe9k!TN6#Rg*S!1]YT,ht?C"u-9[H3.A;+V2Z@s9rYiEUesr(c'?m1+,?T/4CK%+K(u=0<QVK]kkM5>nL6ZAL:/XGm&-#nq;jkRBi0TTZ^3;6-1;L,3:gEXoL'oOCCh)-=S,eEV##=G'1?*^Zat_YZRdZ[ek7IQSPuJ%\,Udf2uFG&<8h!3/>tl`-:ugjCR%dGUG]?mO1YTaJ^Po?nF/IYPH]9B0LFC0,^VTQ/W3/uCR5>^(1FPABFo%+_A`&mP;HX)7$Fu>%KmS+3gldh!'b[N%=@JA0nF:?-63Jg>7U,,qaY8)A5"`P=rYlWS)2>tm;EE6%$XGe?]gE\c7(U&:<!rUBqX0e1pitU;eJQ2*!a8.V%fBXElbDD0NK2Ud2h`NpFF$f.@/`9t)=)]L'f7]<>CfM^)H,GJ!;VmX(khHu\[R1qufS@Bm<od<-a/FiTbO"j6GT.ofhuEDbH[5WM%NpgD.nRWR^UbZ[["JW2ZroU?io(i*OU,o]Qla/jMAbm3O9\Cmn86eL_8#TS#6_oY*b[6peodG3m82tdnkZR/2O<%2BN\/:/Spf(G%Z'AYh=&\L)(5fC,AI^^PrcOH37WU1`H/sV"rGX=P-UKUfH'K)u0s3EB.J9tVrNbLU?V98fe:rJsSa0,?a%6^-<S]9?PJ=2J\O3eM%i2hb!^k00;b(_l\=[b?LnuJ(t,%K:TaUE(A5V:14?)BAFR`]@]lhXjuJ?U25B"\XZ/7MY!ch&+".=OX2a.eG?KbF'Ik^DqL05`*g%LI+0FI12@EoU1N$f=hRqjR@NGBhM_L][Z3JAVkU,kS*#E=QZO!!h^t67!B)0D@+Y6`r?d>Jjq!sk`hd8Q(Y%DEMYSb</5[2SC)hL%rQWCN79$3R2p_=A4cRMf-I-2Q,sJ7(RSR$bfF?<i:;5'2_NPtB<;hDd`Bfo!3F7I<D/-fb::4_YI?gl)2[InKTkK2B>EG%!^a,-S%,?7.Dc\-ctE[KN$543T!bN[@P('C'ujN0*19kB6I)X*4AeSR6J*aTQ>)G);3`=b^gnh!+69`?1@EaePhJ&\NV+m0I:F8P.H#[42F%nYY*$g2ZjF/?)_8B'=<r=J_A7b8$]l\8FYn,9%F#chX9;P(j!CX,565\4@\,5bOh8MI6<(OO:#ERoa*d+1^+KE&gN%mX.Mn!h)al%%>I6+#<mrd,ccq6-j.Q*=^9LaV(/U.kCs^hSI4D5l<a;Ks,A4a77N%G8UX<:FG3BKhLVB_L_JOpb@:k"q+IV"SoM<T*@?\.YB"UO%EsDjV4n0<X5Tr/jR*^Vg;Vit1-\+."KA??'jVOP#gBDQPrqKrFgP"55:4C-0#cTA'K288oi2Y>)+cA\$H)co?\hboYpa`97d_.:'%3fObkr0\Grdr(:k"thk?i)Ft-Ijl*MnAShsWgS&m+VZLZp.mOC%S3[6"n/AJS$mL:IY1;7Qqe[^`*k8Q!6!i<"\mYaksB\0>%AVP%&H0kEkBqpF3RqWI1FO->0VMtRM@P/FB;_Z&bn>&9[WE];;+)1p[g0hdkR7)-N\UZ"h_@ZI,Y9T886Ue7R0<`/S:cm+-K]BbG1K4_%:If7:')!UWiK2@STAM'sW,7[qG[q0$JL15(H21+lo(GD[r(@iGa.Kom*%Ruk>m8-jJ8(,tfk$]eFpE%o7o#CW29q"F+"+%E&sg_V%C=VT\V`rK2"Ik;mrh>GS.]id)H^cQRE>c4ODk=OV#@&T0<gEb4hZeh!\,3@?AE1p]%.@a7=XcQBfpIH1F`iG6;r"3"W4iGl>#kRZ%hr!AQ`Q)Z/$Dm$ded(J$imfN(;'Atp"_3[Cs'dg7bXfu3=_r,,qdA".T]Den\ocHu?59iAE`]h+IpJQpBH*f!FqqT4Mh\n`+3\g0%CCc\GhTb8q%aLXU(p1N$T=%mJ)sd!?=)d`ha]>-,QZ<g<&EWnLAQUYI1\O)Zp&/Wt83$*+gdbpoOhZ`2(o"L"rZWV5Q2UpQ_D6dK%o\p`T'c?<7FY,sOGm+52B*?2Ol,rc@5\9M?@jhSd.7./m-KZHsBm$ef%&'URSWksdY_fmJ33SYl<5li:O(Q$C6jWHs#i@`?/&D"g%Sq7NH<h$;e3;/O)[Ns%QoDHG_'XbLboMn)n-BTS=n/[n;^MiFRGmR2<,']V/Z@.aP(k"a]V6+ff(2m%X'ef6b0g\:2ofp3jpb"^=%o=5nk8+V'g?@&Dkc<pR%ciNFb5d<oWYf^k]Rj09\A$bo5=:%;+@mp!L&T;_A]s;f3hedFJ60Y"M2@4n+ViRDN'U%a"q"*LqYbeq=%C7SaC7G<3V0s7o!R3*^;2VB'L'm]\Wr'mAF&^!2i?HF>R`Z@o'*/3UJ$rVQl]_S(V,eK-"f?g_)p@>6s_E7S#NhbjkqpL6`CAPrB%^.LAd9]h`+<@9'<Oo&Uqrba]E%@\k$A0CS,:(E^_fUTm`.k!//PV^'/imiiYO6D4KX.EO"KM=/'`f/!BXePSj*>h^7,+!WOg)tLB%r2'Yo`S%PEB"%^7c<Dr7oNW,<Y)&Tor_J2u3KQRBp'_!3?C&`3Y;?X/"=?):GC3!"ME?\NZ\\QsOZs;4B$\OG*iT@t=KEJ$NU#53%*-_Lr./OgGTp,OEl8ugjQ1hWlOIfPjOr3dUT9n7^#uPBjNWspYf7L)9"N@ib7o+'R]2KshG5/)?Lm7?43)nY$,F&>$clJqBh6c5V%cq28K3g>OqO4;Q%;(B*/&"bb2J\MWfVeL]3(1aW])$OXT<)g_<1ZFHl\+P#Y!1J"o%_>ub>Oe53TU"ji/Roor\I)dG2?Vi/3J8@-%!H,c.P.AktYcJfo?.f^)[S8GR&k+/)W#7!ee4TReNtZhNS0OL:nF\9h+1C4Aob'^Vk!;UOLm4"U8kZCJ`]8(//2b2NgCMl/#2!E8%E#p1Vp'd@aCA),T9TRUsRAPY"'r3YrV-@WSY:ZC<OM=RcG_^`Hp6j5#NEJ8'qbSV6&8k4113m@jj]`>LJi*!_(nqY&plpHOCJnP7%IX=^[jDNp`i6>*$/pf2BVH.jL]RI59rM]>^/a<GciM5`FI$G61kC+G&'$>WLDtd5#c:Bn^\dZk"=`KpYE`tj\=_5i.5>4X]>*:Rd%gXd\i^:,[BT;<!g)ZVZ,m`qGgha8j"\eP5I2%#r7//UtP="8aJ]b1IAkDacn8,iKoD_9H:NnrejCa"SDUj%."E:9B\HFM"QW>-Hk%CM1.aV()X]KW:9-=/>h68#!_<]ZJ!$Kk4$NVmX<KdC(kOG,RSa/-Irb(QeiTWffbQ/s9$fjnsW2F@(t)^'BT,-=].QfN$.GF%[pF%"G+ZZkekZ:1C[K)`SGh3?&je*\\IVmHsfK6J5d]/HY[W&,s;]MR!,%*(@^TrZ!h8l(25r(8b?(t2!P_m#QUZ5LrcjlDamofZ:Eu`%clj:cPNpAb:(hZ*\;T^l3(omhiu%,,DlR#$g=[)'BFdMj.gq;^EsX%r%4qpi"5g5IO"d[Y-nX7(`LacE,/UA"%2Pa7/,NbA.K6[c%!qGuuhbM=WDT06V?lgBkY(B2YCm*;G&4rgXM0F@Is)%\6IUY=""?Bl56M9]n4b'bb3Hl%/Y-XkG'm[KEdJ=f7+KuQF#;)lm:c=%/%^/*c'/N,qQFH"HAmcV--j:A")kLTht@`N?`kQf[-jI4?%WO0QG?eL4LctXcG+mKcP[o@mt#R-JtV1@c%MKpN5'6IG^HtiEJ]riK2%=6"[')7JR/^\:NqoA6"[qYLj(e$mP<.9o,"Cli;d-Oa=?9b;29nZHmLJePtSr32?BB'?s<mQY$'a^pRDM@6>hWTe9f?D3"6jXj=H%,csB%fK_l5MF6rc!UiYPPbHDEXAq8#AZKN#j)e%YQMJIAT?jp_OApUDDunQa/I72.K$uOtb>VKFZQAmf&k/sS[$3m,)F@Xs1?rFa%i$sT!h/5Q&M8F>:ka+REZ(</uQJ`=8\^$PTX(WfR@.Q)HM-hOioSIia1p"jfh9ebUJ%kdQaMbHL-o>[-?f^1b&i1o!_H$IuP2(nF%(i7rC"t7m$3ttFQZgac^>I4P^)\q.WoB]\s5jRWtJ#O:3qd-2aj>r2DaJW.%\LM^6)/WtV"]q:!='7C<,8--qf=,AUGRsuGm:S4h%[m"TQ4jC+;ioSp!ohEr2T/0DN\[=UPjUL!^EH_AJ,d%2-lF,t;Q+h*15B'r/h]/fbG2-$=]0u1aK!ka=#Y=S*=Zk0ULOk@t*ieXk%W/konE/ieJW[2[H:'7"Da9iPd2a!T:Kgji&85p3j:5AC@?"A2OJU0]gNkF_g(;_3(I!^7G\NbNbZ[/gc;i%XlW]h]`b]!q@32`UR%BI2W1V2T8eLl/)@FPd]!Ta=<KP8B?JHP02"s+pS^*U!7_3?p"XFBVXqPsZ[m]1S\,[efg1mCYW4c%bB(YH%<]3*r3"XPTcaR3)=T%;l,99Y9OZRGK[4]VG;IBpH.)OlY\AEApD6P]@$fT]L,T]35Xpbf0]^3Nu[C4dbhSb>DF[3i)9o)AT'u))s@UG^S+&NQJin@V0MmE%PSZn#_Do;Ucsl5CZu5[GOeEC9S;jd-#:1=k"39eu?,MA1)OmBorVk>.1gtVhCP2=h']B#<G5;O6oEcR:)8pQQ"$$>Zs1i;g)T#gt%ijJO%AdBOr"`f+FV8SKG+gj0?!=e7CTVB7^n]]K'M2Af#K<uR@=W$($D*<Jl3[,h0CAoP;;;Z(.=?^rp*..LtC9k6@BL_=;6:g#?%Y^h_QSoF&&\c/!;8'.:X/C-4:k">9",uHLqLLmR#)7)2:,(9K+lnf7D";i6aYriFZ?WnHlE3&M2X?Uf=9^uiB)1[;lbs!B4d+pe=%]opT.EsS@sa&%2^H%oPnR%B8//>uEeEYXqK&@+5jmuD0pM^o9(+Q;"IX?-JAlNAIP1K'1;LRLHjQfK<]\upkUS_!&?(qh$+(jN?V%6"ihu58=5a9o<XY/\)DQQ4l_PPZH]cTI#K5`sN`Y3ia@l%MXOLSE@ej>9IGWUhC#niQFL!e_j=`VM-@b1:;:).iH2JcH?(&]E9i8%Seg^MA-M@C9s>FoB"5+XTkP-%p:[ZEN,*`-Y0o@g+rOqNT2?:l08fEYMQ2$&(-SE@Kk^j!1Ii#_f$gjg0oAF\V.0HB7=\a)ko#+%%`*(".5D.TlBO0pHMBuc>[LQa^MCsPVhUPuV2dI%56M7:bRehCB5Ij#r.$bRu[&\*Jg4p3O5^UPG_Snk(TS1X4gFa+$(#Tpe8YQe:%d@#(ac:05o0e2jcUiD$*#]5r>W%1:2Z2P%aMTq=G\Lg]`kP+s2;%Uaor8f$IncX]qCn^Fp\0PZ^/8G&tk5ZPf`]=C]Puu4#[3,s+%7Pmr%Jb3ia?Aat8B3-fWLZ,mMjN`=i0jL&`GiUYG9?X9M$!@f[]=jEt:`:9L(onBq\#ActG[Y@oqcs[)r29#+^5Qu&be.OhaaEC-%U&scY'LgLDI/QVMUKhT`F?g#.;Kh!@eE=67o(<Y=Ig/:`SVe47KD*#aB8d4e,>K@q/c\WD"T-uNN)TL]'lHEE-%"MJ9(opqql#NS%&<)4BUBHS=kDQR.]I=P3fCEX7.;9J$iI9jl,;Mm+SI3P]c#pMA\#(9sd?r@J.;N%Ci:82E@R8cDr*kNl!Ziq_cTTOF?[M7=q;.A(%`'(I!IM#&-<ISb+`7Z[!1A^h#Hb%8ana`2b8AIN^+'U!dru^39o(0->Z0+WD!I,OW4?%U@^\6O5h[O]R'$O"h'j*LFF?^AKJ9qVL%_G=dn2/NqmS]O_2Ffh,58KM?Y'CCA8M9$Ll*hd:(CDjjiAD+R)9M@h@rOuPa#I_`%BNkat@&l0mdssk0<u7NQ"09f`fq\lL>@TUg%9]%4n?1=;>`+/BV)G(5(F]_/fWtSUo8#ZeQ=9E&>"U'AVWI2_A>b1u,UgZ%_;K?#oRcgmk`8!P?jU*ZWkoO5_Z:.CDn1T<@VE`U]%JDpVCU-'"fYm9Jt9n&(j=BcJ]RcdkU#;pH'Ru50.?9/^CEmF6ReR3lM5OK1jLR?MH)l,]N&*&bd#4Bfad15NU>_N't`4ct*+l%+B%ebrX"f,4RSSQiDd_0Y+FTY`Td?^Tm57'sd+Af,XLE]Y#XbE4>#=)l"thgC93(bL[XTA@g2^H@<JY8WY:@+%US_kdkn2%^!OW5pMg%bK'^88W(LG*WZ'27CV9&(jgu+n@i$eQbg0b5A5N6DsWk54g,*3r?N)KU8.GoDMhJ$$`0"AcOO?>-ErXKfGOr[LZ:Wa&@.hj+qQ)-%Lm6NuF(U24^'=RR#IVOHg*7Fj$o"ig$p+la1XEmPTGiQ852)Q7+H!co8gepBfUF8-_"P3$b8J/"Al=._,VFEXL0:<%OocGBc=`do%'o9AZo5suL3o;W0/&4hde\I59/j+S9="(fo*Z9m1'*k_<-\1m9QU]$m59QYY#0riTECW-.&WhFCT:4Pf[_c>!&f9>6i(F6#bM)(q%W:/*q)PNQ2eS-:WA;#<UPABl4`D,Z`e#NRV,%lZcD+_:$kTC_\;i\o`W[lg9F30suOV)Jj+;M@r)90cZ-Ca`+k\3kEM;j#=s8D]l%_ac+>U7fM'Jdq(*=F`.mTRK+gS?k]u[<e<-a<M!t^A-EsrWhT4]o)5&mCuobq0N[e28L9c"r^QgoZs^os'f)dGX"N.Uo5jhg!QTp%8Y9lGE$?,3)F6do@hphVI/b[O8Co&h-?qC\Y29Yq9h=*_)q-4q%0iam"G$pdFSG8C(e1Di8<hD8oYLJQZ.^`#L`[a//lBTu-4pCN%+0=N'P.r2`8YSK'<J)I3d8SUZ0'D5Dpd_HG$(`*=BL/>[/n#7OqiGGR*_/TuSaSb&@ZfZAk,[K/f`P9kP6$U(o$K$>fjro"@.cYV%^fXqECBA/<n5"4oNI9-6+"hI.hq;04rVuf(LG)9MDVH95^YbnDMR,HbXWNg*[)'e@joB19OHlWa+kkj;+a?pAOk/iXX&/]8X/c+X%!m`X9[S>:?6+:_igb\aF!$5ho8WWig#MbFO1Q[O..IOT1K"ftiSOuQ:9Q^Vp99S#(:W^?s$\<s<oL")5#IGOE,b%@8RAo)P+GW&P%e-2\5MUtA\6aTlc$_&tBTi&WuO#C5:Uo4bWC+7"LG_<#[$uPJn`AUp+(2r55X$0=3HS!m[7%jscNde,2hPn]Aj2KjQkkp<]`IQ9K%ITm<(Ad?=2!6#p4f'LDLF5">XasnY>j1?!or:n1"GP'mNgngY^a#tThaCKb((msCD1j,jU@"Vnm:]U+&`d"(PQQoQt*,>W3JjJn[%JhSA4i8+>sGZJ2n1@l0RqKiTf-?(SJE8e]*OY9M7I@eK>E"_XhM!Ph2VTL_A^;5DJ+eMX`424`J;s+<rE(E0serhI)St^[A$`>:p%Vmo5m6YS&-l^4K$RutI*aN?q#k6]qb)Qq1ZlL`7(!h.6L5m+J!pN0<+PiH1!L'&X0h;5%9<pR7']VRg8@5i%HGb)cn27mlPaXp9h%MkI0!8+#edEY-^#H:#>gJ\!L,CFS/fZ^*0sMPF2g?^]ZB6OB*]^1KKKd44eVNq*Wd4V"C*-quk1:1jP62/KlA5-9npfZ&`Rg>sP'%BBHf8#UtIW.N]F>D"obg#g/V?633PckHn0%\NcA<9jnj+p1DmNCkS`2NKmr^%Ar\!Z"J2N*3m7h)#7(Z68M\9#oY+(a.]15+LIWa%n&V^?lCH3n%`G"Yg5NE1:QF3rjsc^RQ1Le5PD\N_eKr(uQ_0AuqbCgtTt3ltLg.sefgE*("6N35jDn6"4.^-NYUrhGU50AEojcXi%@e63Xn8T=FPI%(I(*9KL10\>sa8\u@,$^PTiKO*KB9'g8aQY1A<gf5%OWVqMZisIjV_\g<<U7rkZa30c%R1QV&_BKr]OA)h:_b*C%<'(cZR[dT'?n7ef+dsH_ndr:,5W9Ah%f9]<MRf?N@qtcf^=MCeI>G^/AA)sf&OLD!J=Y`akL*`a%\JjMj:n7%\6Nf1a&U^?@c1E$%SMtg@Ugk++?gQI.EaR)'D)_n47l'0tGTIIj0L7kJ,mbCR%ag5gi-UJcC\fBWi*:^GGc`KFFXqIWZln%S!h:c8Q;s!<E&F5I/L'ni%UiN?N"GKqHj+X_*GOu/mPL*AVEh]d+;,XT%cWo8:Q-4=&pO2JOK2dK236l!C%C[Bs"pp]4SPO]6pJ$VAXgfAKVMfe)VIuc)K'Q:W%9]rRC=5P"7R6/A$GAF%kXrqKErL26sUkCVpq3nL(!&)<qf(mmg]FUn%4Q@ebLBpIeh_/XuP9Of+<c.bH:eM@YW?.`h01_MKB.eoO%:t_2`RrpKnb5&5OaBO_`7r*VW!m@`O3P>`opRe)r+3cOh_as1S;0)rJ(AYXeG72C@AjUjb'nh`TTL;"#n-K8fY8F:'%,*:k??bYe%1@TQJ3(-u8RmShV*p2noH!u2_?e&V94!n/Z^CX#V<MO:&"e*T4dqSHLpDK[l*5O<sRt;6X3UGkSX5c%]UN2*k:R>1$.]t2Q!M*D=%Gca!,,]3,nUJ-,[Jn>$BP*V<HF?01ug8*LqFt[VM/m%"IXnt+["[Eg2p\r4J^F_CNWh?2D2r/H:5n0V@jg@_E>V,Bp7<qi,7h'/*%HL&\#/u#PNkY[A5HM@D>6PZ:E/P?kJ?jLMhf\G%S0mc_MiU4U'"'kh.7X+oi:%lZ=qgdonUB$d9?l%^((;<N!i`.TrcE]Lg%%6QN%25BLJoH$cP0J>StKTohJldEP\Ao8L1FPK:P^_&#F^7;>3Z381>?;:9n@'E#ZIC`bqb'e95r@5h_0>0`09Pkk<3eu,u'T%jUT#'2I%3O#Z5Zoe>1[WcZW\'P!sn'IR"rC'V?CiMHm2R)a2(tfT@]FQ_*mX(pbY^^2Gb".Ea3c4Ea%&7"f<+bp>i.FUH,mh4FA,YR8,;j,4%dRZre4)%3YD$jC?3m/fp!f?rtENB["mAII=?%ENH_iW*7e'XL;&TfFh2*[n"'Jc-?Y>*-Z\(RW-HhrmIHLG-k=_L=i<[+_C=3tsQ%[t+VmK?+nhO1UXND&e($ndY3o@fZWR"7UF+&^E-DIOG`*/@$@Y9\Jlsq3A.4+^3b#^](-OK5M^DA4l4(8Z8cT&rZ2#/[9GenU(T:%jGuY/].77q[tBYMW8J_1:kgNrDUFR5$H%L&YJB"d$-pfF&q?q,-Eq0->8\o7T")F5.5AtC2O^&.%@ZC:.!Lo-O`mc.Wk'SIRh*$\%men=>eQmAf<eN/A]<:*jQ;PQS;9C\08dVXjIi1-.O/8DjW#[QT*QshdF#q=aO<%m(Zt70T'0geM7SJoHHa:mP@dmeD4"Eco5-Q7>%RMiBV?2KngZO1e2P4i[2jb2QSA7SQnXjg";on_FUigitQCY&#)a"ueEM`g"MVd<p6qBgpsMPp&7koYUfb)aa$grZP@-JZY\Xhel:%K@b*_X2T$.RR]F(&kV7u2AO%L\8c%L\X:)9.]6anY+(T._CAB&I>r@]S9_,C$InSRb.r?6[e1o?:4iG0P4.;>>b4neUl9O01Cf:s%IS<>QR91LpG$e]26rONlrY8l$m9/sOUBR2bp@cqB?)\U0ZT/$Fq/\.X*2L's9LR:c&C6FQiOK]0XA6A((koM4?Y$0TgK^ORX@QDp%`@2chSc$fFFK^I7)7im\'*X>sNk,Q1<']9*%Hp"+^_R8'Ni3O'%%o*YGN00!"^gi.bN79M/Y(2iRAd&Z=_`5_P#W0ENNC0Rk!N:i%16V2@;nO.S.b<hr[6"F'"<%EXTW=Tp<5I]d3VRo7#,@SRWI]*_Pq/jTYKPHEW[+RkFT7k38ro[`R3M6M>Z%VK>b!5`e=f+*Ok`e>%,'D.`!YmtRIo)'=4@+lWQjs9N>Ke+Xh82)=lYO;]q/7W,"_K)9oldPu*gs;V6q7b"8W@2NY27@]C=fjaA3nlk>+SV%cJFj?4d,_+%WKU8XO9T-Dr/uTl2b_Hn]p*nlHWl]?V)Rq@p\laI5j^`EX<QNd,dEp;,,2rYkiu_(;_LI?1uhaKOf*'.""mkZNj_/4">[ngNtVF=%EX2mA)Z*WI,%/+tMk2sY.KbW[-;kPZ]F$MFJ7RVYX$goq-+LKr%?EahOQD<+GqYd<qR6WUDq<4>;D"E]V+iZXkkLKq;rm'4;l]>M%-WmbojbUVNN?Rf*l\\SfbUsbqnnk"K"Ob#5:H.kWXeZ(omu7rs_O\s?e\h.e]:Ic&!75?S#Vo?r5QZ-^\UbKKi0K^'7nsfMar+Q\%kWm&hY&;f-PTr&+h\Bmk:15"#:q"npW7[ADZ"O)'P?52h$X^fZ.&MT"p2rRVAfY"R/JTJCfq8s%HZ(t^)8CU<f?!6Bn$$`@('`]l%C9oWeot9'c16@Q%*N8D;hb$4/PXautVDD9QmPk\qpI>3a&B%K9]D2+7<o+81mF[fJG6IejjVb3gnc"<DV[l"3)QE/=7>i_I1KLU*%kTLhBZ-ojMTW:dD`"RN[*L),D_^E6=_1c_dTU7CtjG7AjqWJ0XW'qBR$+f%Z$pE#@aYB<b(0i-$$4C<5NR1mR)b2Wt4J)fb@c/O<%$*H6Wo%K*hfDs-\9X>&WTt,QCn_[*G,%-Hd?4QHpQH(VSl!llF1#]6icN@Et>GJRu.J5'(ZMgUKGn/=mVILEkO8KV\ZQKP:n"k[p%(9O$$4h\rj^%Li\o:Ir49nEl.jjO.=b#IDMqBXcTe"DRt>is-!1*rHE-Z5pH.J_0A=MD.5iqMm8VJJI+PkocAhlR5J^R#RYPI"7<%HWm"JHLIIqOR,VU9s`H0/D@\!96i,f),jI`H9EAi*pZ`ND4LOP,+5QXAD,Ps9A,s#pRY\UX\.9qo)-p_s-ATCGPR<\mG+K%\#P2E%Vp9/:cQr<nke^h*3*Ri@+HIE2<[HVq$rs<IP)IX_!Ft*?(lD9972^"Iq\t_NPb%:#rfk1HQ.R=3qm<\7PqJ.&0r=jA:#r+iKpKl^%F0cbVpCC=s9Chg9Y2pnnhRu'@Z`*lfES\rj1&!&1D:Z;AT&,EKe*W:sq]"c*,uc`9@N;(!^l38Es!>j*pNk3S=/2%9]%=UBj@8t.%2e4LO;S\D?bRqfX8G89i_X'T[ft^9pVbL0&f:C%`2S/)^hIb+MhL-64+;O8;(!+P.qlCJP!dV6@B!,jmZ_uSg>`U8koT4p]+'4[H%-^BQTl!B?I$B<'f)Sb+dO]9as<A)\^TbqAL5Y;20^FtU'^mll.U$WqKK"utchnUE%Mr^LN.Td^:SsjQ-r7#)P>c3E&2j_SbOOpQU%/pSbE/lZi.Fl!n"n<Xj(5$U/e]t;lRmbfLlAP$SEZise_YG:[YMou2EK[AF]W@BFHlBEkkX0iT8kV&U/?ONL8+$8L@'<rbLA*Bq#%.\3F"G5h[.VZSW3dhf]TTB8-iG0i>$J_Nfl!c,29X(jWT*jAYPTcPt9-eN/KSg%i$M7$MkBR#BAb+#\%HTM:E[3AL@(=^D0`StOH%(nsEEG+@43]uO3]<J3kLEW2ts@f]1RE3&Td^fr*o`=JS?LBcV8A7@>k5?N%*NJWg+X!@IeRh934>LeQ%$NSES>@llACG0(rF#\Xc%g+%+1X\H$"h-qi[h$[=l$+=#;4ftn*CmF^/?oHa@'5Y'+oApYp"^nD-KrU;Qq;r?,[=VV0)<*?t<gAk7g>%=hW_i'0_9pWTXb_u_%]f"NDKlX2D0U-7OMY3.BqVKV,%^rs-+BY\>0-g7"Xj.NK=KBUF:9;u+ILk#p*5;_oFW&"#Citcr"1C6\n,Za!7dpF_SKhgPeabJI%D]SfL=KD"J'I_CL83^4W.[2*jqd?Oh*Wtn!%9*O(f:#"?RM1$GoUr<1;*IXGXbK5V;1bpm9U(XkCP&[sGaDZp#GYEG8sNG]e`F=_%=>9>n$+B^$b6bU\?5cq?$@hbY"^@PR2q[E+%[+Y/'s+!Z\Upq557!p/K<7a1.>Q%%*ir@A\D?>qO`(;a8S710Q3D&h'TSq-9>u9\%<A4M&F<D+FC)+"Jcq5@\eQTeY3nH/I7>\FPp--esXOZKL\3?]`0>D8'<Vhu_1Y-=09-54VeYTIh>*\3@6Xluo\`r:eIBcoSf0QN"%c/hR%N"cUPTX4l;<F*@hXt6fT;\W'/<4,Dn+]N"cbce.C2G]c1W:VGtR\-bi0MM*EbHIdVKj.iSHhoG2p=@h3'5:Ejl#.SAB]_X8%(s5:2Xflui*t)FHMkENsRJioh3COai-sdElW0/'57H1h_-W=[ufDW"r>9RukaW')2V[e_;6R5(9SNWBt1!1?EeUqqZEE.$UUjc#\%=(Mt$.<,l[/",m^&1o5jCOm?EFp.uYEY-=J0>HpCEodPeV0e;/8N/jlj6e7W.j_:of`K9\e)F>\K9Q@t>gIZ[f_YS;,.[P1Ab<>N%8?N:]kW.X#7WLY=$rZU4*Dp$4*iX7i#KcXM^ctQ;KB0$h2l1'@96HjtXrMd;I#qSZ3ogaA8?S,7m4a4O0m*clOp28)oO!CLFp*om%&YHg&_2=gTY!@0sFTHNZ'n&:Ka;+)33=l"$%*eurV>mFnOT9Fpl)T*^gB-FCS49&7ROoH@ikbl?<MEb[]Ra>ZCU\_'E5t4PjB$7U%V$<$^=31^o(*M3\\iSn!?%H5ubH(@;Eo$RQipS\prI4u'<YZ\;"d.BS`KG''JO\[a>:KC2]o!V6/;]1l"Y^^G`tIeqjoMbRM*f\o%OiNiJ;j>X2a8+s[6Xs75M?=aN+Yp"EKZ8=`cF$.q?h;Qkq:1/<>+RgHl+$HG%/c6S^*[pT1+#DkO-btjS[nS*n;<3*<F.e(+5+HY%or1T^A7esJKOpYSN&AK9Bm[WHm=l4cKdu@Bh@m\,3^.-KeE^i_(s@*,p0@X8e\:thaa"^falG0ToYGjX3Uf.tOBV6['2]-oZQS4i%=PF"JelJ+Y,aoM/3."9AbaloH5Y8qn@`WN(J$F<*6%!$UG5>2Rl*1a;O^,Mbj&4XVHm5s"-0!c,(SSSa^V[NtP6i%*qsH7SL"aE'%m`#G5C9*'X^9I<]g+(>kmF__ZX,:EO,`;7[D+T!?oj"/uo]F^.gH2[K,Z:e]$eA@D^ISp+$+<iC$f%1M_H*'->m@`RE+<a=J8j.n%[A=]*Za5]pg@r/`5'(1M8`[bse>a+]^#\m7)n]7R/W8pPZ*rHOpqVcp[JWjiUJ#Y@C[7hMM7#eH>)=Q>n#mu*Ch*`bL"^!,osGNL%Moh7UDM?eRH?H6?[+/>RYL7hGdM<LAH!="=/IAJFO,^NSLD+=Xp1ltJP).VFmpD%pFcQJ\eX4dBa#<;#B_(:(MR@;G]?_AkSk=*;%i8j&LUo\CD-JAO'X*`"_i1VPI?B.'`90''U6do@o%N'3g6ZWL(>38l46q\h_$XSj,*@&GJoMVF#p&Z6*Lk?AZ+g[W-h-&:;3i,Pd%#YhXq.\HAToFn"$!s#:$o\OD88QA&2'%/Cer%No_T?;gO`KLGE<B[5jV'^Hq.>4^<^a?q;_!]i!!rCNX(E%A3PYbf]89@Y@?Z\^W%,#o\5s7TT?[<SjP83XQ0U)huB!P%W^>XHgAGdJIaFd/pEMKH1MVqe?uSL!%C:"cVc(uG^NU1R8hRGP;">D40X<!!@:MWUpZ%lAgH%6n!Sc9$H0X0tj:q66bdJn))>8_MFH7Rn#kp>QoKE19e%2f;a30`P6_9N\+YJ!a?o`*B]HgZl@/r;:rs4-BSX:Cd>TbW+oCk8DNNL%0D8-Za7Qt**j3Tl.\k3QiDV/PYhr;%-$'&:lrfENWOqZVT.5pT<hWt[b4FOP;=.kP17dOH-CZ2`+\$9sSs),+Wq!Ji4?1.5T0<mC%H`_q/`p>YHjp3s21]4;/>c1U>XF,`Ca/#bBT')mP.WT"MZ*%#2qUsCIJ,aEIm)u+j)4@/=gYkVQ6^M,^*08YdOnJI];<Dp+kf=K`%"SQ50JY@aH\,K]^Wlr4O6<SBF&<U66qJTI<;e/NI:B,^C#@ifBnC.mQ9q^,"j`5q@M_bg9b"+Q@+31TR.Pm6$[n;f-^\UNXL`4em%qV-PTJ?CHLotY!u(M>[-\$S4YJ<YhI)5WN2)HuNir;rJf?3DX.WL\](NGQ-g+rio<f6a1W+_4]/>?r3h;-FS`4_K9s=#+tnT[:)^%pk8c/;a=&EKZ)0&iOM/&?!I+F2j)4\FP[G&Lu9XA=@u$J/?ku\5E4.DfgQN39MumO>J;$="#-46rDc>LVj?W#&uOBE(fYH'%Z,uK%+%-PkGqj7fIN5*Op1oNP4RNT!?pV=_'3rR1$Wqp4QX'm>3NInEDF$Q?QPfBJo$+el65;tC[GS,h]57K$2duD%KNsCk*I`UmD[qbk%8HR$^&kY<k^`f_@Li_6k#VHb<+N#]_/rO_Ckt"Z5/uqk^k"1]\L_b@DcZAZE:e&Eg<P+hrU*L%XOF8*\:/sqXFc^(jo\s&+2cg55%lt)7!\j?Y:D[HdU6+TZM2I*ar+:6/H8K"%,W,nLD6adi")DAP!#-[%@CCADFO;"n;<OE/EWZ#2tpEfM.AS',7&sZ@i.3"OpXuY9t%5I,OiP/EIX93]ru48!q92W0]/ZC+rc3D;QFn$puQMXQ6lHLKg#6qqhD$A>-u[kuI]^&'f58+$EjQfF($Jgp7Z(iJaUEkr3C:,B9r%3kt$>aO'`4]NQAOap%gbY+%t")s),Shjbm#kD/fnH0u"c"gjcM!u-629CDbD#l(RD@q1t+j"_4V<'0MG8W3_g/h]+_A1er]*8fl_%;%=T0/'hQ!ZlqYc5?hsfQ2H10(o+AF#d=tJqu2j4MK(Nk&[ofn=Z55f%6W3QYrPT9HZBJFZQ;E;;[VYj$De)_JP\:l;Qqh7.$YaW%L6")(bp(Vk:of+4:iOSFZ39$[A.GGSe3-bD>H;=s-'#Zq21kmQ71%BChWndn.LF\%qgm0BkW##8G$/I39?3V*Okn[k/EJ"e5t.0a%KW36^Og$5rL$lM.F;R;)KLn&NWI#MM(a^4Mnq#^Cf;nTUl(0[$E?4YNh2F.ak18-EpgREUG:&u1PHID_@i(%W@i+O"a'6P9i#4"Z%R)88eCBht'>D>22Y<ATt79G6]D0WcQ@hR+k0!U>4FjG,)+6M23qYE3D7/Q?#FeU#/eok\,go%1$\6Cu>[2^Et]ugEif2UXN.DNJ:%T:i%N6l-XOYK5-WGE"D/V:cth[eBr+>'fZ!MIVZqA6l$.7t=3Yh95J]OO@#,D!rXB[.9hgU+&/_n>''Z$!;N^3,*aheBGJ%>%l@&%3L)<*UaKQuJ,D="dsgc=0?92]L("o5D<Eoi\Fj[<H,s0@i@I>#KJ]tOZ3NZVL?ua;I`BV$dHXnq=hmP"bEs/1qKs/:^nYmCjHr[.%kSU\9^ASi&BH9f^;PHW&.MZrCqe:j0R2n-r\]BRM[d]'WU2L,s"T]WLr26b>KFtmb.c_;3mtQhYiDMJ4?[tVh`k6G#iReDD&dQ"s%/Jb_WkE3Q;cAsMIdJ6^t'+G+B1rh#l-(E)M]fb+BFQhCdYbB)WO9C<`+Uc4,AUt`R\cjMS7eu+"<7RV6d+!+U<<>^)mVgXgQ>8d>%<c6i%CB-]i*1M]G0HTks;'t_D]`ekVg"Q2Y!E^2%M$De&Va,km:7FHN(,SY-o4pTWU[)H[N!.t&G"[ZD16S9T!<]GbO;n6cT^UDm%LZn?P>9iUOQB99d`S+i0O6Y6k\]>,B`odEE>ad0SN/gSf0dIEmq-'D*Nqk;78kK"g^bI(OJY%\eHmp19St?D,$P[YE1RgNlo@CGW%L09FMl11(`L&uIu'5;Uo4QO2hF;``lF+"C3jh>n`8sV)*fkg!P;Kc^PgsbB<VYNnDH[b+ZF%]]QBKH?)pVCf+0:a_>d)Mc1%fE9>%L:i5d8sQJ]5Di3:`Ea87>G3B94l'5t44fCLDHnVhW-ro46DF^i&:b]q1)`PL[3[m"V@0lWLUKHM#>X$p*e`^71<9M!SE`YY'J$"?%c6IOc+@da1Y)V03%;pE##b/7gRFd*$$V+j;W,lPP'jV\*721\;ei.rc5Tg1d6kU*R'mO6sYCU7oVQbm_X`ESoML_t;n5L>EZI:V&%U-!U`P`h$cb)VLND-YdI]G)Ts(4\2,]i,AN2;67k!GO$^@hksN)-Yael6Qc,84)8F&[uX_^0A$7G3f]\)]3JBK.W;^H*5PpJ^*L8%QDjJ5U3P0VBG<l[/Jf%&%AHDX?Tis$1A]4s2j.R0W^$bYAU7.kHF,8[cP;TaH>Gp4HmLL=V.4_#Gp<^(GmeN%""G6"KE+cs&m#`j%J8N-T4>'$Ea2S0@Yo$O4_R16%M&fT>n">\lSCiOu"?MuYgZ4S4\;0S%r-P6b2o6O<mGU7!1quLj3<961<A@l%nqQVM"uk5!E@7_+%lk#2cJ4dJH0P'kZPUNA'mRb5q)(#rZLQjED,WbSu&Db.DOqkP31h(g"]!j*u2!s&#,_b4VW[IAMW$`?GoX;Spe.PK&3Eeu$^J>Q$%Y;*%mHbkm$a]ar+Q`QOJ6FP]X22K&'X%%;r2o*4L7ZlJ2XQi6fO3Os_mFrRL3kmB%!.>"Ym6Irt0)lbL64(>q/e1__**G*h\nYaV%^;2?:I4`@NA+Y<&,lc\WEjo>IW\o@?m9mT^G$+9MV&I-JWD`_;]aVHn>",/r5Hc[`"Njh(/<:P`Km^@G5;o^]lR_Jk!''=1?1sB$%Tr$Af#Fib.PpU8,I8&2kIs:A0@nDhol2?5/&%O->)c)jc_piKW$asP9&9*/)&-_-P-j6T?">b@[C*JN6pU'N4dDtp,',Y]*(Gi+J%O>+#A:Jju7S25rooC0LVCAC<=7h$Nj*D4'L^mn*$3^l@h=8jShL`mE9dnY0N"J'*="ErGp[jb6eV-$Y\()_pr+@V<Oru,OdBL)p\%f7o%H,J\BDnsn8r14;ptplP+p]RQEVhUITd(B'XCmp1A\Wr_VBgRAGN0:=RoU-9V4`H,KZ3=O$XYT[3h2J%cN#>,chQ:'i2>-8B;%#Te^NA02qmj)(A@en0<qq<]W!ZT)L=/.U@schMhTnn:>qhOhe:E/1j222[.Nh]LFD2WNpn]!3+,mejLR1Vu<V'<t?i'[1G'g!Yj'%)s_'a]W\<fKXi"6;s.o.;H3%D2h@^KlY7E&A^Z?MRIhqd%aC(/5!P%X=H0)lF#g\=lAWi!!j/Nhr!gcrZlrYB2J%<]N/s$B22?"N%aP#F\,-T8eXn,71l;H+o^-3ia.Yhi.arq]e)IMs(*_i"Po(,t3>*;VE$]:<$nP44^5JT4kPcHfT>"*U#WGG*Z,a(tqoEGDAm]M?d%fR\suBEp`o!d;N#[!O2ASNU9LDCrnS,XnAaHe3Yl29JYLcCb_f6!ouKMfCi##H3ffj5D!I0]Y3V>df)HCq?qeI,$V-3O(#@3L8Rd%N$?M0<huI]=T3/][c&3nVr;-F5'?)0,$R,#U>nqmDPU>$==86g,bs_ShNe/\aY"?&!)RQX8j1aPmN@Jr:+FYl6(1[["as4A(XNWf%:kQhDg1<ZR6Z3sZDXj/T@A1XcJ7FO>ZB]<a9jkR`g87,r17:BJ#19d)lYWt[BTD`!.CL<\6e<cs)-6WCJdc3TT<JG#r+\g]1rpOR%jEoX+Y<jF#@Z9[E2jqN<VO_sQd[0RJeaMmu+*lWt0H2>Y@K*M6!W4J`aW=j?f1!YRQdBP&?VW2Edh3H^So=jCI;&s:'6b9X;,3[;%WI14P<fh>\b3>2-:%\a7"g50T'?ZtN58;;?LJakBi:GQYd$t[Uc(dj.?i^k%\UTM=$pYl-e^P%J5Jo]Tr\M_a+`F"gm7ojD@`-Fp%>`nN*ce;eM1Q"LX^j,0[+?jNSMLQ%>SN$*ON3J`3#DZplL:Lan7D2`XqAF;,Uh(6)AG<2)>5Zqd'S-T(!_a`t=4tJj4Ap9KDrtfQ%hV;Qnh%jo'r`T:plYa4`NST1fn<aO`h]nB#pB9b2+@u[c\=)fSf=&lo<]>B'ak1BbFD9@A_+e;!nagSoo(01NEEWVjKp1n?.o&b\%WW8dm+D?+FNcsUO")Q,[$%X*@<U"&c)-EC<JuD6OpMp,[pZK5-f6DgMVln[=e+EtN[As^eQ-arI4Q\HhF<nMfA8OkflPje+KB#Kj%A9#Y#-p/3nO8&[EnK#bM.k11?Nrk7a-#mrU^W>MHPMRc>)(=.o^e59=E3rMM0-bR[B!,&4W!q?b5V5PP.&mhFp,5e<c^*t86PCW:%N9VZg4,%k2@Sm8KY&HJ/qa+JGoq["5`q[2s@4As)BC'tH>8Va72DU3?+9/5h@YJ0k!F`+;p1+d:`>ttAO,KQWEmu0tG?2hj8[g<^%mth9bbM<DWWlUNl.5rD]jPWRq"&!uJ./cc_97T1l8R*Lm0#eo$E7oMR+sWrNEJA!/oF:_5-:fRNV2q=@889>tZ8i8RbCqS*i?YaU%\kd#FMP,\ocN-/@]9(bcC\Mq9@))bk4C$:LG+c&Pmcn=P?Y`e"'m(iAm8Gdjq!0ol)K<8N2$g@_?o<AbPXZqFb_%pReZ;g1f0#O6%jk;,@mfcn,J?8,+JGEq]k&*a`<)\4-3YbB6'crG$YfRhd/@BOIJ\n8U\GIZQMQ>gp1rV3nq84^_>"GG5TAOu#QJ]6Qb'Vi:AgMtE%OSUHJIHFK/Ma577eOPLLK]!2S`o:mp/EnqI*dh5Ek#<%!^.>8DqOdYt7-MB4FtCE8MPA$OP"kWoJFX/&OH=lA1*%IFmDl7\7.\[k%B7Bs_(1[dK6scW?"Z6oA_J_;^Y>$"&WmRQ"e8M,Y1)=G5h'4&(/8)&`H150tcH&gdHj;=%-C;t(7%n(k%0Q+Yj@P,^s&)nbqpKJ8%Zl`TgneFNW'fhQqEJ[^K@+m[)*8>:8"FSk?mu#mXR"`DCNMh5P*h&.nX.tiUWu8&pm".HkLSm$n2a&S<JF_t\G%7Oh9)`3?hhH5Y%T+\#?]cMsfF435]H&('<$"Durathpb"M1<0SK'-V`#1_3.iK]8/H^^2EpP5MZnJNfqUisPTsmjf'[WRa\+:QaVK=D<[@<DdV70rU%3jL#c:(pP#<oZh<.hRgpp3r!4Sptn-"r9c_/X4(h-fe;%=Kqq5f0Jc%5uQl<(KN*n2;SbleXgigW*K1(G*H(=;'ji%._FcG'!il0%;Nc*lgS^0\2\O^)Xo<'pI@fp=*$WnQ4tNX6MnlRT(sSEC&q34K!e;J(.=A?Z<U5WDhKjj8o!K@d"l77Tf'6K;O)G4?^V&r*lWMN)%A/Es?L?+rJNpPK$HFAIQ]$;A090#PZk6-%4hd?$=MjF4'B)M2d8U3KKf?YB1rD,8go1Zifd2.4Z)NkY[)Rnn7rB(2>f@)sHQOM2N%#+J9.=(^udT(d$HVnqt]nbHG+n2[P,3#28B8R]sP/;T;JR3Q@I)aM"AfgNSE4hC9*>*[L5ZfQr[rX>G?#_!j=A$ns19^R*ED!A8/%kM^#P'%o6W3#dB:0KH.rjpfb;=J79>i"L+lmH+[@@[PK;eFiNJp6%1:Tf-($SF"k`>FkPe*7_#Okk\BDkL1mWc`aH;i=$ZS52,^=%fnO@oHQ]8B[&'Uc$CYkq1)?#EP4;&_R!h@HbS]#D@`&1Th@+@VjQ)%2P4q2g4ti/MMuE,mqrV%).8-UeQF1OR0)75.=I$Z"D"O`a%Z(j(i]aZY=>geKk;bnQL_!Z<UHWM0f,t%rS[ZSq!KRa2fMaT#@!!rZPU5P(i.-6,X>$Ir1kqiTb!+ikn4^.a13'n0LiF",CN0)E(%N8e^h+fasL"9sYnQ)3<!rS5/[MBPB8D@YI;&F'A,5R>?E9a%.ED?^Z`k--H45r!21%n[AMB(R5A:&D.hn=Vs]'0Bk;gB&B0_`!X0%`iqW!mcOZWh&f@h&SW$5+Gu2##7XQh_.MD>=(<UUonn#E-qa*G$l3rJg1Ok(6NrT,W5)RA$Hi,Tn-O<++Qj-4$IbY+c539aXWmrh%qsmF##(-AD7gH&ns&OmZ9!^D5!aW/**>W=\*?:_;I0^$&:`lPE#]q/j.[$f/;[T;,8l\,H5D'5FJ:5U6`[VNB+`Fd(o9#C%g<U!L%+N'PJ5X9jAW(7:9+II#Pn%BB7WCo8Zcr$+,"piTN;XN[(oCiXoFHkH.,63k")_E-35dPfls,fkn6SQl:qB.r'\$&3RLF!Vr,]Q1J%5lh]AQ"OALWZ.]ZA2rF$&jeWt0WX6]O_icDMI>!K:YBkA*_'R-nt(cXW:)Sb9iD<i[n:)]ZAHMqGEKYXT>8K\+XmS,^RR,J*@Mn"%\sJSI"r`J0W?<+$TuV=19+$fCDT139iBYpn0bt5"FKg.9-lUl>o!Gr[0M->ab/8DXa"$RIS'eNZc)HRReRLmCqj&JPiu0MIcXs1_%%*ZUI>/p@/9GiIQ"c!XU.Tf\4AspcU\dTPoV4Ea:=K@?-6'T#.f![%]#S&d&L#S#TKEbD:E$.mljp.Q8Wa,6Jl:!1*jq1csBh4IJ%.plB@UrX,V4VZ6+[F=c,)D.!Z2'jP(R4],s!F+&P)aoW;eW`]=6X9;HaZ)'q%]E%-N@I0;EL8^ag#+UU5>pDgH7lV3j.,'@Q8_2E%Q[!*"^Suobo)2<?A_Ur6>F?a[Npl.6?uG[E*$c?'D?iC2d">i>b>e5r>s[lEm\1o(cq00WC5sTs#>m6CdZSFd`)%FtZQtF%:H3IU%4]'QQit__?-t*o8;-$Ku"t%7PddZ]XKJnPC7Z)a,%bI:;N>C'hPT,ELlo7&i?#Y[<VNNB)DI?QQR_?4K.*@KEj6Cq>R-cF.])c]i%`=.V6;<bA(DiL?!f,NhR<s:*;/+HHcH!_&=Z!_FfaYdrD:&R1Je)r8SS]4,&;^+;UM'=Uu%_FYX.opU0eWP$O!<0LRFYZ0W\V!bg%$E,6.A];O.d^n%'#pQ@oN.(=;g@.YVc*-H>5VoSY.kKLWMSc!@+l&oYpY`%d&NP/LG;6nIiAfs^(8dt'-DHk*Ne)D3-k]9&*Asjh%O]<OX-d&b!ZtnN<Y='2h(\n,sUF1K.dZh2iG!8<^#P*o1^5"\k<@4VOf*1p+rU+Z7A=Q+C!:h<Qk/U=hJaBDls.081POq3rm=%"@%NP`I_nfQ3]3\IRCjH1c3WbY5H3//)D*b?2rcUqU<T`6L5er-=_i!cd8%(?-9Z6q[:,$!G$*gPs=jiZc%'T7?@+5_i..O,$^Op3u,%8Nh2_6DRN,WQTD&.WKY!/t,GC7htN/jioj5C;IUQ7CR"u4[dX#3Wi>?%E;)h.7JGHbeb>]]A`)(Il3u\Bj]?>:3pU?-']5JS>YqB%CESX6kc4-:OrZ>0];cjr^Y5JJ9ULnOdlkcKb@XK*d7X\2h%!Y5q(0N,_8Ys,3cJ0RegOEI@H1"Da@[jG+94inZBI//.Ad+j6"fm:%)b`gT5(Z`(nJ[5E3[6\.F^).?6<j@ilR,[fjpi$TMh4kSKL_=e1.VaL)npDYI@ACGBnsEPSW+sp6s^oRRKP;i1+YtP[#nd"Q%1a<%c;&fp]RfNfD9,a85"a+ec3SJ?H%E:3^bc5ur:J^AU%O\'V1-OD1D%At:3o?,W41ZZPg).rYW%_R7^33%\>PHg0+!@VgF8IFetUP2%Y/k3`_/<!pETM`UJ1>M4RT+B2Fgf?PVWlXCoJ`33>(Tq_5*JW=rEAnUb'(@(%,/5TKDT?a#!O.WR,0p`W05@-?sP,$hBI^b@'@NV%bN<1CE'PU,HN</A'ANFQ)'rbp;WseJ[^1Wq[adp/@gR5Ok4gnP(3#AjR:H;5QO`o0Y+LoH'i6#L0m`oinY$^1>68V1@rcJ,faU6@%6-3qjP9V<+V$<!=h@'3%SUJJkAF"jQ#]$(Ur_GlF]6S,?V!8QnUC5'F$a*@n^foLQpccti"9u6T)fuq+/YRl4&(<c`Daf/F^*X_?%68VoTSWIBbCNTUm3%&<7QufHb-TZjr5khNBH;GHcYk,A:;#'k"3-Vi%-RZOkK%%\9@;0;ZVY@$noTC^nB4OEn%kO3.Z`ZR^!bG(o%L#n@&8OS9)H9?hsrrk$ee<(b`i7DXY3'Tq.G03:=GJ<o?oIBA-'./.2L0>V&@SFLH^8N*(TYgY"CT)JeX$niIn3])Od1-7(7dqX-%qL!V(noXd3.rpC=S!.o$Z->i0*2sf)[]7fYF#pRS)%Ia-pptT!*63\I=5(niZ9;/l<0t7aIJ'(Z*geU>'^M%sb]c4+pNdH9\*1BY%*>u%4qh#=b!7-T;Z`sPh*`#X2^$_rYSf?fX\DKBPq<nE^DQ^lj-%]c^fq<F\\_pEf9!48;_NlY6".#[D,%mF59AFe5CHoZN2<)Q;%Cr_gm3&/Jg\5.IAfN8m?2<2Wj%t]itj2?"qpGa&STE'i@0X8n%4j>[c!>"qu\B;!7Wad7ZeRAj^!L&sKQm:s!p43!B-ZV#]7Lp-<%%B.r^8*"[FIbnN&@SK%g&?.#\RieD'03=-.>Zf.7\2#0HAAc][NF^bZ1U+cJcM>o+b#9\5Y]A^n^$RVW4O1)8.PGF2T($F!\@+L%%T0BmXN/]HreRQbJIJL0snQCWN1ON*,:MTYj<PQ:L-I7nJH7ki%qD9B34cS1e^ci8.pXOA)6l?44iLh5hIQ@r?T_Hp'n`jBTI/85]%rdHndN!*o\eI4$rcB^6fa[gsAI[&>7$0]1LGR<YSKU*q-bp$W"Em0i)Cq8F'4th$b&!oF'[&]@>H"oO8Y5`==]gMoeF3_"+A4*oP%YV%[@h&b-9_S)uTEKL650Z1K*pAQQOnR>)(>e2S!AW*k=7p.ktNCZq&P!c:/Z$l'8q_J5s=a-gpCYMQ+e+Q]oZgocA`mCp&2Do^D%\g5]PhhABJT.V^t[Q):f[<$nf8e;j19R1@>oHeO10-]5u"gIX>qOH?t&6kqEVN4Ren!i^_<R(V<I:#ND2%j$nfKJ+fARD+f;V@S/%S@-9/]`VIhJPrl*E4Yu\nAfik;iG5tYX3)gZd,hV"OJ*Z/%sUs$]"06!e?Ph,$[^B6ZAVmUS1taa90W%cX7tuLsq>f]su+)J\Lg7%YFG=iPZoH!q8]t?@T]O<.i,#=-[A$nV]=+BhTA*d[lPh04Vg"S5,TqF*B")CkpU,oS^OHfD):h_rMED.!!6'4\2pBD9miZbRX<lh%qmSsCq%hV`9e"XbcCP0aW&C_4614H)=5<l=>IYiJ8)rKV_PJS"XZN/jLZ3KE%QTGL-i.t"X`PtXmk?etqNC9+L0N/PNC&C8bA&h)%$TpSV;5H>)M1SKC`$BU>'9!>LpGn*;>/_PJqI&.%?QI.o@`54^a-?T3?,EE?f0=TB6%7nE@s,ra1t=a?p\(>R5D^RJRf^&]N*o]Y%jCDWj&_+*>L7aMMbR'`Jr%NfXUA<Tq+jBM;&5VL7QuSh\o3hcu(5tdKL+k,)&Sj.V:cmO<rQ>bXk7>I7H3i%Oj'%KeI*p?61kaY1%Zg=;X9"s58W;"O,Tq&XU":qN=3_M=?Ok;n*V[0*4Jb)a;g!HnEp3:f?n$c=W!`!dKgU9Pf%jX^0.8c(JBQ8ngQdp@X:<i>gogjuC%?BXHn<_6'CPA[D?#]7RKeJ>-Ta+PR;3juc1ZB_rO[%m8FaAOiFSbeSUHilJl9jHa3HG:2^b''o$437'NSQc*6!a.*K=:-7<+4Y*,%knhuC^hL2EPPI55rK7^G?Mg_JD-fGT32HHXY`BrST&;7q#LM*_O[]>#9t&3Hf@5XnL8>G.dBhmYE!m\KJ0sCa6q-G_XXC(A3j,,B%Y_W]#I#Eg79,&6cMJb<2"I_=qm"uc;(T+J[!hqXd-+Ml);Ldo3QXB),NuE$E/gCDG6.f$."3#];Q,6TF;'Z>k`S`8*F"44k/0S;3%XC6No(S-s^VOJ6\j67kjihM)!LshQGM/QCW&Ur+VBlIa!hjlS)34;W_"&tCiZ7@V=KNO*N.#BgC.<E,\-Yi_9?C[P>da:ee)(3,!%c#C[uO&Fr9fEEAGFS\FCM)27ir4EXDFCZbtUcP)`"JKmT2&kI$Ws!9jnf0WLJoTQnP%PHl8?'dXg*+/+8Tjn,3$mQ@A3OBoa%+X$%98!B^d80pn_.s!U6JglJ1E%e:>g4A^^/@;P7eNMjgM(FhX%4JfZk-'(B*e`^DNQmaW(rT3.dPQl(oZpZPXkp7=jUmZ'jgPFH_.[>%p$1,S?(o-A`7i`Tkg#iB;+"#j^oLd)\#L958Bp[gV"/Ad74G1.Na<_;<ucW9=`oQ6ofeTV$N+q;@2\LZPG/ebo5)04;:HlTYjfKr%CYB>?QI"`9hp1_g)Fn=[+n&]TGTM65OZ5]E.Q2@G\sfg>8gZJ]Q2FPVr0AB!G+TJng&ate$(/;M;ctV@X:Ai0U(Thh'O2q6D/iEC%6o\)J<e`H0\[81J6)e1dfd<p-W,j0.2t*:WUi590F>Z)V>]5BSU9*+)p.@")=.a^Tjn]:fak,L#R[1,]?.J<Hmm<Dmq-kXlTut@]%Ple=:L"-@u9@eMPbfUK2E(`I=0@(AKlhRe/)8GDp]<HStAl,q(Wa"4`]"kC3)BuB!\3]f.Q<s6F4a6Or'=#$t_=!Sm[KC!Q#Skc%%CdCt!pX*nGnc5K:M_r',40$d*9&llq9UOp?;q-:pDbf8"U6XhMRN]u4q3tY8>r8!.T:<OZ?[M5)GI0u#jQNH?Mm,,Y72%V,pImAf%"Ia?!^S]`W4T-F?gos0BQ_nFSA/.RdkI5c@Q=$/q?Q(hpRsjQDHg[c5\M)X/3\oV\=?#FXp,s^Y8a#ra90cS/qQN2,2?qt&HuA89%b4o#(/6c[#`g04Koj!Kjn^\d&qieW^>]@`)ZWH1&:E:IcMpnGr02sCK+5_Gjk(_9;+1Lb+LOU+4jD2S,G4UnG)>A%aDLcd*Z@!,R%iS0T#I^P*jfCj@GLHSE(Agq0VQ]V"VX(X?O;+Qn;YP!ph(_n&-)T_>3.HWtGMQ)UR%[gqT[hKUi_@'H`-F)$BgXmf1iDOnTlq]\'%]]riKRma!'F*i`8lER]AT'L8Rl$M+-]'gO*>R;UNougiApP@Be(-!Mm*Fc:ieWDn7^>P_sSG:?:>uKH`N]9Eb:4s`74g9g,@h%sC%#^8sc29eS#b`07s'(to4,/%-6>AlW*4)`XDfT[r%3JG`k6P@/5`.9LC'H$i"1m3;$Mi$i<r;]\'G7ZB!'^RXM5haPN>Yf-4dk+Vl%"?I&G)pi9Lq$`C&EYfuSch/;&&_BEO;<M`K1G"iK3m(nL2eQ:63!0f(MDC4<'Vq]j"<rinJ`p#3,+$#"._X>ZB=#^Y^W\2O<cu0C%XqF\$>XLp<e,]beOec>/UMu@;hgb[1,Rtan7WfoTJZ:q&iH<hbIkI=Va0V9H?^meO8#J%Fo3#UeY3[,J7$j64Z*Vr`g4ImhYQka$%(?[^t.cG<&m>@CeG9+_)f`',sU0o%03oW_rE.,5lfIOUYe]\%YCs86S$F/%(W43;+/k3]GbRNktO`#Zgce,(iCN-joiDP+J;8lb`%2Ri`"72TP8`GZk+:T;e)pA?&%_nHERoNZA:>:*3Ddrdkr-i5r[Yr\Jg_UGl>D2OWdS\bd;%[+B_CV8j\1H@7352sQL9b,p3k=jOM%IT096S)Q!(qmpuEr,h1^>nhLSXn-ssHX?_$$[Ke+`N'J]k/kWRoj`d*UE$IP?2<>T(Q!bd^^;Yh[CG^.0dM\&g-X+%K3-/t(??@m%.O#EY7#IHZ>@CHpXOZ3Jk1U,!FR08&VMh9-SpV6\8;J60^p:<V--C6$-#43AN.VUuSQ"bWmcn0rs"kuEnmJ%@5<Mu`mjJdPYY7F=%@u#a:b]'?McT)WEFf36bhk'P<rB4L&a:f='\XBQ\E:sBB:t;pf`K&#d[)ib*=#RNK!<X-q&nKh:=l,mI;kdaLi$5aGjM5tB%V=@K%2IbAq=6jA&*Q-V#F+P\LX+:K/W^m]FiBZqs)i$60Lt:JhO#2^KRkKd3]@@0(b1!F[]SdW]j[2'r:5BQVW9SD%V9&dF:)Ba1ms5o\%AVtj8*NPmO8o4FEauoB)NO+oR]0IP`<'f<a'GuIW<MdQ_<@d9DC)`PV%IBpq'.82^7S>a1O3q@:2n`?[,im2&Xm,+-:un1tq(A%2%c=C'e)"q]^cs&$K.EbH:Jm=sqIhfSXb4]f%8Fd^#Q^9d_4oq%m5`&-kS1g6WB96b-<uTdDh/-D`IY$,kW5XIol!Nj0o#5<]^OMI'%)cmaD;em!0N;&=ZY@\9l7\ltO%-rB4[c2qG7BC.M4du#I"GjYK+7?U6Z$52Id!@^lVMMP?9_LE:UR"9S7f\+2d?ce3+D0`LFXul(%?P<.nQH6YdK"nH?2BDYah<q:Vgkj.+"qGS%kn'r5(Bi+s&X%M@jq,WMG8ubJ'`3^`AM=f_Km7)DLE3H7;5,YEpIUe6lkD/u`]YZS%P&opH?j,d*,04ES@dnWjL560lk@"?](pRLmQKk"eZ?*6=XkF._p&/NVO@>e,3Wh7(d6FkW8pMPG^@.n2Uua'9-$=6dKUYGo`[Z?3%i671GPC*IRr#WkPZ5gCcC:VFPBm.gdH(lUt;7O#tN-/J>KG"dNm@q?UNmdpRHEB-sWG^\_@N;MnTFI_AEO-P7Beru.*]S]nFeP>&%oJ+cH";>+onu@!cK.5K_AVG=\dnD9O>UNd8)DGjbFU<,e;pF:4QY8`X,HB*alH[dK^)bAFf'e:Q@_8mPr@hIA,Q`HM0#'JQGQ5?Q%id)<#*I\;cHU;p>)/]uONboi0pE9Hrs5@:Zs7@D]`%9AVh,@?;>kkXS=L`4=#Pl0#Y+rKpkI?cjQc^VGC+`=/Q=P`n0eRM;'M&ag%gIUs',2h?(,'i:@?VR>&M6X^UNN<hVj#gd;cs@ef?&SB$+)Veqb>X1-Wdud,MHPhj>CBDir.hIsd$0J2%q.=MF`6=I.IR1LMX,hm%\9.P*9K3F%YRhoX7?M'[#s-YC%eMjGE3.8]r=eTjnTl_-p%@aZlV5@gc9W.20B)'"9nIF*Oqs4eL?.tqq!*)5&jl2FkVC>o%%RZB%K0"ZR.7AWkm&$@=j/+D*FW\m_*$c_j&<UB?,RiC+$"ZjC/^0=!8Yg/<k14+]?0#'O$%EIo4.fi.&H04"qVM*(SdQP^OXdaQb(N_L%3bJ-+Zg`/H9kfRU?H%`C(qc'ePJT>nC\UFE?:orXl:cth>_gI$S.;t#IF.=HnZ.LGr@s@h.O:^D;S;:"#3LD:Ub-RCioL`"8TI,<%[Wg#5Xh8Dgb@bDUnIg%7PQa&a(,&q8j^'B_<2k$d5LOMm)DIY2cEL2+_^]<O<'tRjGQtQ0MrI)HN^%Di$?TAb#]>uNk&J!!pC6$b%F;4^/W<fH,:Q,9bh_G\9.nr1i&F/O>BY%c.MmepjKMY,>>*l<^RSc`nW]\nfH;j(L&Yq;F7pZt%rGqOR@/Hs81:])(RKfdC5e)U,%oXUSY$"2i]?Cm9R[gqB",UV+nO"oF`MhQ7_%-"GE,=#,l..0nJ"#hpREECjR<l>hGn\@.4G9'8kLMeU&?3X=rF-ohJB^WGnSMXss%c<X97k#!&W\]Zl7$[E6GMf/PgaHeb.#/WhPL@>O'Oqsb/n]Cs/L@q[jaXf^aBR!eq<9B#C:AVS$#hphnW"p4I&4qp\O.)8$Y"_AT%OaYBC:%$8-Q,>rKTj>A2!lOfI[f,dKDf;AM(%olKS-%[-%/')fp'm^RUuHS_OF].$2")'Qhc\Q+>QjE9@qY8Z+g@d*W9fC^;g('S%DC71-@>n^\[=_<f*5fe07G4u+m^Z)'\'3Lo=W*@(NJ6,-M(NJ[AJZnTE<t89ZuhHsme'&OE!6rE[0M9;S&&hf?;0KT!X8e?OtkNT%FMB<F+u..jcRH5om4uDPA2Yh[fAE[(3o/QE3+]+p@:pZI+j8JIBBp.q`>fW+C)E!dGY\_C$a[V)c79eWLa?O(pU7og#`V7h^<)L<%$@;OWJ)1q0%rW<gl$`;0g&g+?";G=BQD%W-_GT-^Q]hngJ7_LJol^L/%mo.UPsF$\A4*0k-P'HnDdL>`o6/ZO:)ZJJin=htnYVaf%@uucoZQFWGi6U;Z=@Y#M1#Quu^i0NDrCePm_@7mi6-7J.TdR&qRWue]#UGPu`l]+*J5!"BmQhQ-/HKSJI^@/^",J`Zdi:\@af<$]%J=3ggGTO3on!JUS,R3lK\'LJY`:ek$rmbU#,=E5^lW"NJTW3_%cfH#3.e_belfU.q-2?f_kCpmYga%I-rNHtO2RZ@pGe0'r*-=!Y%6:sis36X[n4(R5sN8F;da!VU[-`iR@[,;0M+XKUdM_lk?W0?CcXTS@aF8#\dbGIabB8C(t#fB(=HTkNm9jiiiRGc/dB,$eF)'Oi@%$,W6%H0>Tu?0OseLC`:e&gPOU+liVG,FK3N1P@=WVG8%'/4clEW;;0.,0QP2!%('Xpsg9C_9,;-R(>&sKIoZ]V)PAY7iUE4.C"?/%M^:WJ&p>ei[JEm1[T-ad9.UJ<Zi[%sWoLZ$!tFnD)WWsg#T7"_H$Cc=oX%63Nf`D1,@?."fj%mqoV'(.]fEB_T50.Vo,_XUq4qiB%$gc#?1s+gtEOXI`K])&W.$rp)4H(<10edLuA]TljeM3<L_b"MDfFWRIOKA7))VutHKi)#-Pt?.Vr1$2A=U#,kQ+c+p)d!!m3q"lb%d'etVStnVlb]ll7Nn&[QB`ZKkDl5"cY2++l);LigFEA54Pap@JS/YEL+W9%OmlO9S70L%=%rt2bWiY:tp#t;HH-;JjP`2t],sn(9%:+7<=(11nV0?f<iO>[TG"r"W2a1&9m=;tP'lonYa2[h5qABh\mm(us9]/OqFHGIj,j2lp&=8(mHj6[lQ>;F:rcr81G%_&h=hq<%J%Y?POAf4X[O?gu_3TS,6(+cnj*=--5))T.*(6HEtBCA)onrI@XT3@47A)NoR[SsG<GS5^+V!6X=1d6o:r`Qqq(W[j1ug&*S&lQ0;G%rXioU8b#2p]T(mSmfo_:R"M<idK-/mnCE0\ke<7[,%8_#Nt3D3-6#q!NV5KbX"-$QIK/hG.,S0a?)MF!8W%1#ID7di-D.EZ?*UpZ%Xn/kj?e_f$9)/"CP/J7(,#djnc$Vc_/"tXRq&H!2",`*!hlI-MU"4u*p?MU4=%trtFE#';nPLi1*up&rJ$6t0X>TNL`IOK;CDN_I%aE'M(\e^k!amcTSCutr5aq`BeAa1]hg%p"8m8((*A8.STd.k[WNm_4/@52mR/'X;HP3j-k(]q?_kaRlJkpjBaqt5aLC%7T$6&H.C%;q=a!L.#qb)jbbq^%qa7oUf[VET/[i1ZWtTr?Ku?+dpkF^Ts]G+^N>B[R=,rA9mM+O6mO+*U4CS?m*9NFhblrRBOe<pkl2HRNaC&%3FMI/[5J$c$4gl9J[p"r+aC?%T[iS5[s]%DW%AV.e*_.GdlID'1Y&s=c?ju05QH?#_u+4iAT7"Uc^\4d<NXMC(i4!bg2(WBQLifj%dRkVr?Nrg?Z']#>/AhN<+76Sh+[&(!WK1Pm*LCWFoLV*^>Bl\(>fuOc?IiW3[0sIWX\2%(2NGGaJu&6A3ZaV+JV2eaY=Wk+0QF@>%F\u5IWKhq0`Z!G5gIbZD6G*(S1PYgQC7)9[>_'heE6nC>j8@aoFch-k]t5<NZPWsYTOVOkf.fD/2C6.lH-rIWC/1f)7B$h\EQ`9E%g&'LI0)WMdCk^CohM*(]C[7$4U=kt?Tpn3[2L>*[32*75UADWDa599^NLHm,<4Who2[a[KJ8oa9djUBfLM1W)PWM[JP`ik;%FAL<%6Y8gl.H]F[\r=*kDpEa7rlU?I;9M?a<@-/M^+]k=pZr-?.]KL?pVAa<CX+n64/Z<UqQ,$YrU%:ECQ":?dLHWD_R?g]IhAManL=3V%/_ge5J?oL_)MtQQe8!GZ%N4^V9%keV:WhSS*Afu?Aa;!FBf97\AOe0-^k.cKE<`GdL5PTDqG;$A!0AAq"RJTu?qq-Y0%meiI#p10%R,eHjNMFX%:6.WlH4R>%Z8dbG9_3XPn"W6bUK?&q8\ZguWK,Hg2L%Plr4?1+2Bt;f40J0VT,W+.OFM1.3&h!4'9KCJREcT]o`EV@%+q#_-2M-7(2;<5r^8"dss$u9p&Z&q./AaQE(5hkT<bZRb\%%[UX3jAnEGFXB0;<\D)[1$Ug(Z-R3e_>)emD.NpE9ZDmL(=9bq*\O%h#kOV5ZDf@8mf@dOpeFq%/(;=DV@&lc5Jtp*Nm+cY+"FXb40aMhKuT=eDeQl)8)\2aPg=+cqQr6@rIU&K`pSRNa(=A6OOW5_()bE%@i<=$.gu%XPG?hZO0GLa#[e7.-m(0cp1c.Q3U2O,cOR,,a#Q7DNQ+$2MX/,aZTOTO-#nBNMO%V?_Ao7BikKmJF#T;Y*MEK6qt6Ff%DtK,J_Q)VT]<JH`*k&t,3FZW11"_+;A2Z]KQ>EBGKP[/$"kh5SL$7snh]*Q8>mSXu7JAB?[9)[-903^L<RmA+qnmJIN4n5]$jI+s%,n-WmCm3V#$Su1dW]e:)dKQaq,ci.\f(SiHIE63]:K"RfI9<P%qq0II+,);,XslE2N@K1^__dVOMN)]8.]os#%Tn4FeTHT0*h)XR%+sF7[f!Y!lmL8f4_i.XRMs>c20'o%6!K%oTF-]0D^IESIDL:6*mpCjFUYe"g/3#n8GQ5HKmf6!XqN]L/jhA**&;lT4.Z,9a_9e'u%3oiqj-:\l7o(DY;HT36P3T(Ja;J\<!.:M4[?*UIBTJ%2bmYr.['Ykl1!i?!teR=VFSYnp?-/o1aDj*>c4*69>g"l6B/9Qq:4eSo_%%X3ihEcCCF5a*!%g-bS=aCH9*1d9KW?OGuNIn!GY\T_pG76*j<`q`)B6LZ2tliUD4*mi05#8X`g>^-:e.#`b6n?tfI]L*kdCjA:F%_J7Zr`8uO]XO]>99l`AZM#4U#p.(o8\bBY\p&K<eC/ID#RI:;I%$G$Yrp2ZrHfU?;fSefqqK6fA==!SK==Mu$!e+fiT)7p*Lj^F%%Th_tqYo'lZ;uP20H-rW.mJ!,V:aZ\q>M"8;?1\BVhS+jBS:WV&CQINGeAAEJpVOs9>\<oD2i<Zbfgru.Qm2d1GI$X*f2D4ol0q,n%)NE5_7:_+6Y2H?gnDT:\LZ7fZ^TSSC$i&AW(u-.s?uuWt6"rGpWJmsf>?!Ne!7hUQU"UU^NCGWeCbD]O\o'iQLX9,g/74tD=fWFo%Wp>Q6CROsq0n%/apMq!4089uGRSq<(8bd%S&ELLZ^$:"!*s<B#WYMfdal4CeDW1ZM8+N.V>kW.^/\l7qMQ\Ob5Bq)'Z=W*U/Eb\-%kQK).,W2>*WHT]M\C/nbeDYK;-sK@X!RYINqD*;Fe[Ma9'MkaZqVd,8I\E]).J3AdWo_4lrQ.1:kk0l(Z1,^l^)665ZgrN%1F+6P%*6=qV5IV<%Il]N9jLdHZ?CX>XV\N0Ua*g`1anc^VYV;K*QpVnlj?)u:LnqZg.=CbN+m;kf^M+M8aO'O`otq#63o'X;iA=s56@*c_%$9,,IcHe8<O!+lMX$Eo28\"NdYsl).*Y]8@$Yk_b'_uWsgp*1b7B'`2[J/"l2Q1M.IU!eS)Q"7G%)&:;&bis'UYl(K`-u^;s7;l8%X"CIdUTGW(29`_\.2@?%)KYQL(>0up`ooRg^h6r-o><m]c=;G;SUO_7J@^6g:#5@aHN,d<p/:@mg/!4,o:CZ<-TjNt<?]d$7t\oI%&)q47]q:mCOn0W5?AH>=SG+751pZ)tmd$&eb!/q#P/G(3P\Z>SUagJ7%4f!$+>jUjMf-sq9\=KSq-s_LVcD/po,WY!gR'V,FcF8N%k9^Gtm%11eaD-q<ErV@HJ\disWk<D*QTcsXZq.#,.o,t>kAUS5;S?^k(Q"8/:8g^dnmRF$9GKQTEb*UGS)O&QZ,XP2Uue>U+oE@F%%qcj*Q^-/W7/R,%*,08Fn^T$aI]HrB&:f`IV_78,mTBUlP2^Zc*,G'l>cqsRZms:'_*W]\_!,&n>-]o$!$S?LMOMS=H?Fc-l@:aR%j+<0QH3L)RkZS\Y%FI8Q4&f!OTo+ophC[H@ZULSE`>Y,YR`Sli>IYZZWeaRCd05dV\O:9-<3gQI0L*PZ0Eg#s`h:#4jB:I5<R;^e%+GekrE.<@"#S4C3MhA<67\]rKTc=PWj+cbZQ"f;s/<BIeeE(1='L->ON\49>]Tljda6IB'LugS-aP^"E[e\_F_>)Y]:C[(C[OtI@%joDL"_`oQRQ"qp;HDV$A=&:OPTH+k`hXe:VpfkJ@LdklTTc.4MTAs_#CWip,+]qo,Sm2'<^\6I7n"Hi@<0b;/(%cb,Y(EidgVAEQ%(L,KkJWDCZKc3<o8Xg+G8m3`.!5H%f\E[=aq=`i7GQ\ig0i)XkKcal2;<Hr!ejTcN1LA"I:1^6!kp6,G(/b".@6D+Tq%-oJ[TT6+%^D`j8hj29Aa(>kYa.@YCeTF>YkqW7>n5t4JW$!*D;\9r_HKti5Ztld&T%f:.D8t0Cd:g`RN(1!XMls1s3_!Loh0<i2TmuI?YMX!K%hlXM*AS&8DXu_sX=h9_TIBs5CYh4<uh_5jOI^\]C?Yt/*M%!(-iWH*:(PTQJVWgFtB@WQ!N*^t&LgIna/B;u`+be@'HnIoCp^rBK%kuM-P[P%*I_u14!e7t@AB[CXjXInV^0JK+N!^?5r>UMp$N.D53'J/"Em?FiU3o*bC1k=BH:l/%-dhAGkGX!\(-=]P4Y[TnPUbkSI%!,GU-EX%ELY84HF;L_3"Q<Ipo-s>6n[4S%dPm5]8F<B\EYp';%r=#(`%)u##>65jigS<t6U*t360Ar4sRLm8`YKh'cR=VJ64cP`,%q:g)q>:.g&>:>\o_``?EO'*+hBg'+Y+g.)nW6I_-"/tC<;%t77[%m@D@>h3>M'.),LeK3bn1/rX1PW:=],PFA#?A#E5o0S2&p?i@%o*ERr]VpB2.,3"N.Pa[?F5i"p6EWV9(2-m)CFcga`V$$+InRYpJZ:h"6B.T(B\,W8qdeD*.\mCZOSq3La5k/OM;ZGGDq<WUmH-G4%$=,S0<gO3gl),7LW8Rd9,oBUlh[mradt!q;<*o`O_&0E<lGF4TQpUT9@moT<HQ0CKqJ[8Q2QVQMTnG[lV2UZ7"-#`r#4dp;bKm5_%"3j6n16Z(D:u6LdBa=k`BO#qA%)NCd<.'d;3:J8ak9>*p+cj(-JPKl@>"1[=e!*R#6qu\U[K!A8"Gj?)C,F=]P!LN/3%HW>2rBmR%i.e;Jf\B6u)B^Um-5tiirG!]WdfkB"(Y5tC+X.1je-422H$,%QH5X'@n0=q)nPgC2&26Ym7Kahld.TuBl!aeb#&N4UA`SgHmktqL%\"h70d7r'm43]nT2r!KdofP2]ADi+(XeTuo?jcW'\o1(qQTB&EGj*U:b>51t9?J*%WQ9)OS70u!pYU<&bRJE*)8uie.(TTD+8nJo%EXpf`(*M5/lGFK;F4U^r[=2,7WGrRS\<o.>M`i1D#NAcBItHnb\lKV`e3ZoEjP$Z5oh'sO\@Tf1JbgMpVe^YMNEZY-&_G\Ir;kCR%Nm.<d.\07ST7stoD>*QT/JkQq8N#Xi\Qb5bRo<rC#K'#^r'2eM:rCs;WroUl<l[?Z/%0Tbes)[4g*T$b@GNuWEt0\;qplaq#Z2Mo%gI3%Pc*.uT1!LJi!:s]!e:7,f[oM&hOYf:'_P=R;Af'\j8)*0IZWlI":He[U(![C&-NIdA3f*58XK'?Hm_Y#R=93BVGrB#Z.9p1$%f'H9-\lGibCWELkaoo3iEWPMr@Z@3-:a-8(b1O"d*;:7HheaN&(],e?iPWRo]-uTODoWVJ)iSmA.E<3(%N04P\IK+cA*Kl^%N_a7%+XD^Zrkh'ap^dLZU2u'X*Jr"].GQd7<=nP0[bh-Ds4@D8nKVRklGBe'Hte!C8\ZJ^d`jiXW7fLXD0$$;LP8j@#ht^SA"$$"@HVd[%KL7BQ%]=5uSO59J(Xt=!Qs*Z84$1if^',eLR3N\l@/k*em$sd%UE.l-&\8s-gnS@&,V+6J5E"r\qC>;Uo!ZPgINTm6U^t)])e3E>%a[(U;CeWjc[gBo'iFN:Q(@X45MDLp4>sk9]F+Bt=5-M3ZYEn#5YMss`k2s_-\XD4:i`lR=-2UB3_,qtu/N=8Q$`or711=c?Ra3R4%G(/mEB,^eb/4Ac4)<*uOEMDrm`A8OF$+0>&(SRuYSY31_1\R]7W$n8.67,UMFCS8Ia[5ua?m#/!,XIH5DroS!VA_dUOjbBaqO%a:%qCMJd6e=o>QPMoP2BqEAO223FG'kelXc>$13+;07gnQ^Go^Ah#-Pbh\=4^)Hi*Ftdd[QcX^@M((H'"J7qT@uCq(3_ZN,2r$F3eu?%miDMaGMqC5!fHOWM/^mkXZ!,)U)D,sI2Yf;BWj>j0ZWtR%*nJ;.p*CL+1]T21Y_I[::/]LKS@27D"k>SmCki94q5p]Lh^u^pX+b-%_##89IP$:Oipr3D;eT0HifuOSMTD&^ecg$s-e6,OdJ$0bSI5kaaeO5%U/+,o#4R$QJ->C+C/pWJlep.W8,,pTZZmH!8$r1?&HB+%%C`F_iXn#p-5O4"Fs)k@9(6EYD!$%T5(<ds.3Sta+g5te9M+j'V&P0k/p/cNA4t/cq5c,/nFZ,&U6hJuK08(EsVJDens+<u7jr=8O%V6^=dhe_J2EE^&EH[cUc\a#_TE\&FK[a1^7o^Uh#61j`dWG_[PUrYj3LIf4-cNF2-XSZ?3-s(PR4*/np8+oLXp9HaBQ6_A\dUnL2%Fh)rjf[1#7(RZ:d&$LQC/l_\?^b')!XsfG$=X%J[N&pM+<E6P[*MA'n@O?5Y"I>tne^mb@E<T04pcGLcNm?)=,ir-,YKUdU\fXVf%(ENHGN*:8.gB5"sTh6l:EHh6r[dN@HK@l2DR+FVd[j^R6K;d#flZ!J9aV4W@K.%\4eTD:cjIQ!m*Q&Wt_o!U[jF09$@d?"OEtFtU%qD2j-WcIRE#gVB(e\Xj8"3Cp^&Y2mTLOse$;%]UlDUX>D&rNHbF0"4%pN)JqriIXP^h"bN<FI%;=>PFl3EPW\DhjW]2K.&K/cq;$%0D5Bl6.PeT,J/P#F;?E#E^TO9XFmP?jV6<9.2R[`$HL>d;AHZ4Z0>#i-YR4@;j8j@K]M5Lc'e>q%i&7u\o"Q*7.9"_*gO#<28#n*%YU8*Z>FV<@fAA^."*6EgZjtP?2<sMoJ6^nO[ABWJ?p'Hl4B,o`,]=1Ho-Af/3fV/!-[#^Y'$+JV4LVQ<n:E@hX2GSBLitmm3,K(<%-)9bV7_d##Gi]D@;f:>X,N"M3crt2%#?0s`JSYs"4_Ei?/;(-kJdA!q/_Z1OWAbQ+@3$l#9fAJ/:4:G/*`:092%s=Y!BJ0;CnMpO%bjUscDl9-?'++-ihV[b5f.9?jON#aJbTLKUEUPgQ-V#,0/otn(+Y5!L1elmcrmA#?VS?;$OlLkCFV$D6L5M3g5/$IH)b:[G8sHcE%HW(Z(PK;*XqFQc*,q@JcQYI`u^Nr=:7?_]%UNrCp:[->3phI5^AW%OZ=B9hYr-/b[PNCB@kU!!f;##F=Z77&*3%TjKmcXY_?Cn3P%2-dl(LuMM/l4aG6`UYm?MR@&_?gXTVhj2iQkE\=(Y<DW&KTtT925^]"OSNH6"GgXs,r3KM7%6GKo[u$En-bPg>*M?V*f%!njO_+^%)&tPYeJ0l/+DU[Y?'M49-_6:^#dstpRZaomVUY,N%)B$Q28e+J<FjmIHj7n:,3?%$jCB[ae`+Jo36F6_9,K%]<CL!KG%?e9\7o17%^Da`Y-k8+L_Ve\/77n@YPC%Qnrs$EK,DN+ks(&$Bi^GN&In`Z\,r`Z0k[2S2'&C1P/<htd)&GiPN_!V2U9l>PV5"3LY[l;g8)-$K%0mqTjr-hfSg4FNI`rI2kH.6W:3.qnV$8ldW^9&*<1PV\Dku3JC1[@R;Pd!Q\r9sV,_VC6/Ca2?;JPg+'7CD`LI)K$"cod)qh7N?9%5ek.g5Zgt!:kp(FD&b"*aOjjfU,D0gE(eu?dTM>N1letsYeM>2!TZQUN&QM0EJDH1ZEu3\/$%f<^Nm1:L5kE&7#!#>S'A=*C9HeE%1IZXbcddPUP)(ot*lU1ZU=am)#C8gP<GAU9QY"?I+&Su)9VrtjRR[\O`UY@?;(:G(4b''d:[;G&C-#kjDc*Kl:eEEUeeH<7D8"U.%dB!p=RNf.QO5.\Lh#.!<[7)oPl6>ReE./6rWVo#1[>R0DdCT//m)/VP;dUWPFDdr<`1(O$TA5Q^\jdmrjg_)g>e5mjj>n:W_I=]"%N-t?4:*4%I#fWhEY(<.g3/-@3QW$LWZAD"XO$Y,"*$Q\4mO>4K\<#Mi02t7>2INd-*k]_&'V04n!3?g:Sio+*esnW^aA2gN.a'M4%nXf^!cIt(8Li-'B/XQXqH<NBV]uQ!*lh!<koE-`9idR]XOi\lTN&qaS8JE#JZEtVkQEWZ//uogi<Jd6U-;1!0><tSpHaiG$WrQ?I%']c>*"8%VuVVCMAVcnGdn._91!"&fRm&^YaBt`fY/g+R[[$^GbeR2A33sP'i]uZd!=aiW=K0tDa;PH/;b3?8>fm2D+TjIuL;5+K'%,@=C7P!ins#K"dIPWD\.B2ZbU/aF5]UKMdG):TBVG[PVcZLdd\oCO"e!W97+=4()\`ll+G2h=nm2:J@cgonkk&DHO896dOQ8?05:%4g"\gi;T@fh7.89H,,Ki(=<iQMt!r6ens!?)[i2H@u.kRA[?LnjEPPMqO@;c.>cs3Ro?8^WiP@]fP+frjYtL\Q*iHN5IE>_J*OS6%)G[DX$8pG\:K]MU#G1lYUJFCplE5P:I]V/>Hu=khchQ-:R=/Fq]ts;M]iXeaBA[@NqGX`nrC]q7m/3LUIslHCnLRBLLk9UGKBj;'%Bg_U!a:t4BNn;>Jnk7qhqhsLs[I%t?FHLI!j1CVU638f:?6<*&;rQmimM2(,<S`2+o$.j6E2\WrPtq!\_\&dK1=V4MWRh]5^JRk7%V1_Bi-ha!2?'YB>Ru7/m=Ld=DO\c<K\q/TRoI+H,16SU+\RHr8/PA:/4tNceA?Ed47)@CpM0HOr)^.apI,NW7kJ>qMTfZoin#0Yr%UsA.FJ<p2BHsjj9;cb.SmG>Bm=(4d>M/%1o?J:UdqP%ICKH=t'p/.W:qC<@d7mb4WITX*ca#`iQ`sl]WO@5V/I3.9o:HkL\N!S#5%2;Qp+*cg?i[og1)C+m2q]CPtcXKh4If%nNZq:"^.GW@j,j!^q$MrS`cPt5Yb%tIr#b+*Z)&N9Mn4_<C.@su6I?i/0<`P;!!jr.`h%Y=l%ZX0Ir>4"H`O;p,l7`'6oUMo&N4kM%*L,'GZ+RbUlblUC^dnT#'IWJ4p%>N8`1[YI\R%+ljMSbs,r^*ce=2eoFs4_eKqmDr>5%'2B1gFI7t2a$[Ih?f#cIp2-L>]TY&]4RhbobNdSiM+FkV#TH/!2;j]E12N1cG,5r%0Q49.&Tt8\Y;3Ob]9UbZjbVQ3n'%jd=p7$0%c\;^(P&#\o#6WJ8BZW;-O+Z]/GNukD`jg1cWVNu'M\k:G%=-daE@bsP*3*]F#><pm/5,HCpL+ql:0P@A<TeL37eDLcb[I+g(";bL%+3pXXAKn6jU$eND?$#)HN^]Xn_W*TtQ]AeGY'jSbb)oDja6:uSIVlaqKgtk-?`.5V^%P6faE`':EXJ71#sf?e\_X">KFitiW>?8X%=!-M7V8d7U'qk/PLB`ERB4'0L?b\bI55msj5*,XIql/;%o3gHlPS)1VINXR)fK19K>rt,cHXfmhid!A555q$+K3k-+ObgZq7h&D;%1Ame@_u?u0j[J]rArNruYt7ZUX<:C.5^LT0.oN[N!MJKT\6Dq._MV4>c46XWqTTfh(7%os7*&Ka,XpOq;hT^$_DQI$(09Kc\;l$I%X`oDTqO[G#U`YI&Q$\1oKc'GB_5pp7kuU$YbnZMY%spS`KHCPJj/JY8M.<A1pTGGl[?'4raf3;TAWlbG-5bc56u0CUL/0&DN0>*R%-_Rd)5]Il/NLC`dQLPWEAHXgdpjp0qE2#(9qPi6iL`#0M\5_VrMXel/l0])BpUQn\PG:T_afOP`="pZC;3XWP[?`#ha)qp9]tT1)%7o3CmU\EuGB"!eO.!I>#'RV2oL8#P=<onU"j?b"X#Cp.eNFB$CKf&_J2][2s>+m!A!BKWT*,DB=]BMG?%H)R(jgifr:&=U5qhFTZ%TKdo$"!R&8=suIY1WY%6#GO";Fr+2FI2s%S2k5MAm"i?<e_5f2bKXU!,$>M1m4V)WE"tEe!X]:>n9-n&G=UoX<O4G$cKj#t2QpbJ%-Ze0JDPgqK$o4:t:O2j$"'sTb8;c\:2W*LiB7G2[!<DDZH[;t7RsXebcf(BUe+tq$l]iQ@<C1FiB'[fDXn,ht$UsOl_,iF=.Uf_0%^Q43-FFE0d\*"Jgr+ja9c=p]qhXdJl/I9g9J>3[)X?t>^bKfYtYJ1dsf>"E.;"G@Z%Cs"1T)A+$4Kq!WWGQteA6)Yu9b.2I(O\eb%`WUFX6J(2_NK:3)pe@`f.GPqU>!=9l"=;#=5MAR&dF#K"h!DlPg/Cd)O#m7aP.;":,)cP!'YbLj]+9G/N7W>=%R;WYNLc+V#HO//%:!%(j.dS`.h\t=>5Iklc2JkRc[(h+W\Xt*%;fpE1=C!X;4_5o[T)1.)aJmJuOjJY/#J^4nW4*[eq3L(1UB1\cb#C3&oX3_-F4[IS%9'OkXat*hJSX^*mE+@?,H&h;+W0>dPnoSCa%@<!8&99(YaF"tbAgV)O8E?:L2$@Y[rMkqe&1TYdgca/+D=HpbFPWkW/]uB<iG2]q%A>/(Wjd&^q5pTYFALm:<_eZh.#-%F3'ZGD-V1Mk`q*qUtps[/4#p<RVrhjHb;/u[P\lHto.1E4*M%VeNTEcpF>;P@e2FP#t<hag.%766+2NYAhl\KC.\CsQ/6T3+M/PkT*SE!uTVNs?hA]M_Pc-WCeZPBpq8(Z!s^6-"i:6'Ot3Q,umIE_Yh^5J@GWc_ZTlZ.[t4\_k+Q%__Q[a%c1mS,)T..^Dcpe\)"'E9_kEcj37F4942F<S!L4jK)aXkrVj:ps4<c7Z!NdUP:]`LkaLNOOs/>r%!OV/S8,(q!]<>1epM+t%*>m<H2;JfhE_oIS:hCT<X(-lQ;8;sAA8r0ZA>i,M?e)]U%n(DelrC]Ep%!kIXsGZo0)0`BpH)T-p9]alF-NP88UjM4T@gUK"oPpn%dFuOAShp"8lWu<J"\ha9j&TZmUVL&Wrg[SgP43Q/j/s)]c&+,YG4I:4FP7f#?OW`G/SIZ>?)[-3Eilp_rf3t(T$g%RHr5Q&GF%;D%0c;j(Peno_N"]XI&LTZcCK[3jGM0po$PT3Fr'P7W5U@-t6Y9JVSOI\XX/J(L/)rJ*c!3P>aKU-VF2>gFS$?uSdSTP*%P;[#b@Eba%H?G?RErR'W28sC$Y/XSU+<tO\'T.([QRf/nqZf.tO1n[n`17G7BpS`c2nYanU<BqnhnLb[)E5BQ1lG3f?AuHIQ7FA.QcW?`0c:bW%Z:ou]hW?Yq3>mO(d!YK-\@\_uI:TJ#A1Wlu(V7T_1,c$sZFi0u,,PFjgDM>dgsrdc*^oI=_-rH\'f,0WSH=3hn.Tb8RPUWrK*f!4%`7"HF'<>fj`$4P(Ymt?h`/>dGdTXBI*3R!#b3gE.bg[-W3.e%TpJ`c.Co=O[[k=X8,n5AZ%[-9cFmVU?AA\H\VOa9M44QbTUq>be%:8;`L7X.=R*jJOYh5Lios0C=<&XTJ'<DVumkdl'ILPl0mM9Y0eAXuRi35O`c..JR$Yc&G`HC'sk`oO7kNais*ObtL8(TG.k#g$[5%'nGqQ7+iCMZP\gUlQl;f6f\u%3BL_5-`i1J@kOIC`HtCf!l4I1e4pTqFuAeYEupRC-aMp">^Tqr7lE($QJSf/I)cm@^->PWW2!6-%DHlOSeu]qJ<ZW+m[],IX[7mNH)LFmD[QB8CMnW[&\;5;l-fD0@.1%9LEjV<Q:jLjJdGh</c+0>a[r?*]\^0ue@s+kY<9A8cH]'X-%m;?Sn<<MQePMPBV2=/`DB8B/PdS!;lIihGh[CS`d2n("r51f3+fb5D0T8oXi=jQ=^*PL*WV;8d#.0!no2tSqRI*0Ye\066L7<Wd@%!o\s`hCFW[n>+"!l5Z4!g13%f"sVYKCa1,bgM'j(8%/dKY5uNAc0(l=/NI&gMM!13EST>gR`)K[4r+P$2Fjk>6S-tFp6J>nm`F1+%OQal]GR]]o@!!p^%@%_pDmhM)F%\D\"`);ALt*.^obDTUQS$,t38SsN9aKj/O*dIU_ZdfL[0qX3g%;M#L=tcQj"!B(/F#(o=oskW%(MBA'o1dOU?VQC''pC=k9-EGK8@BRSFCb':I9TQN([]jPZ,(*&2mK[AUkm9/,S;r>Zu^5lM7J!k=gn96>G:+h*LfZNLN/Y],V'n3%=PG_G:l03iDPLal6KHLB\*1Q56idAn'tuGilCfcC'1h166#%b-I?H"Yhc'\kl4SLuH+Btcrm_ppU%k!t^?UBUGCV_A;S@q"T%4^E%R=to`[`:sg=q"bo[)HkW*)Ms%r?%W%FtH%;%,^,^mQJ5_QQ73V4$_^8[`s.ejs57oM`c7MC4W@maS>2k&!]c=SdCDNUE`FA'eS!Q%%)("c_u$]E]u999iVej-\(r@n!T"@;2MTt^q`aA5f^/=YQ87C"7(>BbFq\3hY6UTK>m;(,b'!D0;S@4e;2+%P<lfplROT>d-tpE\%5n-^>!ffQqRZ-ur^t?[lIJ_3;s$,'6m6CU9s8MPtJ,fC1hVQ!FjY-YWhu;a+s6DoKp4*)@pO@SfQ[ene++O=PDu][;$;(0os1\Nr%Q[ehOhuE*Dq+q%cq_/!CJ,H5E=-EHGrqKk"nfRnps5D`4#?=hbWW~>%AI9_PrivateDataEnd