%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: avatars_geo_new.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: Irina Mir
%%CreationDate: 01/06/2016
%%BoundingBox: 0 0 800 800
%%HiResBoundingBox: 0 0 800 800
%%CropBox: 0 0 800 800
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Irina Mir</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Diverse people set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Diverse set of cartoon people. Men and women of all ages and lifestyles. Cute geometric flat style.</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>people, set, group, diverse, cartoon, man, woman, characters, happy, african american, smiling, cheerful, caucasian, young, diversity, black, hispanic, race, nationality, vector, illustration, flat, cute, male, female, glasses, collection, mixed, ethnic, person, ethnicity, muslim, old, senior, casual, poses, work, school, hijab, arab, asian, business, girl, guy, geometric, lifestyle, sport, education, hipster, worker</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:MetadataDate>2016-06-01T14:54:44-04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-06-01T14:54:44-04:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-06-01T14:54:44-04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXjH/OSnmHzFoenaFdaNq8unF5p457eEspmBRCrNQcSsdCC&#xA;rdeXtlGeRFU5GniDdh80Saxq8kUMMl9cPDbljBG0rlYzJTmUBNF5cRWnXMWy5tBDJNMkolR2WUHk&#xA;JASGr4161wJejeRvzt87aRrGlJqF9datpVo8itp7OC8omT01UyMCzcGoyBjtlsMpBaZ4YkF9gRvz&#xA;jV+JXkAeLbEV7H3zNde3iqXeYNesdC0uXUb0n0o6BUX7Tufsote5ynUZ44oGUnJ0ulnnyCEebx7V&#xA;Pzh82XUrGyMVhDX4FRFkan+U0gYE/JRnOZe180j6aiPx3vXYewNPEeq5H319yDtvzU87wOGa/E6g&#xA;1McsURB+lVVvxyuPamcfxX8A3T7E0sh9Ne4l6h5D8/23maJ7eaMW2qQLzkhUko6bDmld+p3B6Zvd&#xA;DrxnFHaQeY7T7LlpjYNwP4osuzYOpdiry388vznj/L7T4LPT4o7rzFqCl7eKSvpwxCq+tIooWq2y&#xA;rUVofDK8k6bcePi9z5b1X85vzT1OdprjzPfxEmvG0ma0QewW39MZjmZ73JGOI6KmifnZ+aej3Kzw&#xA;eZL25oatFfSteRsO4Kz+pT6KHwwiZCnHE9H1p+Tn5rWn5h+XZLtoVtNXsWWLUrNCSoZgSkkdd+El&#xA;DSvQgjfqciE+IOLkhwln2Ta3YqxDzP5vnt7l7HTyFeM0mnIBIbuqg7bdznL9rdtyhM48XMcz+gO5&#xA;0XZ4lHjn15Bisus6vK3J72cn/jIwH0AHOcnrs8jZnL5l2sdNjHKI+SJsfNGt2cgZbl5kHWOYl1I8&#xA;N9x9By/T9rajEb4jIdx3asuhxTHKvc9E0jVINTsUuohx5fC6Hcqw6jO50WrjqMYnH+wvOajAcU+E&#xA;ozMtpdir5+/Mn/nKm20fVJ9K8o2UOpSWzGOfUrlmNuXU0ZYkjKNIoP7fMDwqN8pllrk5EMF83nH/&#xA;AENV+avrepysOH++vqx49P8AX5fjkPFLZ4EXq35Tf85MWfmnVINB8yWkWmardMI7O6gLfVpZD0jK&#xA;uWaNmOy/E1Tt162Qy3sWqeGtw9yy1odirsVdirsVeU/85I20dz5FsoGVeU2qW0SSkVaPmsgLL9G2&#xA;Uak1FydKLm8IvvyW8428/p2/1e7U14MkoQlR3KycPpzWDUxdqdLJ1n+SvnWd6TLbWq92ll5fhGJM&#xA;TqYqNLNvzP8AlJfaD5fn1mTUYbhLfh6kSIwr6kixjixO/wBvwxhnEjVJyaYxjdvsXT2ZrC2ZiSxi&#xA;QkncklRm5DoSr4UPKfzyuZR+ibUGkJ9aVl8WHBQT8gT9+aDtuR9I6bvVezUB65ddh97yrNC9Snuj&#xA;+U7+9ZZJwba26lmHxsP8lT+s5dDCZe5xM2rjDYblNPK1vNov5i2EKEiN5uEZO/KKZSu/jSv3jMnR&#xA;XDUR9/3uJryMukkfL7Q96zrngnYq+R/zv0sa/wDnFr8d7LIsGmRWVvbqhAPGS2SYjcNtykb78wNT&#xA;kMZOz0mISiwlvy/03fjczDwrxP8AAZjeOXK/LjvXJ5A0oGrzzsPAFB/xrj45X8uHqH/ONWnHSPzN&#xA;1Oxt5GNldaM85RjU84rqFBWlOgkb78zNLPicHWYxGn05mY4DsVeQxJJd3RLbl2LyN8zUnPMcWOWb&#xA;J79y9ltEK11pskZLRDnH4dxmTqdBKBuO8WMcgPNBZrmxm35dyMYb6L9lWjYDtVgwP/Ec672ZmeGY&#xA;8x9t/qdJ2vHeJ97L86h0zEPzf1m50b8s/MeoWzGO4js3jikX7StORCGHuvqVyMzQZ4xcg+YIv+cb&#xA;/NctlDN+kbOO4kQO9vJ6o4MRXgWVW6dDtmm/Oxvk7j8qe9Yv/ONvnfkOV/pgXuRJcE0+XoDD+dh3&#xA;FH5WXk1rf5B+Y9B0O51yLVIZrnTkN00MKujBYhzZkkNPiQCo2xhrBKQFLLTEC7fYPlrUJtS8uaVq&#xA;MwAmvbO3uJQOnKWJXbw7tm5HJ0xFFMcKHYq7FXYq8d/5yG1Y/ovStOC/B+lrNi/flxdh9FM1+pzE&#xA;yMO4Oz0mACIn1JpLdQ8r/WPOVnrBs7R7WKIvPdSGX60s0e0Xp0PAJTqOh3r2zVCfpp3BhcrTW+k0&#xA;rU7O40/14Lg3CMhg9X7W3RuDB6eNMiLG7M0RTBfM+iS6P+UGoW1xbW1reO0Mt1DZc/q4ka5iFUDk&#xA;8fhUVA2rl8JXkDj5I1iL6E8r35vtEtZWXi6oqOB0qqjcZuNNl8SFui1eHw50E1zIcZ5x+ZOkw61q&#xA;trE8rRJYowfiASxl4tsT0oB4ZoO1AJzA/m/pen7FyHFjJ58X6GGeWodMXXNRsYVEk2mlFmaSCRSp&#xA;kHKMpK54t8PWgHttmBHT8O5rd2OXWeJsLsJv5o1gaPo02ou5jigK+q6xNOwVjx+FFI35Eddst4ZS&#xA;2DjicY7y5IyyhRrzS9UmANzZustVVk5KR8S8W+IfT0OHH6ZxkecSnKeKEoDlIPVlYMoYbgioPzzq&#xA;AbePIp0jrGjO2yoCzH2G+KHyH5q1abzD5z1/WjB9Ui1EwLBwPxcYoREG5fzUUZp82XjNu9wYeAUl&#xA;GjQXEVp+/WSORmJMUkpm40NBRj49crmd22ANbrNStbia7tWi9X0+RErRy+mEA35cf2iemGJ2RIEk&#xA;Mz/KvW30P8zbO7eH1LS+tG0yWSu6NPcRMrDxoYxX2y7TZOE+9x9XiMx7n1Jm1dMh9QuvqlnLcU5F&#xA;BsPcmg/E5VmycEDJtw4+OYi8M8zaz5l07Wn0nRhbIZLBry09aJnkuZ43Ie3jb1YUDcSpAods5zS6&#xA;XHjjt37vQ5Mkr+CAsfM/5iTSXNpH9QlvLPThf3ULW8rPHO9eFmTHcFeZ4nf8MyTCHnza+OR7uSAP&#xA;mvzjNaS6xLLp/wCh0sVvVvvq7em07j/eMBbn1PUB2+f0Voy6LDM0RuyGeYF7VX46vYfy5uLhLS3F&#xA;1F6V1fW8UtzFuPTmEfJ0AO9ASRvmR2ThjhnKMdxL9DidoxM4CR5j9LOM3zpmAfnvIv8Ayq/W7f0/&#xA;VeeEcErQEpIj70p3AzG1OURAH85ydNi4iT3PK/Mvm78wLjUg/l6JbfS4rmezkcxTXBLW05geSUx2&#xA;s6xqXU8QrFuO9M0sMcAPVz/Hm7iU5Xsms3nzzHIkdjDogt9RuZ7mxivXuUazE9okrysnBJLhqCBi&#xA;oaAVO2QGKPO9vx+ObLxD3MftPNfnb/Dmow+Z4PUi1KO5tLOb05IJVkNnNMh9KS3tw0bpE3xAlgaA&#xA;jLDjhxDh6fr97ASlW73z8urgz+RtCqpR4rC2idT2ZIUGbvT5eON92zpdRj4JV8WRZe0uxV2KuxV5&#xA;H/zklpTHyONXtgy3FleW8kjqKgLVkVjt2ZxvmJnwi+Lq5umzyA4OnN4T5i/Mm780z6fZaiz6bowM&#xA;a6mlqebPVv3kgB41AXdUPfucwsWERLn5s8pDZN/Mvkr8oNL0CXUNM85S6jqDRlrCyiiXm0v7AkFF&#xA;MYr9rlQ098y5QiBzcOM5k8kkt/OvmTX9AtvJPH61dX91DBDdSvV2VpF9KI1H+/KfGT02zFjhHHYc&#xA;uWoPBRfZelabDpthDZw7rEoBc9WIFCx+ebPFiEI0HU5spyS4ii8samPeZtEWVJNQhJ9ZFHqINwwG&#xA;1fmBmu1umsGY5u00Gr4SIHkwy7u4bWEzTMVjBALBS1K9zQHbNQA7xRsNTs7p2iguBcug5O6A8QD0&#xA;HIfDX2riRSlkfl/RV1CR5JiVt4iK0/aPXjXMvSabxDZ5Bwdbq/CFD6izcAAUHQdM3rzriAQQRUHY&#xA;g4q+ePzT/LuHyxcQ3unF30y8d14sK+i/UR8u4Irxr4ZqtRg4NxydzpdR4go8wl3k3yn5U8wW8sep&#xA;a8ulXqtRYJkUI6UFGWR3QE17dcjixxlzNFnnyzjyjYQvnPy95d0O4gtdJ1gavIQTcNGqiOOlAoDq&#xA;zhid6jtkcsIxOxtlgySkLIpmv5P/AJcxX3oeZtS5rFBNysLegCyNH0lY9eKv0HiMyNLgv1FxdZqa&#xA;9Ae25sXVrJ4Y54nikHJHFGGRnESFHkyhMxNjmwXzX5U0uYC1v7WO9sn+KMXCK4DDY0qNm9xml1GE&#xA;4pbcneabOMsd+aRWtlpeiRiy02xayt6+ofqsAZXNKHlxDHlt1OYxJPNy4wAGyy08peV2vF1RNFt4&#xA;r9zzDtCgcPX7VBUBu9euHjlytgYRBt6To+jRWarM9TcsvxV6LXqBm402lENz9TpdVqjM0PpTTMxw&#xA;0Jqemw39v6Uh4kGqsN6dunhmPqNOMsaLfgznGbDzO78kaI9/OZIJIZ5ZS0whubiBDIx+JykUiJVj&#xA;uTTfrnPkyieE9NnejhI4gmEv5Z2w09LOS3hGnW7GeFVkdZElJLNKJw/qcm5NyatTU1OZR0eYerZx&#xA;hq8R23QmjeSdFGq28kEEj3CE+lJPNPcenyHFnVZncKeJIqN6bd8x8QlkkI97fllHHEy7npVjZRWV&#xA;ssEVSq7knqSe+dDhwjHHhDos2U5JcRRGWtTsVdirsVUrq1t7u2ltbmNZbedGjliYVVlYUIPzGKgv&#xA;k/8ANb8ndN8sX002j6zay2rcfR0qeUtfh2+0tEThwA3DOy+G564OWIj1dzo9Pmzj0xPv5D5l52+g&#xA;airKtIzyUNVZEIBP7LEH4Wr2P6soEw5n8l59/Ty9z6H/ACV/I/TdNmtvNGrXttqt4ih7S0tyssFv&#xA;MG5CQyqxDyKAKbUU+OxzNxYxz5um1MpRPCQY+97lmQ4bsVd1xV515x1jyfpdwkUV0DeyseVtARIq&#xA;Bacmen2KVG3XwGa3UaGJ3hz7na6btCQ2ny7+qV6T5n8oT6lFbXl/whm2juEp6RfrwZ96bA79PEjK&#xA;NPojLeewcnU68R2huXqVgtktrGLIobYisbRkMpHjyFa/PNvCAiKHJ0mScpG5c1fJMHYqg9ZtNJu9&#xA;MuINXSJ9OKE3HrkCMKu/IsacePWtdsjKIIosoyINjm+a/PFj5Htb6P8Awlqq6nav6guAkizJE6sA&#xA;FWVRRgd+5+earPCMT6XdabJOQ9QTL8t9P/Li5uOXmnVIra99YLZ2FxMsEUq0BqWanL4tuIYZPTY4&#xA;S5teryzj9L6LgigigjigVUgRQsSIAFCgUAUDalM2gDqCbX4odiqS+avMflbRNPM3mC7itrdgSqOS&#xA;ZHp/vtFq7H/VGVZeAipcm3Dx3cOaUWunwatYWmraNIJdN1CKOe3LniwSRQw5V/EdRmuyaEk3Dk7P&#xA;HrgBU+YWjzL5H0HzBHoWp38cGtmJJwZuSxUkZlUCQj01b4ejEHMjDgx4yL+pxs2bJlB4fpZmCGAI&#xA;NQdwR0IzOcB2KuxVJPMf6Ciha41CYQSIuzKRzYdhx/aynJ2eM55b97ZHtH8uNzt3fqYj+m7PiI5L&#xA;hvSFC8INWVa9eJNMwo9jakz4D9I63s5Mu3NMMfiD6j0rdm2hLo5thLp0qzCQAtJWr0O4qNivypmd&#xA;j0QwbVu4stb4+92Ezy1g7FXYq7FXYqkHnm38y3Xly4tPLpVNRuSI/WZ/TMcZ3dlb+ag4j51yvKJG&#xA;NR5ud2dLDHKJZfoHxsvDpfyK8/Sg844CWNS3rita1rWmYH5Wb2H+iDS1Vy+Sn/yoTzzVSILYcfCc&#xA;b08dsfys0f6INL3y+TIvJf5afmV5a8wWuowLCIFdReQrOKSQk0dSKUJoTx8Dk8WDJGVuJr+1tHqM&#xA;RgbvptyL3LNg8a7FWLfmBpnmXVNMjsNFKokrE3jmT0yUA2QezE7/ACwFIeZXH5N+bJwokjhoprtM&#xA;BXahBoOhyNMuINL+THmlZxMkMCkCnESgLWlK8aUrTauNLxBl3kHyl5z8vasGuBGdMnBW5iWUNQ0+&#xA;FwviD+GEBBIek5Ji7FXz/wDnh+Wv5w+efMbx6c0K+V7UILG0a5Eau/EF5pI6bvyJC16L8zlOSMiX&#xA;IxzjEebzeH/nGP8AOCAkwpaxE9Sl2Fr9wys4SW0agBbJ/wA4v/m7K5eWK0dz1ZroE/eRj4JQc8Xs&#xA;n5CeSvzW8mzXWleZXil8uPFys0W4EzQTqw+GNf2UdWbkOlQPfLccSObTllE8ub2bLWlbK0ixO0a8&#xA;5ApKITQFqbCvauKvnPX/AMnfzY17VZ9U1P6vPdTsSSbgUVa7Igp8Kr2Ga6WnySNl2kNTjiKCrB+W&#xA;/wDzkBp9hDpul6mltp8UT28VutwgESSOZGZDxqG5MaMPiHQGmWxhkAponPETaD1P8lPzX1a+k1DV&#xA;Hgu7+YIs1y86cm9NBGtaAD7KjKp4MkjZboanHEUHqv5Q+XvPHl7TbnSvMbRvZRlG03jL6rIDX1I/&#xA;ZfskDtvmTghKIouLqZwkbi9AzIcZRvTci0l+qgG54kRcjQcj0J+WShVi+TDJxcJ4ebAbjyT5guTI&#xA;ZwkjS19RmkqTXrU5thrMQFB0R7PzE2efvQzflvqrR8DGld6yep8Zrs1W71w/nca/ydl8kda+UfMt&#xA;rOk9vwjljNVYOPu+WRlq8UhRTDQZomxz97PYy5jUuOLkAsoNaGm4rmpPN3wut12BLsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirHde/MHyfoMxt9S1KOO5X7VvGGlkHsyxhuP+yplc80Y8y2wwTlyCVW/wCc/wCXs0gQ6g8VTQNJ&#xA;BMF+8KafTkBqYd7YdJk7mXadqenalard6fcx3Vs+yywsHWo6io7+2XCQO4ceUSDRROFDsVWTTQwQ&#xA;vNM6xQxKXkkchVVVFSzE7AAdTirxzzH/AM5Vflxpdy9tp8d3rLoaGa3RY4CR1o8rKx+YSnvlRyhu&#xA;GAlK7H/nL7ybJOqXmi6hbwk0MsZhlI9ypaPb5YPGCTgL2Lyr5v8ALvmvSU1XQb1L2zY8WZah0cdU&#xA;kRqMjezD36ZaCDyaZRI5pxhQ7FXYqteSNBV2CjxYgfrwEgc0iJPJtXRxyVgw8QajEG1II5t4UOxV&#xA;2Ksd1T8xfIul3kdnqGu2dvcShmVGlUgBDRuTCqrvt8RGRMwOrMY5Hox++/Pz8qrSX0jrXrsOvoQT&#xA;yKP9kE4n6DkTmj3shgn3Mh8r/mD5M808hoWqw3kqirW/xRzADqfSkCSU96UyUZg8mMsZjzDIckwd&#xA;irsVeRfmD/zkr5K8q3kum2MT67qkBKzR27qlujjqjzkP8XjwVqd98rllAbYYSXnEn/OYmvmQmLy5&#xA;arF2Vp5Gb/ggq/qyvxi2/lx3s48gf85SeVvMWoQ6Xrdm2g3lwwSCdpRNas52AaTjG0fI9KrTxbJx&#xA;ygtcsJHJ7ZlrS7FXYq7FXYqxj8yPMsvl3yje39u3G8bjBaHwklNOX+xWrfRlWafDG27T4+OYD5bm&#xA;aZ5WkmLNLIS7u9SzFtySTua5qbd3VLMVZd+W/mvUfLXmK1k5Oum3kiQ3sTV4MjGnPfbklag/R0OW&#xA;4MvDJo1GETj5vqDNs6V2KvBv+crfNGpwaPo/lPTGb1tclkku0jJDPFBxCRn/ACXd6n/VyjPKg5Gn&#xA;hZfNEvk3zTE3FtMnJ/yF5j71rmIM0e9zzgn3NR+T/NEjcV0ycH/KTiPvagx8WPegYJ9z0r8h9U8x&#xA;+SfzO03TL+N4LHzD/olzByV0diD6LjiWXkkhA8QGPjluDKCdmnU4SBuH2Pma692KpP5h1iSxgCQf&#xA;37mnM7hR1+/MTWZzjjtzLm6HTjJLfkGGSzSzOZJXLuerMan8c0cpEmy9DGIiKApfbXdzayCS3kaN&#xA;x3Hf5jocMMkomwaY5MUZipC2caLqn1+0WRwFmGzqOhoaVGb/AE+U5ICReb1WEY5mITDL3HWToHhk&#xA;QrzDKQUJpyqOlffFXwHq1o9nqt5aSQNayW08sT20jcniKOVMbNQVK0oTTNcebtQdkJgSrWd5d2V1&#xA;Fd2cz291AweGeNirow3BVhuDiCgi32h+UHnWbzh5Hs9TuiDqELNa35AABmip8VB05oyt9OZ2OXEH&#xA;XZYcMqZpljW8s/5yJ/MOXyh5GaCwm9LWdaY2lmykh446VnmWndVIUHsWByvJKg24oWXxSSSanrmK&#xA;5jsVdir7G/5xu/NK582+XZdE1Qg6voUcUazb1ntiOEbtUkl1KUc99j1JzJxTsOJmhRt7HlrS7FXY&#xA;q7FWE/mxFFLo2lRSgMj6rbBlPcAOaZh64/u3O7PF5GH6hrjwX31M6VdXK1HGZERozUCpFW7V3zSC&#xA;O3N6Ay35IrUrhLC2+sR2T3TKwHpwIpcf5W5GwwAWkmko1q7XUvLE1xLaS2pjliaNJwA1RInxrQnY&#xA;g0yzHtINeTeJe59c6R5R2KvnT/nIVw35q+T1FDxtZ6kEHcljQjqNqZg60+kux0APECw/T/NFxd6s&#xA;dPbSriDiWDTvx4qF6FqHoc1ksdC7dvHKTKqKK1/W5dJhilSxmvFkJDGLiAlKU5V8e2CEOLrTLJk4&#xA;elpbb6hNceffy7vTbm1ZtTVpIpyAUjE8PNmNQNkq2ZekqMjv3ODrblEbd77DzbujdirEvNzqnJ3N&#xA;FVqsT2ATNd2j9A97s+y/rPuYxa3lvcqxhYniaMCCpFemzAHfNQRTvVtzf2ts6pM/Fm3GzGg6VNAa&#xA;D54gWrNPKZ/dL7q3/Es3mh/ug852j/en4MizMcJ2KvmSfyn5Mv7bXdT8xVhmGtagjXyO3qEm5YBR&#xA;x5iQk9PhJ8M0mbJLxDwvQYMUfDHEpad+THkrUYI72y1O8uLKSvBlaIE8SVIJMexDCh2ys6iQ2IbR&#xA;poHcEoyHyJ+U0eo/oN09bVOnF5pw/Ljy48kKx8uPxcevtkfFyVfRIw47rqz/APIDTodJsPM+kW8h&#xA;e3s9XcQhiCwVoIqV+gUr7Zt9JK4Ol10OGb1XMpw3yn/zl5Y2sXmvRLiNpjdXdrJ6wklZoVVHVUES&#xA;MeMf7RbjQHr1rmPm5uVp+TzO3/L27tHhl1hJmicmtvYr6slBT7bmiL12pUnsMwTnB5fa7EaYj6vs&#xA;ZBbflZp0l41zc3DC0ZuUVnEpSifsqzsWatOu1cpOpNUG8aQXZ5IKfyXaape6nLFBcWyxQcdOtjCY&#xA;o+SRgLVqsalt6EA71yQzGIH2sDgEifsZR/ziXJPH+Zl5GoPB9KnEwodgs8BBPh8W2bHDzdXn+l9e&#xA;5kuI7FXYq7FWG+fdNN3cWckysbe3ZZYiOglRid/mCM1PaIlxA9Kd12WY8JH8VsRvPLeh3mpQ6ndW&#xA;aS39uUMFy1eaem3JeJB23O/j3zXCZAp2ZgCbV76xs9TtZrG+t/VtJKCSOSnFwDyHQ9KjvgBI3DKU&#xA;QRRUovL2lRaX+ibaAQWJaqwRkgAl+dFrWg5dhh4iTfVHCAK6PUNDjnj0m2ScESBTUN1AqeI/4Gmb&#xA;/SgjGAebzWslE5ZGPJHZkOM+afzwsbzTfP8ApN/fIwtbu+b6vckfCQ8PALy/yTQUzU58chKR73da&#xA;bLExgBzDHNZ1Xy15ek+u3MUcV5c8qGKJfWk3BapArTxqcxIRlPYcnOnOENzzQWn+cvKvmCZdPmjD&#xA;SO1YobmMMjMOnGoI5ZKWGcN2Mc8JmkXLZm889+W9J0+D1bmOK6MVtEo+FWjCrQDoAI2+Qw44ylE1&#xA;1pGWcYzjewFvrLS7ee30yzt7huc8MEccr9eTqgDH6SM3kAREAvO5CDIkcrRDlgjFBVqHiPfthPJi&#xA;Kvd5vPNcSM4mdixYlgxNeXf6c5qU5HYl6uEIjcAJXoGhTaTpZtknu9SCSSSGe4JmlPqOW41A7Vyf&#xA;BKZsD5MeOGPaUvmXatoMt5d6bdSXN1Z/UZTOIYmMaTVUrwlUj4hv+vAYyhsRz70iUZ7xPLuT3SJr&#xA;pdRtVhZq+oAFB2oT8W3yyennLjiAerXqYQ4JEjo9AzoXmFC/illsp4ojSR42VO25GV5YkwIHOm3D&#xA;IRmCeVvKb7y7Gun3+mwmXTpLxpXlmiJWVJZiS0ilq0aprnOmwdxyenFSj6TzVrSEWNlbWrzS3BiR&#xA;IvXlq8jlQBydgOp6k5EmyzA2Q50dzr66sL24CC3NudPDD6uSWDeqUp9vtXDxbUjh3u2WeRNEWyu7&#xA;27ghMMN4zTTsa0kmbivIV/yY+2bLs+MuLiPKnVdpzhw8I+q7Znm1dM+ff+cuvKVzeaHpPma2jLpp&#xA;bvbXxArxiuCvpuf8lZF4/NhlOYdXIwS3pjF3YWGq28BnX1IldLiGjFfiXdT8J980IkYvSSiJDdF8&#xA;m9QLxNKV57U/rgZIaz0yztJ7qeBCsl4/qTmpNWAp3O2EyJYxgASR1ZD/AM4seVW/SPmbzg60guJn&#xA;0/T2/mUSetMf9WvpgU8D4Zu9NHa3ntVL1U+hsyXEdirsVdiqhqFlDfWU9nMSI50KMy7MtRsynsR1&#xA;GRnESFFlCZiQRzDzC91bUvKd0H1eCWL0DSLUoomktplOwNVrwZh1RunYnrmllgyYpWHfx1GPNDhP&#xA;VSP526bqKzWXBrfl8COI3cyg7fAq8iK+4y3Lqcko1Q3acWkxQlxWdmQ+T9J1C+vYtUu7aSysLerW&#xA;0M68JppCCA7RndEUGqhtyaHYDezR6Qg8UmvXa0SHBH4s6zZuodirA/zq/LuTz35Jm020YJqtpIt5&#xA;pjMeKmaMFfTY9g6My17Gh7ZCcbDZjnwl8qWv5i+bPK149hq2mI2rWNYWF7EPUXbpKkisH7Hpv198&#xA;1/g8MrBp2nj8UakOJfffnbrt/bKl3pun+vG3KKS3gS3UHxZY1BYj/Ww5IGfM7McWQQ5Dd7N/zjj+&#xA;W/mGLUbrz95pjeK9vITBpdtMCkgjcgvMU24AhQqDwqe4OZWDFwhw9Tm4i9+zIcV2KpD5m0Z7lFur&#xA;ZKzJX1EUbsvj7kZr9bpjIcURu7Ps/VCB4ZHYpF+lhFbrDFGVdRxJbse5pmONdwwEYjdyT2fxzMpH&#xA;Yl02ofXYPq4hYzsRwC/FuD2745dWMsOHh9ScWiOGfFxelk3l/SPqNrylUfWpN3OxKjstczdJp/Dj&#xA;v9RdfrdT4ktvpCa5luE7FUj8xaFJe8bm2obhBxZDtyXtQ+IzA1mlM/VHm7HQ6wY/TL6WB3+l6ml0&#xA;/C7ltGNA8LRo4FB1UMNq5qCDE0Ru72ExIWNwnOieXb65SJSXMAHxXUvVh3I6VPyy/DpZZDyqLjaj&#xA;WQxjvl3M8hhjhhSGMUSNQqj2G2b2MREUHnJyMiSeZX5JikXnry5L5l8o6poMV4bBtRgMBuhEJyqk&#xA;jn+7JTlyWq9R123wSFimUTRt87+QPJf5kyWFzZ3+g3cNvpqH6vd3KiF5Y1NFQRMeTMF/lr4daV1W&#xA;XSSJuId1h10AAJFi1z5j8mRak1hLPOinkZ0/fLCsgahjZNmDVrtxplPh5KtyfHx3Vsr8y+W/zGNt&#xA;BY6F5dvJ7nUbcyw3fAJDFGR+07lQktOiPQ/qyeLRyu5Boza6FVEvafyX8kaz5M8jWujardrcTcmu&#xA;FgEaobb1qO8BdHkWQq5PxA/Kopm2hGg6TJIE2zrJsHYq7FXYqlvmDXbTRNNe9uatQhIohsXc9FH3&#xA;VPtlGp1EcUOIteXIIRsvLtQ/MTzDeSnkyRWrVDWqLRSp8WNW/HOdy9o5Z+Q7nCw9ozhMSobdEIvm&#xA;l4CJbKAW9yPsygg8a+GwrlA1MhuNi7TUe0HHAxjCie83+hkPlr8zb1biO21rjLA5C/WwArpXuwX4&#xA;SvyFfnmx0vasgaybjvdVh1hupPTQQRUdM37snYqxP8wvzCsfJ9hE7xG6v7rkLW1B4ghacndqGiio&#xA;+f6qc2YQHm7TszsyWqkaNRjzL5+83edrrzfMG8wWNncwoawRrAivGPBJiGloe45UzW5M05daerj2&#xA;BgjGo3fed0o0W603QL5L/RdMtre8jNUnmjS5KmoNU9YPxO32hvkY5Jg3aY9h4v4tx8nuX5c/nN+n&#xA;dQh0bWoEt7+b4ba6iqIpHArwZWrxY023oTttmfh1PEaPN0fanYPgxOTGbiOYPMPUsy3m3Yq8x/MP&#xA;81p9LvJdH0QL9bh+G5vHAYI38iKdiw7k7dqZutB2YJjjny6B5Xtjt44pHFi+ocz3e5j3lb809Nst&#xA;MeDzQkmoXj3LGG7ZBIVhda/GxINFetAOx9sOu7GjklcIxql7I9pTjx8OSUuK/sQ/mb81DeNps/lY&#xA;S6SIPUe7UoimRiQEDAcldQATv45boex4Y+LjETfc4/a3tJkycPhSkCOd/ghnP5c/mWfMUh0zUY1i&#xA;1RELxyR7JMq/a+E/ZYdad8w9f2f4Q4o/T9zsexu2/wAyfDmKyfYf2s+zVvQuxV5L51/N+8ivZtP8&#xA;vhESFikl+wDlmGx9JTVaDxNa5rM+tN1D5uzwaIVc/kxmL8x72ReWowm6uaUacME5U2FV4kD6M1sy&#xA;ZGyXa4yICgF1n+a/mqzug8LxmzWgWykUMgA/ytnr8jl+LUzhsDs4ubTQyGyKL2Lyf5ssfM2lC9t1&#xA;MUqN6dzbsamN6V67VU9jm4wZhkjYdPnwnHKinmXNKH1C/tNOsLi/vJBDaWkbzXEprRUQFmO2/QYq&#xA;+aPOf/OR3mvUbySLy5x0nTUb91IUWS5kUHq5cMqV68VG38xyJLMBhzefRM7XVzYJLqDVL3HIVZju&#xA;TUqW6++a46Gz9WztI9ogD6d2T+WP+cifPGmXwOqOmraczD1LeRQkiL39KVaGv+vyzYR2FOslub5P&#xA;pny9r2m6/o1prGmSerZXic4mIow3oysOzKwKn3ybWmGKuxV2KuxVQu9PsL1VW8torlUNVWZFkAPi&#xA;OQOQnjjL6gD72Mog8xaF/wAN+Xf+rXZ/8iIv+acr/K4v5sfkGPgw7h8nf4b8u/8AVrs/+REX/NOP&#xA;5XF/Nj8gvgw7h8nf4b8u/wDVrs/+REX/ADTj+VxfzY/IL4MO4fJMFVUUKoCqooqjYADsMvApsbxV&#xA;AajoGg6nIkmpaba3skY4o9xDHKyrWtAXVqDIygDzDfi1OXGKhKUfcSEJ/gnyZ/1YNO/6RIP+aMj4&#xA;UO4Nn8oaj/VJ/wCmP63f4J8mf9WDTv8ApEg/5ox8KHcF/lDUf6pP/TH9apB5Q8p288c8GiWEM8TB&#xA;4pY7WFXVlNQysFqCD0OEY4joES12eQozmQf6RTbJuK7FUrm8reWJ5nmm0iylmlYvJI9tEzMzGpZi&#xA;VqSTl41OUChKXzLiS0GCRJOOBJ/ohYfJ/lEih0TTyPA2sP8AzTj+ay/z5fMo/k/T/wCpw/0o/U7/&#xA;AAf5S/6slh/0iw/804/msv8APl8yv8naf/U4f6UfqV7Py75fsp1uLPTLS2uEqFmhgjjcVFDRlUHc&#xA;ZGeoySFGRI95Z49HhgeKMIxPeIgJhlTkuxVKf8I+VP8Aqy2H/SND/wA05V4MP5o+Tb40/wCcfm7/&#xA;AAj5U/6sth/0jQ/804+DD+aPkvjT/nH5u/wj5U/6sth/0jQ/804+DD+aPkvjT/nH5ouw0jStO5/o&#xA;+ygs/Vp6n1eJIuXGtOXACtKnJxhGPIUwlOUuZtF5Jio3tjZX1rJaX1vHdWsopLbzoskbgGtGRgVO&#xA;474qk3/KvfIP/UtaV/0g23/NGK27/lXvkH/qWtK/6Qbb/mjFbd/yr3yD/wBS1pX/AEg23/NGK2m2&#xA;naXpmmWotNNtIbG1Ullt7aNIowW3JCIFG+KonFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqoX19aWFnLeXcohtoFLyyN0AGLP&#xA;HjlOQjEWS8i8w/nTqk0zxaHClrbDZZ5lDyt78TVF+W+C3rNL7PQAvKeI9w5frSGL81PPUcnM6j6g&#xA;JqUaGHifuQU+jBbny7F0pFcP2n9bPvJP5swatcx6drEaWl7KeME8dRDIx6KQxJRj23ocILoe0ewz&#xA;iiZ4zxRHMdR+t6JhefdiqX69rdno2mT31yy/ukZ44iwVpGUVCLXucpz5o44mRcjS6aWaYjHr9jye&#xA;7/OvzDJ/vNaW0FH5CoeSq7/Cd1+8UzQS7ZyHkAHqoezuEfVKRUNK/OLzPaySm/EeoI4/doyrDwNe&#xA;xjUVFPHIYu18sb4vV9jZn9n8EgOC4fbfzen+TPOFp5n057mKI288DBLi3J5cSRUENQVB+Wb3R6sZ&#xA;42BRHN5jtDQS00+EmweRZBmW4DsVYt+YH5leVfImmLe65cESTVFpZQgPcTMvUIpIFBXdmIA8cjKQ&#xA;DKMDLk8G1b/nMPWnnb9EeXraGAH4TdzSSuR4kRiID8cpOZvGnHeivL//ADmFP9YVPMWgJ9XJ+O40&#xA;+Uh1HtFLUN/yMGEZu9Tp+4voLyt5r0DzTo8Wr6FdpeWMp481qGRwAWSRTRkcVFQcuBBceUSDum2F&#xA;DsVSnXfMdlpKAODLcuKpApoaeLHsM1vaHamPTDfeZ6fr7nL0ujlmO20e9i0vn7V2cmOKFE7LxZj9&#xA;J5Zzc/aPOTsIgfH9bto9lY63JRum+fy0ipqECqp2M0Vdvmpr+BzM0vtJZrLHbvH6mjN2TtcD8CzC&#xA;KWOWNZY2DxuAyMNwQehGdRCYkAQbBdNKJBo812SQ7FXk/wCZX/ORnk/ybdy6XaRtretQnjPbQOEh&#xA;iYdVlno9HH8qq1O9MrlkAbYYiXmY/wCcxNf9Wp8uWpir9gTycqeHLjT8Mr8Ytv5cd70/8tP+ciPJ&#xA;/nS8j0qaJ9G1qbaG0uGDxSt/LFMAvJvZlUntXLI5AWqeIh6rljU7FXYq7FXYq83/ADu1CaHRLGyQ&#xA;lY7qdmlp3ESghT9L1+jAXovZzEDllI/wj73j95Y3VnMYbmMxSdQD3HiMrhkjIWC9dCYkLChk2TYJ&#xA;BBBoRuCMVfS3k7U5tU8r6bfTHlNLColY9WdPgZvpK1yT5zr8Ix55RHIFN2ZUUsxoqgkn2GJLiAW+&#xA;dfPXmRPMHmGa+gaQ2YCx2sctAVVVANACftNVvpzjtdqPGyGQ5dH0LszSHBhETXF1pj+YbsEXaaTq&#xA;V2oe2t3kQnjzA+Go9+mSECeQa55Yx5lGeW/MWoaDqkF1DJKIY5A1xaq5RZVGxVhuOniMu02olikC&#xA;OXd3tGs0kM8DEgXWxrk+itL1K01PT4L+0cSW9wvNGH3EH3B2OdjiyCcRIci+eZsMsczCXMIrLGp8&#xA;B/ml50vPOXnnUtXkkMluZWg02OtQlrGxWJVHuPiNP2iTmHOVlz4RoUtb8vrv0FZLtDMVBaNlKgGm&#xA;45At+rMbxx3OX+XPex/UtJv9Ol9O7iKV+y/VW+TDLYyB5NMoGPN6p/zjH51vNE/MKDRWkP6L14NB&#xA;NEfsidFLwyAfzVHD5N7ZfilRcfNGxb7KzJcNTurhLe2luH+xCjO3yUVyvLkEIGR5RFsoQMpADq8k&#xA;vLua8upLmZuUsrcmP8B7DPM8+aWWZnLmXr8eMQiIjkFHKWas1pMkPrOvFagUPXfvmRLTTjDjIoMR&#xA;IXTMPIGpO8c+nuaiL97D7AmjD76HOm9nNUSJYj03H6XS9rYQCJjrsWX51Dp3nX58+fp/JnkC5urG&#xA;T09W1BxY6e4+0jyAl5R7pGrEH+amQySoNmKNl8OO7u7O7FnYksxNSSdySTmI5rWKplFomvw6Wuvx&#xA;2s8WnRTJGl+AUUSmpXg2x2K9R0PvTI8Yur3ZcJq+j7g/JjztL5y/L3TdWuWDajGGtNRI7zwfCXPv&#xA;IvF/9lmbCVh1+SNFm+TYOxV2KuxV5x+b0MdxJocW5dboBx2CSkCp+lMx82UCx14SXpPZ+4jIelfd&#xA;/a8kuvOmuazdacV0pJdO1NJLiys2eP1mhg/vaynikT7bguKdM1UBwXRohux6qcSDEc0rl1vR7pfX&#xA;0m3vjbrZnUbgXMSxelbg0LKWZTMK941Ye+Z0NSRtP7HY4u1on6geVohVZgnEVLwx3IUbn0ZqmNyB&#xA;uA1D1zJjljLkXZY9RCf0l9B/lX/ygWl/89/+oiTLQ8P21/jU/h/uQmfnG7vrTyvqVzYsFuYYGZHN&#xA;NgPtHfaoWtMx9ZOUcUjHnTjdnwjPPCMvpJeC6P5Zu9UtnuI5UjVW4ANXcgVPT55yEMRkLe+zamOM&#xA;0U38rRaZHql1p3+jT6hp4H1lkctLGZN1qpULuv8AKduhzJx4DHchwM+qE7ESfcnevatBoukyX0jQ&#xA;wW0FPUkmYpGik0GyqzHegAA75bwyO0Ru4wlHnM7Me8w6FPdpHqtmnqNcKHnSNw6gcRxZDQcgRmLm&#xA;xHm7HS6mI9JO3RnX5KancXGj3tjLLzispEMEdN0Wbkx3p0LAn783fY2QmBiT9P6XnvaLCI5IzA3k&#xA;N/hTP9SZl066ZSQwhkII2IIU5uXnQ/P3y9oV22q27zRVjWIXcdTRXFKxiu9PipXNZkmKdxjxm2aa&#xA;Tqkt+ZOUcSLHQVimE258aKtMxpRpyoTtDa5Ossi6bNbwyxXHHgXnEb1JpVVKMag9MlAdWOQ9En8h&#xA;2U2l/m15ZtmNWTWbBVb+ZHuEAP0qczMUrouBmjQIfe+Zzrkt8yV/QV7Tr6R6eHfMDtT/ABaf9Vyd&#xA;F/ex97zT6vElk95M4WGMFnJKoFVerM7kKoHc5xWk0Hix4iXp5ZKTKxht/RSWOOhYVBJDGniCCRQ+&#xA;2bXFpMePkN2qUiVk11DLdNp7Aeoyc+PNOfCtOfCvLjy2rTrluXEJwIPIoBpMfI8MkWvTIxoVgavu&#xA;OSZjdg4pQ1UonpE/eHF7UIOIf1v1s9zs3n3zJ/zmHfTyaj5Y0xa+msVzPxH7TyNGg+7h+OY+YuTp&#xA;xzYBafkrqNhNZf4jWT/TaBLOyuLGOTmT/d+pdTRVenZEce+a46oG+H9LsRgI5vY9K/KTyBokRntt&#xA;FS9uYlLKblvXd2UVAAlPpKx8aAZgy1E5dXKjhiOijrlynm/yJ5gsjpxtYobZxB+/tLhTPAC6qPqs&#xA;s3Eo8a1BphgOCYN/eiXqiVL/AJw8vnfy15hsSTwgvYp1Has0XE/8mRnQYeTpNQNw+gsucd2KuxV2&#xA;KpP5g8vQaoglO08QrGOoYqeSg+HxZianTce4+qnO0WtOHb+EvHdU/L/Rq3ki32oabZXDPNqFhaTm&#xA;OCRm3lJTizpzp8QjK1zTjKR03d54QPImiv1HQPL+qtp8MF4+n3Nmhi0yfTJuMq2/Eco2+F0MZCLs&#xA;wI2wRmRbKWIGulMj8leSLK2uJ47d5pZrkiW/1G4czTyFRRObGgoOiqAAOwy3DjOaVcgGjPlGGN8y&#xA;ftem2NlBZWkdrAvGKMEAe5NSdvEmubzHARiAOjz2bKckjI8yvuraC6tpba4QSQTKY5Y26MrChBwy&#xA;iJCjyLGEzEiQ2IeNyaVq3lLWE025RZNMvpWa1nTkeNSVVSSPtbCo3zl8unngnwn6Tye0xanHqsfG&#xA;NpxG4Tyx0v6xdyfU4E+tzgGVwEVn4Cg5MacuI6b5bjhKZoOJkyRxjilsFTUNAvY7Ipq1tE8Ex4PG&#xA;3B0YHehQl69MnkwTx7kUwx6nHkNRNpZqFvrl5Nb6bpVszm8Jjlu+DGOFTQFiwHEUBOUeFOZEYjn1&#xA;7nLjlxYwZzP09OpZ15G8qf4b0b6nI6TXUjmSeZF4gk7Ba/aYL75vdFpfBhwncvOdpa78zk4htEck&#xA;41T/AI5t3/xhk/4gczC4AfFXk/WNNn8sW9rNKn6YjuZY0jqef1WOKIoSOn2mYD5Zo8sZCZ/m19rv&#xA;cM7FMx8v+SvMnmCKd9Ds1uPQKib95DHxLVpVXdCa0OShilPkyyZoQ+o0o6/5X1nQLqK21m2W3unT&#xA;1EQPHIeJJFf3bPTcd8E8cominHkjMWGFaLcRTfnN5YEe/pavpsbEfzC6jJ+6tMytOOTh6o2T7n3R&#xA;mxdUl3mN1TQr4saAxMPpbYficwO05Aaad/zS5OjF5Y+950lhYapo82nX0K3FpOGjnhboytv23HsR&#xA;nMdmT/d7cwXo80bO6Kt0tbOCKyso40htVWMQKQoijUUXbwAzYE2wEVGPSNFk1Ua7HbxPqLQ/V1vV&#xA;3Yxcq8a9Ovfrh4jVMeHe+qc+UJkPmW43+1AyL7kMhP6jmP2TkB1s/wCrXy4f1OP2lE+CPf8ArZzn&#xA;WugfO/8Azlr5av3j0HzVbxNNaacz219xFRGHdXiY06BmDKT408cozxsOTp5UaZk+leXNfht7+ayt&#xA;tQSeJGtriWJJCYno68WYEgb1zmwZA0HekA7p3JouqyGSOaz5WrKQ1d+QIoQVIpT6cu/KZR/CWv8A&#xA;M4v5zG9Ss/Lnl3Q9Vv4bK2sYFtWN0YIkiDpCjcFIUCtORCj3plUTKRAtsIEQSg/+cVPKV9o/ka61&#xA;a9iaF9dnWa2RgQTbRLxjeh/nZnI8Voe+dLiFB5/PKy9ry1pdirsVdirsVYN+YGteRNBBuda1i30q&#xA;7kUusDtyklH8whSsh325AZganSRluNpOy0msnH0kXH7mG2nnP8sra4hN1r1hZx3X2JYishY9aN6V&#xA;eA/yn2zX4dOZyqWwdpqNVwRuPqL1vQhozadFPpE0VzZzDkl1C6yrJ25c1JB+jN1hxRgKi8/nzSyS&#xA;uSYZa0uxV2KsV1/TdNtZGnt7pbe7AEgtgRyNTSqgHko2+WavV6WMBxg8P46O30WslM+HIcX6vNAa&#xA;dDBqMtdR1ApwIVFkb4m5GlFZzQb5j6fF40qlI25Oqzfl43GIrv6M1t7eG3hWGFQkaCiqM3UICIoc&#xA;nRTmZGzzVMkwQ2qf8c27/wCMMn/EDiUh+cUE8sEyTQsUljIZHHUEZgEW7EGnp3kzzV5lDesiz6fJ&#xA;6e1/A7weoDSgFOJ3G+xpmLL0n0lzIHjFSCC86eaPMQmmcpNKzgGXVJi0pNdvtGtD2+I4YASNk7oy&#xA;SMRQFBj35cTKn5jeV5pW+FdYsHkY1JoLqMk+OZkeYcGfIv0GzMcBj/nkyDQWC/ZMiCT/AFa1/XTN&#xA;J7QE/ljXeLdh2ZXjfAvP7a5kt35LuD9pT0OcXp9RLFKw9HKNpikem6mgneFJSjFCWAYgih41+nOk&#xA;w5TOPFRHvca6NAqFxqaAPb2wC+mTGxFPh47UAHTNdrdbKJMADHzP6P1s8cQd7tW8rvImv2ZTcl+J&#xA;/wBUghvwzH7IkRqYV3sNcAcMreoZ6I8qo3lnaX1pNZ3kKXFrcI0c8EihkdGFGVlOxBGKsIg8haR5&#xA;Xt2j0/UjaaPUmDTrs+osRJrwglJ9QJvXi3P2oM1+o7PjM2Ni7PSanIfSI8S39PF4hE+oD0CeHIs1&#xA;KdNxTnT6MwfC1Bl4Zuvsdl+Uo2Ier8fBEf4C8v8AmERS6ndjVdNhdZF06M8bZpFoVNwAS0vFtwpI&#xA;XxU5sNPoY49zuXVavUZL4SOFmyIiIqIoVFAVVUUAA2AAGZzr28VdirsVdirjWhpuewO2KvmjzB/z&#xA;i1531/WrzWdT8zWk99fStNM5imO7HZVqdlUfCo7DbKDiJ6uSMwAqkv8A+hPPMn/Uw2f/ACKlweCU&#xA;/mB3PVvyT/KvzP8Al4mo2d9rEOoaVecZYbaNZFMU67M68tqOv2vkMshAxaskxJ6jljU7FXYq831r&#xA;8uPNN55guNYtNWhgkuFVWDIzbAAUoQV2ptmTiy4jgGLNDjok86/a6zU6XONUc+myeFcRGqvl33t9&#xA;iBvvyr8538Bt7rW7eSEkEoIytSOleKjLtNk0uCfHjxVL+sT97j63Sa/VY/Dy5+KHdwAfdT03ToLi&#xA;3sYYLiQSyxqFaQd6dOvtmugCBvzd9MxJ22CJyTBSu4TPazQg0MsbICe3IEYq+ZdO/wCcRvMFpqFt&#xA;dS6zYXcUEqSPavHKqSBGBKMaNs1KHbMTJpyYkA1bmQ1IBBIeo3/5V31+qi7isnKCisJZVYDwBWIG&#xA;maXH2Nnh9Mw7OXauI84lav5VX8Wnz2UMGn+hOjJJE8krK4IpR6xEsMT2NnlISlMbI/lXFVCJecaB&#xA;/wA4n+YNL8wabqj67aPFY3cNy0Qjl5FYZFcqCabnjTN8MRdVLOD0fS+XuMo3tnDeWstrOKxSrxbx&#xA;9iPcHfKs+GOWBhLkWePIYSEhzDANZ/LLVrqP0bS/iSMk8y4ZWK9h8PL6c0ei7D8DJxkifd+vq7LU&#xA;do+JGh6e9NvI3k7UPL1pdW13JBdpNIssIHIcWA4t9pT1oubzhJ5gfj4Ou4q5EsZX8pvMa373v6St&#xA;/VkcySGknxFjVq7d8x9VpfGgYSA3+zz5NuHP4cgRbNPLvlJNLuGup5RNPQrHxFFUHqd+5zA7M7GG&#xA;nlxyPFLp5ORrNeco4QKDIc3jrnYqxDX/ACbqerajJdPeoI/swxEMeCDt/E4bd1pO0seGAiIm+qXf&#xA;8q0vv+W2L/gWxtyv5ch/NKbeWvKWo6NqHrm7SSB1KzRAMKjsd+4OJLha7tGGeFcJvoyrA6h2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2Koe+1HT7CH1765itIa09Wd1jWv+sxAwEgc0iJPJLLfzx5NuJBFDrdk0h+yvrxgn5VI&#xA;rkBlieoZnDMdCnYIIBBqDuCMsa3Yq7FXYqoXWoWFpx+t3MVvy+z6rqlflyIwiJPJIiTyW2uqaZdu&#xA;UtbuGdwKlYpEcgfJScJiRzCTEjmETkWLsVdirsVdirsVdirsVdirsVeVfmt+e9h5Lv8A9DafaDUt&#xA;ZCq9wHfhDAHFVD0BZmI34imx65Tky8Ozfiw8W/Rgujf85W6mLxBrWiQPZsQHezd0kQd2CyF1f5VX&#xA;55WNR3htOmHQvf8Ay/r+leYNIttX0qcXFjdLyikGx2NGVgdwykUI8cyQQRYcSUSDRTDCh2Ksf81/&#xA;mB5M8pxq/mHVoLBnHKOFiXmZa0qsMYeRh7hciZAc2UYE8mFx/wDOTf5QvOIjqc8aGn79rWfhv8lL&#xA;f8LkfFiz8GT0Hy/5n8v+YrAX+h6hBqNoTxMkDhuLUrxdftI3swByYILWYkc0zwodirsVdirsVSHz&#xA;v5pi8seXLnVXUSSpSO2iOweV9lB9h9o+wyvLk4Y224cfHKny/revavrl+99qly9zcP3Y/Co/lRei&#xA;r7DNVKZkbLuoQERQS/Ismfflf+Y2o6Bqttp93O0uh3MixyxSGohLmgkjJ+yAT8Q6Ee+ZGDMYmjyc&#xA;XU6cSFj6n0hmzdQ7FWJfmN5wk8vaUiWhH6RvCy27HcRqtOclD1pUAe/yy/T4uM78nJ02HjO/IPJL&#xA;Lyx5v8xO99BazXnqGrXUzBQx9nlZQ30HNgckIbF2EssIbXTeoeSfOGjp9buLCWJIjy9eFlk40/aJ&#xA;iZivzOMc0JbWsc8JbAvSPyu873OsRyaVqUnqX1uvqQzn7UkQNDy8WUkb9xmHqcIjuOTharAI7jkz&#xA;/MRw3Yqg76+9H93HvJ3PYYqlr3E7mrux+nb7sVbiuriI1Vz8juMVTe0uluI+QFGGzLiqtirsVfN3&#xA;51fntqzapc+W/Kt01naWjNDfalCaTSyrs6RON0RTtyXcnoadcXLlN0HMw4RVl4RLLLLI0srtJK5L&#xA;O7EszE9SSepzHcpbQ0r28cVfT/8Azis12fJuqh2rarqBEC1qQ/ooZNuw+zmXp+ThanmHteXuMw/8&#xA;2fP0fkbyTea2FWS9JW206F68XuZa8OVP2VAZ2HcLTIzlQZwjxGnwjq2r6nrGpXGpancyXd/dMXnu&#xA;JTyZmP8AAdABsBsMxCbc4CkJgVkXkPz3r3krzBBrGkzMpRgLq1LERXEVfiikA6g9vA7jfDGRBYyi&#xA;CKL718s+YLDzFoFhrmntytNQhSeKvVeQ+JGp+0jVVvcZmA2HBIo0mWFDsVdirsVeVf8AOQssg8ua&#xA;ZCAfTe8Lse1UiYD/AImcxNZ9Ic7Qj1H3MJ8naPpOmELq8kX6S1BAkdlKK8Y3NQrAinJyOh/rmnnI&#xA;nlyd3jiBz5o/Wfy/8tvFJcq7acFBZnDAxD3Kv/AjBHKWUsUXnmpaRLZj1Y5UurNmKJcxV48hvxZT&#xA;RkanY/Rl4lbjyjT620yWSXTbSWX+8khjZ+v2mQE9c3keTzshuUThQ8s86QWmpfmLBDqJP6N0+0WW&#xA;dB1dQxbiB/lu6r8syfGGLCZF2WljIwqP1ErpfzEur2aSDS7mCCK1Ija2tzG7R06K/XiadqDOcy63&#xA;ITY2DssPZ2Ec/UXL+Yuo6Zxl1G8hNsWCkXJSMEnagf4dz2wY9blB705uzsJH81DWcFhafmDo2q6Q&#xA;vpWGqF1e3FAI5ShWRKDt8SuPnnR4NSM2EnqHX5scowlGXMfaHrWY7qlsjhI2c9FBP3Yqx+SQktI5&#xA;61LE4CaSASaCU3esmpW2G3+/D/AZq8/aHSHzdxp+zBzn8lLTb+X61xmcsJdhU9D2yvSamXHUjdtm&#xA;t0kfDuIrhZJp8pjuVHZ/hP09PxzcuiTnFWO/mJrkuheR9b1WFuFxbWkht3BpxlccI2+h2ByMzQJZ&#xA;443IB8P2dpLe3Swq6Izn45pmCRqO7O7bAf59c1xNO0At7v5N/K3ynYWcN5N6WtXMihxcvSS33/30&#xA;m6Ee7VPyzAyZ5E1ydjiwRAvmgfzesdH1HQzBZ3Fv+lNGJn+oxunqCBh+9AjBqKABz7DJackHfkWO&#xA;pAI25hM/+cTbq45+ZLSpNsBayhd6K59VSR/rAb/LNvp+rpNUOT6GzJcR80/85i6tJy8taQrUjpc3&#xA;cq77t8EcZ8Nvj+/KMx5OTpxzeXXHlDywmgabHeXa6fqksKyGY/EGMnxfvF6BVLceW2a0ZZcRoWHb&#xA;HDDhFmikWrfl75k05XlEK3UCAkyQGtAN6lDRvwy2OeJaZ6acfNjRBHUZc0Prn/nErW5bzyBfaXK3&#xA;L9F3ziEfyxXCLIF/5Gcz9OZOE7OJnG73DLWh2KuxV2KsN/MmHS57bTotRaL0vXLwxysFLTIAV4gk&#xA;V2rUZru0eKhXJ2nZfDxG+bEbnSJ5tbtNSW/migto5I5NPXj6MzPTi71FapTb8Kb11IltVO6I3u0c&#xA;zLKJIlYqwHEsBuCe45AjIsqS3TPLA/QkWi3082sNX45595ZCG5CpXf4enjTLLJl6Q10Ix9R+b1zT&#xA;YpItPtopBxdIkVl8KACmdDiBEBfOnmMxBmSOVojLGp5J51AHn27qalrWIrXsBQEDMftO/Aj3cTv+&#xA;yvpYpoPl4aXc31xILSksjfVDb26W5itjRvSZl+0A2/4/LRzndOyx4+Ek7fJd5k0U6zYxrbPbpcRy&#xA;K0dxPBHcgRkgSqoeoHNRQ/dghLhK5cfEE50aGKLzF5es4AIoIrlPSiUUVViAAAA6Cm2bjsi6yHyc&#xA;PtAAY/g9rzNeaUL+v1SSngP1jFWGeZZJWsmtogrPKjHgzFFYgfCGZQSAT1IGa3tDLQEe92vZmKyZ&#xA;93JjWg2t9a6akeoJbx3dSZfqhf0SexUSfEu3bNVIgnZ3MbrdTvLLUpNcs7iGO2NjGCbiSR5RcBwa&#xA;p6XEcAB3r9r6MIlQ81N35M906czxwy/tEivzBpnQafJxwBeY1OLw8hiybLmhh/5wWL3v5ZeY4Ury&#xA;WzefbwgImPY9o8hkHpLZiNSDwL8rfKBvfJmo3kEqWmp30vp2d80STGFYafEqv0JYsD36HNLnnUh3&#xA;O/0+O4nverWkUFjawWvJF4qEFFWMM37RCKAo5E1oMxCbcwDZLf8ADfLX7rUJ5Y5bC4g9NdPMEY4y&#xA;sCskvrAcyXQ8T7fRkuPamHBvfRkH5I/l7J5O0nUPWPOfUJlcyUIrHHyEaitNgrVr4k5utJxGyRQ2&#xA;dDreEEAGyLt6TmY4L5Y/5zD/AOUk8vf8wcv/ACdzHzc3K0/IrLnTzcmzeG6kght2DtHHQrMnGgR6&#xA;g1Xf/PYjSCVW9CY3W6M5oXMf7VKkUPTIs2K695LsbrS76S6mea8BkuILuTiGjAFRHUAVQU6H6KZf&#xA;DMQRTjZMAIN83oX/ADh3CBofmSeu73NunHw4Rua/8Pm4wui1HMPobLnHdirsVdirxj/nIiO5WXQr&#xA;heQhUXChh0D1jI+kgfhmDrBydjoDza8paw/mTSJXWKUT2yrHetGGAUuCA6uvSvEn2zVHDLmBYdyM&#xA;8dgTRRtppV6biINez3Ij/u4QFBY0p8ZQAvlY32AbZSAFlnPlvQpreT65dLwkoRFGeor1Y/Rm10Wl&#xA;MTxSdLr9YJDgjy6sizZOqdiryr83LS4sta0/XI1LQyR/VpvDkhLAH/WVjT5ZeMIzYpYy7Ts7Nw7M&#xA;aklOoW6GwvPq8isGJ4q+1CCrIfnnM5tNPDKph3wmJDYugE9kskuoXwmDU4LwWJVpX7KgsSTXxyOP&#xA;FLIahGyknh3JTX8uIJtY86JfhSLTTY3ep6VdSiA+55FvozpsWmGnw8P8Uubpu0M9x972XKnStOiu&#xA;hRujChxVi2vaPcFQ6Ly9OtCO4P8AHMHW6czFjmHYdn6kYyRLkWH39vqLSD0PRaMCklvcKach+0GG&#xA;/wBFM03Lm9ACitOtb+RFjlYTXBJLMi8UFTsB12HvkoYzM1ENeXLGAuRpm+j6W0KR8xRY9xXYlutf&#xA;vzoMOPgiIvMZ8viTMu9OctalK7tYLu1mtZ15wXCNFKh7o4KsPpBxUF5f+X/ki+03yPFp7Ct9pl3e&#xA;27qdvURLl+DrX+YHkPY5rNRpDKNjmHbabWCEql9JUr3T9XW6k9K7+rhqVhmh5lCBSqbp18DXNWRW&#xA;xDuYyBFhPtB8vXd16Qm5/V0AEk7ijPTw6bnMnT6WWQ2douHqtZHGNt5M8ACgACgGwGb4POEuxV8s&#xA;f85h/wDKSeXv+YOX/k7mPm5uVp+RYZ5I8/WLWUOm6rKIJ4QI4bhzRHQbKGY/ZYDbfrmszYDdh3GD&#xA;UCqkyw2xSMTvqcgslpJUmMDj9reWleP09Mo4vLdyvO9mE+evP1rcWsmlaS/qrKONzdD7PHuieNe5&#xA;8MyMGAg2XC1GoBHDF7F/zh5/yjfmH/mMi/5NZtMPJ1Go5h9BZc47sVdirsVSjzV5Y03zNo8mlahz&#xA;WF2RxLFxEiMjA1QsrgEiq9OhOQyYxIUWzHkMDYeEax+Y8mhm40HySiadpMMjI95QS3Fy4+FpWdww&#xA;Aanw0FaeHQa6ebh9MNg9rouxIGInm9Uz06BJ4vzN84QNE9tdrBNF/u1I0LPtT4gwZT92Y2P0Gxzd&#xA;nPszBMESFgvYvym/Mu581Lc6fqaIuqWiCUSRjissVQpbj2ZWIrTbfNpp8/HsebyPbXZI01Th9Etv&#xA;cXomZLoXYq8v/wCchfNNv5f8lwSTtUXV2kQgWhkk4oz0WvQAqCT/AFyzFmjjPEXJ0pAlZeFWHnry&#xA;1dRq4vBbv3jmqhB+f2fuOZ0dZikOfzdmMgdf+e/LVqhY3guHHRIQXJ+n7P3nBLWYojn8lOQPWP8A&#xA;nGvzrba/FrdpEDC1sYZTbvQt8fNeakdR8Ir4Zh5NRHLRHNwNXIGi9typwnYqgda1aDS7FrmVS5rx&#xA;jjG3Jj0Ffoy3DiOSVBo1GcYo8RYtYSv5muJlk9O1lgUNEI0ryUmjct96bZX2n2ZEiJB3bOyO15XI&#xA;SGzVt5nGkXr6eYlmtIJDGZlFJNj8R8Dv0H45l6fs0RxAA704Op7XlLPIkem2bRyJJGsiHkjgMrDo&#xA;QRUHMQitnYAgiwuwJdirEvzP87T+TfKs2r21p9cui6wwxmvpqz1/eS0IbgtKbdSQNuuRlID4sowJ&#xA;s9zyO3/PjSNUhFzrcclvfogV44U5xGn++zWoG9fi+85q9Rpck5XzdxpdXihCqIZF+XH563/mbziu&#xA;hTaf/uPnRvqt0P75CgrynoeHFvsjj0JHXNhjJiAJHd1uWIlImAoPZ8ucd2Kvlj/nMP8A5STy9/zB&#xA;y/8AJ3MfNzcrT8iwbyN+WdpfWEWqayWaOcc7ezQlAUPRpGHxfF1AU/0zS6rXGJ4Y/NwNZ2gYS4Yd&#xA;Or0N9B0+Sw/Rzx8rD0xD6FSP3aigXkDXoMwvzUufVtl2/I4+EQHFXO9vl+15p5+/Li30mzfVdJZv&#xA;qkZH1i2c8jGGNAyMdytTuDvmfpNaZnhlzYaLXnIeGXN7N/zh5/yjfmH/AJjIv+TWbrDycvUcw+gs&#xA;ucd2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:ffd216dd-8aed-44ba-abf5-cb1f9296a36e</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:ffd216dd-8aed-44ba-abf5-cb1f9296a36e</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:64878c11-513d-4f90-b715-0e3683e59f1b</stRef:instanceID>
            <stRef:documentID>xmp.did:64878c11-513d-4f90-b715-0e3683e59f1b</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:15367B94022168118083A697D000D963</stEvt:instanceID>
                  <stEvt:when>2015-04-10T20:20:44-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E73627BCCD2168118083A697D000D963</stEvt:instanceID>
                  <stEvt:when>2015-04-13T20:00:56-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:007134FF642968118083F964DA86D81D</stEvt:instanceID>
                  <stEvt:when>2015-04-13T20:10:31-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B9BEBAF1672968118083F964DA86D81D</stEvt:instanceID>
                  <stEvt:when>2015-04-13T20:12:24-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E93627BCCD2168118083A697D000D963</stEvt:instanceID>
                  <stEvt:when>2015-04-13T20:17:06-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068118083BBBBED5F0CD0</stEvt:instanceID>
                  <stEvt:when>2015-04-13T20:34:23-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811822AE0679C256E31</stEvt:instanceID>
                  <stEvt:when>2015-04-13T21:09:54-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811822AE0679C256E31</stEvt:instanceID>
                  <stEvt:when>2015-04-13T21:10:47-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118083EA55D007C936</stEvt:instanceID>
                  <stEvt:when>2015-04-13T21:13:46-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:06801174072068118083EA55D007C936</stEvt:instanceID>
                  <stEvt:when>2015-04-13T21:14:19-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA49E63728206811822AE0679C256E31</stEvt:instanceID>
                  <stEvt:when>2015-04-15T15:02:41-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:028011740720681180839BAB0896D256</stEvt:instanceID>
                  <stEvt:when>2015-04-15T20:27:31-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:048011740720681180839BAB0896D256</stEvt:instanceID>
                  <stEvt:when>2015-04-16T15:18:18-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:058011740720681180839BAB0896D256</stEvt:instanceID>
                  <stEvt:when>2015-04-16T16:20:12-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA86E9404320681180839BAB0896D256</stEvt:instanceID>
                  <stEvt:when>2015-04-16T18:24:05-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118083BF58337994E4</stEvt:instanceID>
                  <stEvt:when>2015-04-16T19:04-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811822AFE7729281F96</stEvt:instanceID>
                  <stEvt:when>2016-04-06T20:04:54-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07801174072068118083F7F2A39C49E0</stEvt:instanceID>
                  <stEvt:when>2016-04-29T14:20:51-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4e7fe9b7-a723-4e4d-9cab-396a32c63883</stEvt:instanceID>
                  <stEvt:when>2016-05-31T12:39:50-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:64878c11-513d-4f90-b715-0e3683e59f1b</stEvt:instanceID>
                  <stEvt:when>2016-06-01T13:32:13-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ffd216dd-8aed-44ba-abf5-cb1f9296a36e</stEvt:instanceID>
                  <stEvt:when>2016-06-01T14:54:44-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>800.000000</stDim:w>
            <stDim:h>799.999992</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=25 B=7</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>24</xmpG:green>
                           <xmpG:blue>7</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=58 G=30 B=10</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>58</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>10</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=79 G=47 B=25</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>79</xmpG:red>
                           <xmpG:green>47</xmpG:green>
                           <xmpG:blue>24</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=137 G=130 B=126</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>137</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>126</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=201 G=49 B=49</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>200</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>49</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=169 B=49</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>49</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=76 G=47 B=25</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>75</xmpG:red>
                           <xmpG:green>47</xmpG:green>
                           <xmpG:blue>24</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=229 G=229 B=229</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>228</xmpG:red>
                           <xmpG:green>228</xmpG:green>
                           <xmpG:blue>228</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=142 G=78 B=56</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>142</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>56</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=132 G=199 B=239</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>239</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=90 G=148 B=183</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>89</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>182</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=93 B=56</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>93</xmpG:green>
                           <xmpG:blue>56</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=70 B=35</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>70</xmpG:green>
                           <xmpG:blue>35</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=160 G=29 B=29</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>160</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>28</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=137 G=88 B=54</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>137</xmpG:red>
                           <xmpG:green>87</xmpG:green>
                           <xmpG:blue>54</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=68 G=63 B=60</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>68</xmpG:red>
                           <xmpG:green>63</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=239 G=129 B=174</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>239</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>174</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=153 B=108</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>233</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>107</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=59 B=44</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>59</xmpG:green>
                           <xmpG:blue>43</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=200 B=94</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=161 B=214</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>40</xmpG:red>
                           <xmpG:green>161</xmpG:green>
                           <xmpG:blue>214</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=216 G=72 B=120</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>216</xmpG:red>
                           <xmpG:green>72</xmpG:green>
                           <xmpG:blue>119</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=164 G=102 B=175</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>163</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>175</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=172 B=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>172</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=188 G=120 B=74</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>119</xmpG:green>
                           <xmpG:blue>73</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=119 G=49 B=34</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>119</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=179 B=128</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=80 B=54</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>80</xmpG:green>
                           <xmpG:blue>54</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=163 G=110 B=58</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>163</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>58</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=165 G=83 B=52</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>165</xmpG:red>
                           <xmpG:green>82</xmpG:green>
                           <xmpG:blue>52</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=133 B=193</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>133</xmpG:green>
                           <xmpG:blue>193</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=119 G=188 B=47</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>119</xmpG:red>
                           <xmpG:green>188</xmpG:green>
                           <xmpG:blue>47</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=219 G=92 B=5</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>219</xmpG:red>
                           <xmpG:green>91</xmpG:green>
                           <xmpG:blue>5</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=128</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>193</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=173 G=104 B=58</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>172</xmpG:red>
                           <xmpG:green>103</xmpG:green>
                           <xmpG:blue>58</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=192 B=141</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>140</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -800 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 800 li
800 800 li
800 0 li
cp
clp
800 800 mo
0 800 li
0 0 li
800 0 li
800 800 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
731.589 376.982 mo
730.449 374.392 729.292 372.197 728.129 370.497 cv
726.678 368.376 713.399 358.428 699.748 353.906 cv
699.748 341.827 li
677.647 341.827 li
677.647 353.924 li
665.799 357.798 650.947 368.147 649.338 370.497 cv
648.175 372.198 647.014 374.393 645.87 376.982 cv
731.589 376.982 li
cp
.737255 .470588 .290196 rgb
f
732.416 378.121 mo
730.386 370.733 725.79 366.21 723.59 364.389 cv
723.532 364.296 723.468 364.208 723.384 364.134 cv
719.396 360.521 712.914 358.141 707.01 355.918 cv
706.409 355.692 705.742 355.897 705.368 356.419 cv
703.803 358.6 698.894 363.979 688.554 363.979 cv
679.758 363.979 674.141 358.349 672.37 356.273 cv
671.985 355.823 671.363 355.67 670.809 355.878 cv
664.96 358.076 658.756 360.279 655.084 363.459 cv
655.084 363.459 647.766 368.231 645.043 378.121 cv
732.416 378.121 li
cp
.266667 .247059 .235294 rgb
f
631.547 279.571 mo
631.626 279.413 631.789 279.311 631.967 279.303 cv
631.991 279.302 634.359 279.151 637.722 274.606 cv
638.217 273.941 638.915 272.291 639.799 270.202 cv
642.136 264.693 646.043 255.471 652.65 248.855 cv
660.99 240.496 673.721 236.257 690.489 236.257 cv
721.846 236.257 727.906 255.491 728.523 257.821 cv
730.365 258.879 742.977 267.262 740.59 297.267 cv
740.589 297.386 740.338 306.886 734.452 318.545 cv
730.773 325.835 731.043 329.822 731.916 331.882 cv
732.677 333.676 733.986 334.205 734.37 334.323 cv
735.485 334.669 735.51 335.345 735.469 335.62 cv
735.241 337.122 731.47 338.535 728.71 338.535 cv
727.432 338.535 726.344 338.263 725.511 337.74 cv
725.428 338.798 725.575 340.69 727.391 341.852 cv
727.982 342.23 727.924 342.69 727.87 342.87 cv
727.532 344.028 724.564 344.337 722.862 344.337 cv
721.275 344.337 718.486 344.117 715.881 342.815 cv
716.502 343.872 717.152 344.816 717.617 345.422 cv
717.715 345.551 717.746 345.721 717.693 345.876 cv
717.642 346.03 717.519 346.15 717.361 346.195 cv
716.659 346.394 715.945 346.496 715.24 346.496 cv
710.411 346.496 706.842 341.864 706.302 337.572 cv
706.208 336.816 706.226 336.077 706.36 335.402 cv
693.544 336.243 670.183 337.81 669.18 337.991 cv
668.983 338.062 668.447 338.694 667.973 339.251 cv
665.956 341.629 662.196 346.053 655.447 346.053 cv
654.656 346.053 653.838 345.991 653.014 345.869 cv
650.305 345.464 649.586 345.221 649.35 344.628 cv
649.143 344.101 649.513 343.637 649.98 343.049 cv
650.85 341.953 652.278 340.156 651.727 336.568 cv
651.078 336.801 649.961 337.119 648.688 337.119 cv
647.171 337.119 645.851 336.673 644.765 335.793 cv
644.306 335.42 643.834 334.966 643.832 334.424 cv
643.831 333.895 644.243 333.556 644.682 333.196 cv
645.742 332.326 647.508 330.873 645.992 325.396 cv
645.43 324.728 641.978 320.456 639.307 313.187 cv
636.726 306.164 634.46 297.256 638.123 283.434 cv
637.86 283.479 637.545 283.511 637.196 283.511 cv
635.674 283.511 633.465 282.914 631.57 280.067 cv
631.472 279.92 631.465 279.73 631.547 279.571 cv
.2 .098039 .027451 rgb
f
657.827 263.667 mo
664.122 254.613 672.133 247.94 682.956 247.508 cv
682.956 247.508 683.167 247.501 683.515 247.487 cv
683.505 247.063 li
683.505 247.063 686.131 247.166 688.838 247.275 cv
691.545 247.166 694.171 247.063 694.171 247.063 cv
694.162 247.487 li
694.508 247.501 694.72 247.508 694.72 247.508 cv
705.544 247.94 713.284 254.805 719.848 263.667 cv
730.716 278.343 726.836 296.71 726.836 312.399 cv
726.836 338.155 704.046 346.892 688.838 346.892 cv
673.628 346.892 650.59 337.97 650.59 312.399 cv
650.59 296.782 646.727 279.631 657.827 263.667 cv
.737255 .470588 .290196 rgb
f
652.111 258.151 mo
659.754 249.08 671.9 244.481 688.207 244.48 cv
688.212 244.48 li
692.863 244.48 697.924 244.862 703.251 245.614 cv
703.8 245.687 716.919 247.575 725.936 259.997 cv
733.759 270.774 735.943 285.924 732.43 305.028 cv
732.36 305.412 732.07 305.717 731.692 305.808 cv
731.463 305.834 li
731.159 305.834 730.867 305.694 730.679 305.444 cv
730.322 304.976 722.454 294.441 720.259 280.055 cv
718.318 282.757 714.351 286.824 707.333 288.448 cv
707.112 288.473 li
706.726 288.473 706.366 288.246 706.206 287.879 cv
705.969 287.327 705.553 284.704 709.012 273.214 cv
704.122 278.131 693.601 286.8 678.934 288.467 cv
678.823 288.473 li
678.523 288.473 678.239 288.336 678.049 288.097 cv
677.839 287.828 677.782 287.469 677.9 287.149 cv
681.538 277.283 li
677.976 280.028 671.103 284.794 661.038 289.493 cv
654.39 292.595 649.038 293.058 646.439 293.058 cv
645.215 293.058 644.517 292.956 644.488 292.952 cv
644.068 292.889 643.735 292.564 643.662 292.145 cv
643.522 291.333 640.371 272.086 652.111 258.151 cv
cp
.2 .098039 .027451 rgb
f
700.448 325.63 mo
699.73 324.905 698.552 324.896 697.823 325.615 cv
695.809 327.606 691.735 328.748 687.44 328.524 cv
683.971 328.348 681.031 327.287 679.766 325.753 cv
679.115 324.964 677.941 324.853 677.153 325.502 cv
676.769 325.818 676.531 326.264 676.484 326.758 cv
676.436 327.251 676.584 327.734 676.9 328.117 cv
678.866 330.501 682.638 332.002 687.25 332.234 cv
687.629 332.255 688.017 332.265 688.417 332.265 cv
693.399 332.265 697.892 330.767 700.435 328.257 cv
701.16 327.536 701.166 326.358 700.448 325.63 cv
cp
.458824 .231373 .172549 rgb
f
703.486 303.366 mo
703.486 305.734 705.407 307.659 707.779 307.659 cv
710.151 307.659 712.076 305.734 712.076 303.366 cv
712.076 300.991 710.151 299.071 707.779 299.071 cv
705.407 299.071 703.486 300.991 703.486 303.366 cv
cp
.227451 .117647 .039216 rgb
f
665.184 303.366 mo
665.184 305.735 667.107 307.658 669.479 307.658 cv
671.848 307.658 673.773 305.735 673.773 303.366 cv
673.773 300.992 671.848 299.07 669.479 299.07 cv
667.107 299.07 665.184 300.992 665.184 303.366 cv
cp
f
675.022 296.66 mo
674.45 296.66 673.884 296.422 673.503 295.967 cv
672.569 294.849 671.176 294.209 669.678 294.209 cv
668.181 294.209 666.788 294.849 665.854 295.967 cv
665.192 296.756 663.98 296.891 663.141 296.271 cv
662.303 295.65 662.158 294.506 662.818 293.717 cv
664.489 291.718 666.99 290.572 669.678 290.572 cv
672.367 290.572 674.868 291.718 676.539 293.717 cv
677.199 294.506 677.054 295.65 676.216 296.271 cv
675.861 296.533 675.441 296.66 675.022 296.66 cv
cp
f
713.125 296.66 mo
712.553 296.66 711.987 296.422 711.606 295.967 cv
710.672 294.849 709.279 294.209 707.781 294.209 cv
706.283 294.209 704.89 294.849 703.956 295.967 cv
703.295 296.756 702.083 296.891 701.244 296.271 cv
700.405 295.65 700.261 294.506 700.921 293.717 cv
702.592 291.718 705.093 290.572 707.781 290.572 cv
710.469 290.572 712.97 291.718 714.641 293.717 cv
715.302 294.506 715.157 295.65 714.318 296.271 cv
713.964 296.533 713.544 296.66 713.125 296.66 cv
cp
f
699.018 344.892 mo
695.559 345.788 691.832 344.954 691.534 342.363 cv
691.36 340.868 690 340.105 688.616 340.074 cv
688.55 340.087 li
688.484 340.074 li
687.1 340.105 685.74 340.868 685.566 342.363 cv
685.268 344.954 681.541 345.788 678.082 344.892 cv
676.722 344.54 673.162 342.322 673.218 344.646 cv
673.242 345.554 676.891 348.046 678.019 348.653 cv
680.908 350.204 684.729 351.011 688.55 351.042 cv
692.371 351.011 696.192 350.204 699.081 348.653 cv
700.209 348.046 703.858 345.554 703.882 344.646 cv
703.938 342.322 700.378 344.54 699.018 344.892 cv
cp
.2 .098039 .027451 rgb
f
691.212 318.931 mo
685.516 318.931 li
684.573 318.931 683.808 318.166 683.808 317.222 cv
683.808 316.278 684.573 315.513 685.516 315.513 cv
691.212 315.513 li
692.156 315.513 692.921 316.278 692.921 317.222 cv
692.921 318.166 692.156 318.931 691.212 318.931 cv
.627451 .360784 .227451 rgb
f
512.682 264.519 mo
518.978 255.465 526.976 255.502 537.799 255.07 cv
537.799 255.07 538.011 255.063 538.358 255.049 cv
538.349 254.625 li
538.349 254.625 540.974 254.728 543.681 254.837 cv
546.388 254.728 549.013 254.625 549.013 254.625 cv
549.004 255.049 li
549.351 255.063 549.563 255.07 549.563 255.07 cv
560.387 255.502 568.115 262.367 574.678 271.228 cv
585.546 285.906 580.528 298.514 580.528 314.203 cv
580.528 339.959 558.889 348.695 543.681 348.695 cv
528.472 348.695 506.585 339.774 506.585 314.203 cv
506.585 298.586 501.583 280.483 512.682 264.519 cv
1 .701961 .501961 rgb
f
522.279 307.082 mo
523.655 314.897 519.024 321.404 511.929 322.805 cv
504.831 324.209 497.973 319.975 496.6 312.159 cv
495.227 304.345 499.856 296.87 506.954 295.471 cv
514.045 294.066 520.906 299.267 522.279 307.082 cv
cp
f
567.168 307.082 mo
565.792 314.897 568.124 321.404 575.216 322.805 cv
582.312 324.209 589.174 319.975 590.546 312.159 cv
591.92 304.345 587.287 296.87 580.194 295.471 cv
573.099 294.066 568.542 299.267 567.168 307.082 cv
cp
f
580.32 298.188 mo
580.011 292.109 582.199 284.862 574.174 281.428 cv
571.094 280.11 567.728 280.037 564.618 280.343 cv
553.392 281.442 545.232 286.935 525.62 283.76 cv
514.709 281.996 508.934 277.79 508.934 277.79 cv
507.723 276.831 507.431 286.53 507.376 292.183 cv
507.352 294.8 507.381 297.29 507.416 299.907 cv
507.435 301.441 507.431 302.977 507.459 304.51 cv
507.472 305.135 507.607 306.713 505.556 306.71 cv
504.05 306.708 503.859 302.721 503.803 301.994 cv
502.926 290.513 502.492 292.367 503.004 281.649 cv
503.249 276.471 503.151 276.567 503.578 271.961 cv
501.62 270.412 500.095 268.107 499.186 265.315 cv
498.395 262.888 500.7 260.574 503.141 261.322 cv
503.313 261.374 503.411 261.402 503.411 261.402 cv
501.546 259.04 499.901 255.751 499.193 251.859 cv
498.742 249.374 501.227 247.423 503.562 248.385 cv
505.37 249.129 507.322 249.42 509.511 249.226 cv
509.478 249.172 li
507.912 246.55 510.723 243.398 513.49 244.69 cv
515.156 245.469 517.179 246.042 519.542 246.44 cv
529.982 248.201 547.502 234.784 572.438 253.252 cv
581.172 259.72 584.42 271.533 584.433 282.874 cv
584.448 297.602 584.445 285.271 584.457 299.834 cv
584.462 301.139 584.366 305.72 582.858 306.743 cv
581.401 307.732 580.289 306.258 580.315 304.845 cv
580.357 302.688 580.452 300.817 580.32 298.188 cv
cp
.309804 .184314 .098039 rgb
f
543.516 336.04 mo
543.005 336.04 542.472 336.021 541.933 335.985 cv
537.452 335.681 533.902 334.221 532.436 332.08 cv
531.898 331.289 532.102 330.208 532.889 329.67 cv
533.181 329.471 533.517 329.366 533.864 329.366 cv
533.972 329.366 534.081 329.377 534.19 329.397 cv
534.643 329.483 535.037 329.74 535.296 330.123 cv
536.117 331.321 538.942 332.31 542.166 332.527 cv
542.666 332.562 543.16 332.579 543.646 332.579 cv
547.316 332.579 550.5 331.592 551.995 329.939 cv
552.307 329.594 552.734 329.391 553.196 329.368 cv
553.213 329.367 553.231 329.367 553.249 329.367 cv
553.702 329.367 554.113 329.517 554.443 329.817 cv
555.149 330.454 555.205 331.552 554.565 332.263 cv
551.48 335.672 545.81 336.04 543.516 336.04 cv
.678431 .392157 .270588 rgb
f
528.817 306.936 mo
528.817 309.305 526.896 311.229 524.524 311.229 cv
522.151 311.229 520.227 309.305 520.227 306.936 cv
520.227 304.562 522.151 302.641 524.524 302.641 cv
526.896 302.641 528.817 304.562 528.817 306.936 cv
cp
.227451 .117647 .039216 rgb
f
567.119 306.936 mo
567.119 309.305 565.196 311.229 562.824 311.229 cv
560.454 311.229 558.53 309.305 558.53 306.936 cv
558.53 304.562 560.454 302.641 562.824 302.641 cv
565.196 302.641 567.119 304.562 567.119 306.936 cv
cp
f
557.28 300.231 mo
557.853 300.231 558.418 299.993 558.799 299.537 cv
559.734 298.42 561.127 297.779 562.624 297.779 cv
564.122 297.779 565.515 298.42 566.449 299.537 cv
567.111 300.326 568.323 300.462 569.161 299.841 cv
570 299.22 570.145 298.077 569.484 297.287 cv
567.813 295.288 565.313 294.142 562.624 294.142 cv
559.936 294.142 557.435 295.288 555.764 297.287 cv
555.104 298.077 555.248 299.22 556.087 299.841 cv
556.442 300.103 556.862 300.231 557.28 300.231 cv
cp
.309804 .184314 .098039 rgb
f
519.178 300.231 mo
519.75 300.231 520.316 299.993 520.697 299.537 cv
521.631 298.42 523.024 297.779 524.522 297.779 cv
526.019 297.779 527.412 298.42 528.347 299.537 cv
529.008 300.326 530.22 300.462 531.059 299.841 cv
531.897 299.22 532.042 298.077 531.382 297.287 cv
529.711 295.288 527.21 294.142 524.522 294.142 cv
521.833 294.142 519.332 295.288 517.661 297.287 cv
517.001 298.077 517.146 299.22 517.985 299.841 cv
518.339 300.103 518.759 300.231 519.178 300.231 cv
cp
f
500.713 376.982 mo
501.853 374.392 503.011 372.197 504.174 370.497 cv
505.624 368.376 518.904 358.428 532.554 353.906 cv
532.554 342.966 li
554.655 342.966 li
554.655 353.924 li
566.504 357.798 581.356 368.147 582.965 370.497 cv
584.128 372.198 585.288 374.393 586.433 376.982 cv
500.713 376.982 li
cp
1 .701961 .501961 rgb
f
499.886 378.121 mo
501.917 370.733 506.513 366.21 508.713 364.389 cv
508.771 364.296 508.835 364.208 508.919 364.134 cv
512.907 360.521 519.388 358.141 525.293 355.918 cv
525.894 355.692 526.56 355.897 526.935 356.419 cv
528.5 358.6 533.409 363.979 543.748 363.979 cv
552.545 363.979 558.161 358.349 559.933 356.273 cv
560.317 355.823 560.94 355.67 561.494 355.878 cv
567.343 358.076 573.547 360.279 577.218 363.459 cv
577.218 363.459 584.537 368.231 587.26 378.121 cv
499.886 378.121 li
cp
.639216 .431373 .227451 rgb
f
546.421 322.501 mo
540.725 322.501 li
539.782 322.501 539.016 321.736 539.016 320.792 cv
539.016 319.848 539.782 319.083 540.725 319.083 cv
546.421 319.083 li
547.364 319.083 548.129 319.848 548.129 320.792 cv
548.129 321.736 547.364 322.501 546.421 322.501 cv
.858823 .552941 .384314 rgb
f
286.202 262.651 mo
279.906 253.597 270.758 246.924 259.934 246.493 cv
259.934 246.493 259.723 246.485 259.375 246.471 cv
259.384 246.047 li
259.384 246.047 255.621 246.15 252.913 246.259 cv
250.205 246.15 247.58 246.047 247.58 246.047 cv
247.59 246.471 li
247.243 246.485 247.031 246.493 247.031 246.493 cv
236.206 246.924 227.327 253.789 220.764 262.651 cv
209.897 277.328 214.914 297.997 214.914 313.686 cv
214.914 339.442 237.705 348.179 252.913 348.179 cv
268.121 348.179 292.3 339.258 292.3 313.686 cv
292.3 298.069 297.302 278.616 286.202 262.651 cv
.737255 .470588 .290196 rgb
f
276.605 306.566 mo
275.23 314.38 279.861 320.887 286.955 322.289 cv
294.053 323.692 300.912 319.458 302.285 311.642 cv
303.659 303.829 299.028 296.354 291.93 294.955 cv
284.839 293.549 277.979 298.75 276.605 306.566 cv
cp
f
228.274 306.566 mo
229.65 314.38 227.318 320.887 220.227 322.289 cv
213.131 323.692 206.269 319.458 204.897 311.642 cv
203.523 303.829 208.156 296.354 215.248 294.955 cv
222.343 293.549 226.9 298.75 228.274 306.566 cv
cp
f
268.291 322.944 mo
262.244 336.802 242.051 332.805 238.841 323.047 cv
238.581 322.254 239.08 321.57 239.814 321.569 cv
267.508 321.547 li
268.24 321.545 268.62 322.189 268.291 322.944 cv
cp
1 1 1 rgb
f
252.522 354.68 mo
241.705 355.474 li
232.324 358.277 li
232.324 358.277 233.223 370.516 250.583 368.735 cv
267.942 366.953 271.624 357.103 271.624 357.103 cv
265.359 355.474 li
252.522 354.68 li
cp
.737255 .470588 .290196 rgb
f
265.032 366.021 mo
242.032 366.021 li
242.032 341.561 li
265.032 341.561 li
265.032 366.021 li
cp
f
296.632 378.121 mo
296.345 377.01 296.1 376.146 295.915 375.578 cv
292.737 365.805 288.056 362.853 271.624 357.103 cv
271.624 357.103 264.576 363.985 252.7 363.985 cv
240.825 363.985 235.618 357.103 235.618 357.103 cv
219.185 362.853 214.506 365.805 211.327 375.578 cv
211.141 376.146 210.875 377.01 210.55 378.121 cv
296.632 378.121 li
cp
.788235 .192157 .192157 rgb
f
264.991 318.793 mo
260.786 316.659 256.255 316.496 253.59 316.521 cv
250.926 316.496 246.396 316.659 242.191 318.793 cv
238.925 320.452 237.14 322.914 236.25 324.565 cv
235.81 325.382 236.515 326.313 237.562 326.313 cv
269.62 326.313 li
270.667 326.313 271.372 325.382 270.931 324.565 cv
270.042 322.914 268.258 320.452 264.991 318.793 cv
.2 .098039 .027451 rgb
f
240.97 301.052 mo
240.97 302.133 240.094 303.009 239.013 303.009 cv
231.092 303.009 li
230.011 303.009 229.135 302.133 229.135 301.052 cv
229.135 301.051 li
229.135 299.97 230.011 299.093 231.092 299.093 cv
239.012 299.093 li
240.094 299.093 240.97 299.97 240.97 301.052 cv
cp
.227451 .117647 .039216 rgb
f
278.048 301.052 mo
278.048 302.133 277.171 303.009 276.09 303.009 cv
268.168 303.009 li
267.087 303.009 266.211 302.133 266.211 301.052 cv
266.211 301.051 li
266.211 299.97 267.088 299.093 268.169 299.093 cv
276.089 299.093 li
277.171 299.093 278.048 299.97 278.048 301.052 cv
cp
f
242.003 295.439 mo
228.102 295.439 li
226.844 295.439 225.824 294.164 225.824 292.591 cv
225.824 291.019 226.844 289.743 228.102 289.743 cv
242.003 289.743 li
243.261 289.743 244.281 291.019 244.281 292.591 cv
244.281 294.164 243.261 295.439 242.003 295.439 cv
cp
.2 .098039 .027451 rgb
f
279.08 295.439 mo
265.179 295.439 li
263.921 295.439 262.901 294.164 262.901 292.591 cv
262.901 291.019 263.921 289.743 265.179 289.743 cv
279.08 289.743 li
280.338 289.743 281.358 291.019 281.358 292.591 cv
281.358 294.164 280.338 295.439 279.08 295.439 cv
cp
f
262.577 337.589 mo
259.456 337.661 258.424 336.98 258.066 335.519 cv
257.748 334.212 255.216 333.843 253.849 333.802 cv
253.849 333.802 li
253.604 333.793 li
253.591 333.794 li
253.578 333.793 li
253.333 333.802 li
253.333 333.802 li
251.966 333.843 249.434 334.212 249.116 335.519 cv
248.758 336.98 247.726 337.661 244.605 337.589 cv
230.412 337.26 219.199 325.384 219.199 311.186 cv
219.199 277.66 li
219.199 271.539 222.627 268.886 225.438 268.886 cv
231.936 268.886 232.613 270.918 252.349 270.918 cv
269.813 270.918 273.79 268.277 280.326 268.277 cv
284.411 268.277 287.983 271.306 287.983 277.712 cv
287.983 311.186 li
287.983 325.383 276.77 337.26 262.577 337.589 cv
296.309 292.582 mo
295.816 275.459 li
295.816 263.902 289.828 251.918 279.653 245.172 cv
268.318 237.653 247.187 238.047 234.142 242.301 cv
225.056 245.268 217.508 252.992 214.27 261.987 cv
213.122 265.178 211.426 273.785 211.366 275.459 cv
210.873 292.582 li
210.873 294.379 211.38 295.665 212.231 296.676 cv
213.704 298.428 214.342 300.737 214.342 303.026 cv
214.342 318.263 li
214.342 322.699 215.041 327.136 216.69 331.254 cv
223.295 347.755 241.176 354.889 252.869 354.889 cv
253.109 354.889 253.35 354.882 253.591 354.876 cv
253.832 354.882 254.073 354.889 254.313 354.889 cv
266.006 354.889 283.887 347.755 290.492 331.254 cv
292.141 327.136 292.84 322.699 292.84 318.263 cv
292.84 303.026 li
292.84 300.737 293.478 298.428 294.951 296.676 cv
295.802 295.665 296.309 294.379 296.309 292.582 cv
f
256.439 316.519 mo
254.103 316.519 li
254.077 316.518 254.051 316.518 254.026 316.518 cv
254 316.518 253.973 316.518 253.947 316.519 cv
253.233 316.519 li
253.207 316.518 253.181 316.518 253.155 316.518 cv
253.129 316.518 253.104 316.518 253.078 316.519 cv
250.743 316.519 li
249.8 316.519 249.034 315.754 249.034 314.81 cv
249.034 313.866 249.8 313.101 250.743 313.101 cv
256.439 313.101 li
257.382 313.101 258.148 313.866 258.148 314.81 cv
258.148 315.754 257.382 316.519 256.439 316.519 cv
.627451 .360784 .227451 rgb
f
254.103 316.519 mo
253.947 316.519 li
253.973 316.518 254 316.518 254.026 316.518 cv
254.051 316.518 254.077 316.518 254.103 316.519 cv
253.233 316.519 mo
253.078 316.519 li
253.104 316.518 253.129 316.518 253.155 316.518 cv
253.181 316.518 253.207 316.518 253.233 316.519 cv
.305882 .137255 .0705882 rgb
f
409.982 364.616 mo
386.661 364.616 li
386.661 340.026 li
409.982 340.026 li
409.982 364.616 li
cp
1 .701961 .501961 rgb
f
357.197 378.121 mo
439.446 378.121 li
442.982 378.121 li
442.982 366.091 428.514 358.239 417.821 354.879 cv
413.617 354.061 li
413.228 354.171 li
412.768 354.061 li
398.322 358.104 li
383.875 354.061 li
383.415 354.171 li
383.026 354.061 li
378.822 354.879 li
368.129 358.239 353.661 367.321 353.661 378.121 cv
357.197 378.121 li
cp
.160784 .631373 .839216 rgb
f
409.982 365.918 mo
386.661 365.918 li
386.661 341.454 li
409.982 341.454 li
409.982 365.918 li
cp
1 .701961 .501961 rgb
f
398.977 371.251 mo
406.015 370.26 412.228 363.611 416.952 355.267 cv
416.556 355.137 416.167 355.006 415.757 354.878 cv
412.765 354.061 li
397.951 358.239 li
383.023 354.061 li
379.691 354.867 li
384.967 362.908 390.652 372.274 398.977 371.251 cv
cp
.898039 .898039 .898039 rgb
f
398.117 377.404 mo
398.117 377.404 410.281 372.194 419.3 355.516 cv
417.387 354.651 415.219 354.142 412.82 353.686 cv
408.096 362.029 398.023 368.98 398.023 368.98 cv
398.023 368.98 387.921 361.973 382.644 353.932 cv
382.644 353.932 378.853 354.605 377.343 355.221 cv
383.606 371.328 398.117 377.404 398.117 377.404 cv
cp
.101961 .521569 .756863 rgb
f
387.309 367.314 mo
387.142 367.163 li
382.644 353.932 li
382.644 353.932 386.414 349.227 386.565 349.639 cv
398.32 353.056 li
398.32 353.056 409.777 349.639 409.887 349.639 cv
410.016 349.639 413.996 353.932 413.996 353.932 cv
409.443 367.159 li
409.276 367.307 li
409.213 367.317 li
409.054 367.259 li
398.296 358.392 li
387.531 367.266 li
387.373 367.321 li
387.309 367.314 li
cp
1 1 1 rgb
f
432.069 265.517 mo
425.663 256.303 412.951 249.072 400.778 249.072 cv
395.641 249.072 li
382.644 249.072 371.034 256.498 364.355 265.517 cv
353.295 280.454 359.54 302.603 359.54 318.57 cv
359.54 344.782 382.733 353.673 398.212 353.673 cv
413.688 353.673 437.136 344.594 437.136 318.57 cv
437.136 302.676 443.365 281.763 432.069 265.517 cv
1 .701961 .501961 rgb
f
421.164 311.323 mo
419.763 319.276 424.476 325.898 431.697 327.324 cv
438.919 328.752 445.9 324.444 447.297 316.489 cv
448.697 308.537 443.983 300.931 436.76 299.507 cv
429.542 298.076 422.56 303.369 421.164 311.323 cv
cp
f
373.137 311.323 mo
374.538 319.276 372.165 325.898 364.946 327.324 cv
357.726 328.752 350.742 324.444 349.345 316.489 cv
347.948 308.537 352.661 300.931 359.879 299.507 cv
367.1 298.076 371.738 303.369 373.137 311.323 cv
cp
f
399.6 321.211 mo
399.6 321.211 400.6 330.054 394.601 334.999 cv
388.602 339.945 377.875 339.12 377.875 339.12 cv
377.875 339.12 376.875 330.277 382.873 325.331 cv
388.873 320.387 399.6 321.211 399.6 321.211 cv
.898039 .898039 .898039 rgb
f
397.042 321.211 mo
397.042 321.211 396.044 330.054 402.043 334.999 cv
408.041 339.945 418.768 339.12 418.768 339.12 cv
418.768 339.12 419.769 330.277 413.77 325.331 cv
407.77 320.387 397.042 321.211 397.042 321.211 cv
f
413.078 306.233 mo
413.078 308.601 414.999 310.526 417.37 310.526 cv
419.743 310.526 421.668 308.601 421.668 306.233 cv
421.668 303.858 419.743 301.938 417.37 301.938 cv
414.999 301.938 413.078 303.858 413.078 306.233 cv
cp
.227451 .117647 .039216 rgb
f
374.776 306.233 mo
374.776 308.602 376.699 310.525 379.07 310.525 cv
381.44 310.525 383.365 308.602 383.365 306.233 cv
383.365 303.859 381.44 301.937 379.07 301.937 cv
376.699 301.937 374.776 303.859 374.776 306.233 cv
cp
f
384.614 299.527 mo
384.042 299.527 383.476 299.29 383.095 298.834 cv
382.161 297.716 380.768 297.076 379.27 297.076 cv
377.773 297.076 376.38 297.716 375.445 298.834 cv
375.063 299.289 374.497 299.527 373.926 299.527 cv
373.508 299.527 373.087 299.4 372.733 299.138 cv
371.894 298.517 371.75 297.373 372.41 296.584 cv
374.081 294.585 376.582 293.439 379.27 293.439 cv
381.958 293.439 384.459 294.585 386.131 296.584 cv
386.791 297.373 386.646 298.517 385.807 299.138 cv
385.453 299.4 385.033 299.527 384.614 299.527 cv
.733333 .462745 .333333 rgb
f
422.717 299.527 mo
422.144 299.527 421.579 299.29 421.198 298.834 cv
420.263 297.716 418.87 297.076 417.373 297.076 cv
415.875 297.076 414.482 297.716 413.548 298.834 cv
413.166 299.289 412.6 299.527 412.029 299.527 cv
411.611 299.527 411.19 299.4 410.836 299.138 cv
409.997 298.517 409.852 297.373 410.512 296.584 cv
412.184 294.585 414.684 293.439 417.373 293.439 cv
420.061 293.439 422.562 294.585 424.233 296.584 cv
424.893 297.373 424.749 298.517 423.91 299.138 cv
423.555 299.4 423.135 299.527 422.717 299.527 cv
f
364.543 297.784 mo
364.543 299.988 364.545 304.745 360.302 302.481 cv
357.677 301.07 355.797 299.418 355.797 295.87 cv
356.398 276.874 li
357.229 271.229 361.168 266.435 364.131 266.435 cv
363.931 268.052 362.936 269.79 363.524 271.335 cv
364.082 272.802 364.545 274.554 364.545 276.407 cv
364.545 277.324 364.543 294.192 364.543 297.784 cv
cp
.898039 .898039 .898039 rgb
f
432.1 297.784 mo
432.1 299.988 432.098 304.745 436.341 302.481 cv
438.966 301.07 440.846 299.418 440.846 295.87 cv
440.245 276.874 li
439.414 271.229 435.475 266.435 432.512 266.435 cv
432.712 268.052 433.706 269.79 433.119 271.335 cv
432.561 272.802 432.098 274.554 432.098 276.407 cv
432.098 277.324 432.1 294.192 432.1 297.784 cv
cp
f
401.169 321.159 mo
395.474 321.159 li
394.53 321.159 393.765 320.395 393.765 319.451 cv
393.765 318.507 394.53 317.742 395.474 317.742 cv
401.169 317.742 li
402.113 317.742 402.878 318.507 402.878 319.451 cv
402.878 320.395 402.113 321.159 401.169 321.159 cv
.858823 .552941 .384314 rgb
f
73.9742 687.78 mo
73.9742 687.78 61.7718 695.969 61.7718 708.318 cv
61.7718 728.423 71.2265 727.501 69.036 732.384 cv
68.2552 734.129 70.1273 735.315 74.8153 733.434 cv
81.5511 730.728 93.3374 722.791 85.231 703.808 cv
77.1258 684.826 77.1458 685.444 73.9742 687.78 cv
cp
.537255 .345098 .211765 rgb
f
148.992 685.791 mo
148.992 685.791 156.531 652.033 142.357 636.088 cv
129.4 621.514 112.953 621.43 105.168 621.43 cv
97.3835 621.43 69.6679 626.849 65.7922 653.612 cv
61.4447 683.622 70.6658 682.483 70.6658 682.483 cv
70.6658 682.483 102.058 704.458 114.608 699.387 cv
133.653 691.693 148.992 685.791 148.992 685.791 cv
f
136.495 644.119 mo
130.587 635.357 124.303 628.898 114.144 628.481 cv
114.144 628.481 113.947 628.473 113.62 628.459 cv
113.628 628.05 li
113.628 628.05 111.164 628.149 108.626 628.254 cv
106.082 628.149 103.62 628.05 103.62 628.05 cv
103.629 628.459 li
103.304 628.473 103.102 628.481 103.102 628.481 cv
92.9447 628.898 86.9153 635.542 80.7545 644.119 cv
70.5557 658.324 72.962 676.027 72.962 691.211 cv
72.962 716.14 94.351 724.597 108.626 724.597 cv
122.897 724.597 144.521 715.961 144.521 691.211 cv
144.521 676.095 146.913 659.571 136.495 644.119 cv
1 .701961 .501961 rgb
f
136.595 685.712 mo
135.887 691.541 139.167 696.758 143.922 697.361 cv
148.669 697.96 153.097 693.724 153.802 687.895 cv
154.508 682.065 151.225 676.849 146.474 676.249 cv
141.721 675.645 137.299 679.882 136.595 685.712 cv
cp
f
79.8791 685.712 mo
80.5866 691.541 77.306 696.758 72.5503 697.361 cv
67.8013 697.96 63.3737 693.724 62.6706 687.895 cv
61.9654 682.065 65.2482 676.849 70.0006 676.249 cv
74.7551 675.645 79.1749 679.882 79.8791 685.712 cv
cp
f
86.0165 630.602 mo
96.1408 623.882 110.725 623.218 122.377 627.021 cv
128.741 629.098 144.15 634.595 145.824 655.29 cv
146.898 662.584 150.376 673.313 150.256 677.912 cv
146.452 682.537 li
146.452 682.537 141.977 666.208 115.423 658.802 cv
98.023 653.952 92.1783 648.466 92.1783 648.466 cv
92.1783 648.466 90.2927 655.948 82.8682 663.662 cv
72.9798 673.937 70.7848 681.661 70.7848 681.661 cv
66.0525 678.042 li
69.896 667.542 li
69.896 655.386 69.5533 641.518 86.0165 630.602 cv
cp
.537255 .345098 .211765 rgb
f
108.307 710.802 mo
104.123 710.802 100.361 709.134 97.7107 706.106 cv
97.4171 705.772 97.2719 705.341 97.3016 704.897 cv
97.3308 704.453 97.5317 704.047 97.8671 703.754 cv
98.1708 703.488 98.5523 703.338 98.9516 703.338 cv
98.9939 703.338 99.0365 703.34 99.0792 703.343 cv
99.5236 703.372 99.9291 703.572 100.222 703.907 cv
102.854 706.915 106.241 707.46 108.391 707.46 cv
108.641 707.46 108.873 707.453 109.086 707.441 cv
112.252 707.25 115.342 705.831 116.603 703.987 cv
116.852 703.621 117.229 703.373 117.666 703.29 cv
117.771 703.27 117.877 703.26 117.982 703.26 cv
118.315 703.26 118.639 703.359 118.921 703.55 cv
119.291 703.802 119.539 704.183 119.622 704.621 cv
119.703 705.059 119.61 705.502 119.358 705.871 cv
117.496 708.593 113.541 710.517 109.282 710.771 cv
108.957 710.791 108.629 710.802 108.307 710.802 cv
.678431 .392157 .270588 rgb
f
116.603 739.6 mo
99.7083 739.6 li
99.7083 718.78 li
116.603 718.78 li
116.603 739.6 li
cp
1 .701961 .501961 rgb
f
140.621 750 mo
136.929 737.291 132.511 735.312 125.762 732.501 cv
125.357 732.333 116.79 730.178 116.79 730.178 cv
116.79 730.178 116.004 733.961 108.767 733.966 cv
101.53 733.971 99.8954 730.178 99.8954 730.178 cv
99.8954 730.178 94.0058 731.855 93.8671 731.896 cv
84.9692 734.573 80.4794 738.199 77.3463 745.004 cv
77.0267 745.698 76.4255 747.615 75.69 750 cv
140.621 750 li
cp
.788235 .192157 .192157 rgb
f
123.493 682.323 mo
123.493 684.691 125.414 686.616 127.785 686.616 cv
130.158 686.616 132.083 684.691 132.083 682.323 cv
132.083 679.948 130.158 678.028 127.785 678.028 cv
125.414 678.028 123.493 679.948 123.493 682.323 cv
cp
.227451 .117647 .039216 rgb
f
85.1903 682.323 mo
85.1903 684.692 87.1137 686.615 89.4851 686.615 cv
91.8549 686.615 93.7794 684.692 93.7794 682.323 cv
93.7794 679.949 91.8549 678.027 89.4851 678.027 cv
87.1137 678.027 85.1903 679.949 85.1903 682.323 cv
cp
f
95.0289 675.618 mo
94.4567 675.618 93.8909 675.38 93.5099 674.924 cv
92.5757 673.807 91.1825 673.166 89.685 673.166 cv
88.1874 673.166 86.7942 673.807 85.86 674.924 cv
85.1986 675.713 83.9865 675.848 83.1477 675.228 cv
82.3092 674.607 82.1646 673.463 82.8247 672.674 cv
84.4957 670.675 86.9967 669.529 89.685 669.529 cv
92.3733 669.529 94.8742 670.675 96.5452 672.674 cv
97.2054 673.463 97.0608 674.607 96.222 675.228 cv
95.8674 675.49 95.4476 675.618 95.0289 675.618 cv
cp
.537255 .345098 .211765 rgb
f
133.132 675.618 mo
132.559 675.618 131.993 675.38 131.613 674.924 cv
130.678 673.807 129.285 673.166 127.788 673.166 cv
126.29 673.166 124.897 673.807 123.963 674.924 cv
123.301 675.713 122.089 675.848 121.25 675.228 cv
120.412 674.607 120.267 673.463 120.927 672.674 cv
122.598 670.675 125.099 669.529 127.788 669.529 cv
130.476 669.529 132.977 670.675 134.648 672.674 cv
135.308 673.463 135.163 674.607 134.325 675.228 cv
133.97 675.49 133.55 675.618 133.132 675.618 cv
cp
f
111.322 698.24 mo
105.626 698.24 li
104.683 698.24 103.918 697.475 103.918 696.532 cv
103.918 695.588 104.683 694.823 105.626 694.823 cv
111.322 694.823 li
112.265 694.823 113.031 695.588 113.031 696.532 cv
113.031 697.475 112.265 698.24 111.322 698.24 cv
.858823 .552941 .384314 rgb
f
295.087 670.281 mo
292.63 618.259 251.903 622.844 251.903 622.844 cv
251.797 622.844 251.695 622.876 251.591 622.894 cv
251.486 622.876 251.385 622.844 251.278 622.844 cv
251.278 622.844 210.552 618.259 208.094 670.281 cv
205.638 722.301 219.311 724.883 219.311 727.414 cv
219.311 729.942 211.445 736.029 217.559 745.108 cv
218.867 747.05 221.034 748.678 223.682 750 cv
279.5 750 li
282.148 748.678 284.315 747.05 285.623 745.108 cv
291.737 736.029 283.871 729.942 283.871 727.414 cv
283.871 724.883 297.545 722.301 295.087 670.281 cv
.643137 .4 .686275 rgb
f
221.705 644.959 mo
227.705 636.451 230.115 636.488 237.381 636.525 cv
239.045 636.534 240.965 636.542 243.242 636.448 cv
255.834 634.482 li
268.047 634.989 272.192 638.005 279.565 648.463 cv
286.945 658.93 287.669 651.963 287.086 664.589 cv
286.646 674.129 288.401 658.966 288.401 685.907 cv
288.401 712.73 268.341 725.555 251.592 725.555 cv
235.82 725.555 214.781 714.404 214.781 685.907 cv
214.781 667.118 215.488 667.423 215.893 667.727 cv
216.127 667.903 216.26 668.079 216.099 664.589 cv
215.519 651.963 214.326 655.426 221.705 644.959 cv
.917647 .6 .423529 rgb
f
214.066 678.532 mo
214.066 678.532 223.165 654.345 249.582 654.734 cv
261.064 654.902 277.065 656.733 288.418 678.532 cv
288.418 678.532 293.187 632.845 256.936 632.312 cv
225.257 631.847 213.678 648.856 214.066 678.532 cv
cp
1 1 1 rgb
f
211.128 680.018 mo
214.901 678.532 li
214.901 678.532 214.852 643.06 250.734 642.928 cv
287.939 642.791 288.418 678.532 288.418 678.532 cv
288.418 678.532 293.142 659.373 287.384 648.463 cv
281.625 637.554 273.565 625.079 245.927 630.26 cv
218.29 635.443 210.361 657.268 211.128 680.018 cv
cp
.643137 .4 .686275 rgb
f
288.563 750 mo
288.563 740.329 273.532 736.355 272.052 735.274 cv
272.052 735.274 268.291 733.204 262.679 731.761 cv
262.524 731.722 262.367 731.7 262.224 731.78 cv
262.083 731.858 261.984 731.997 261.955 732.16 cv
261.934 732.274 li
259.873 743.619 243.1 743.619 241.039 732.274 cv
241.018 732.16 li
240.988 731.997 240.89 731.858 240.747 731.78 cv
240.606 731.7 240.447 731.722 240.294 731.761 cv
236.029 732.858 232.838 734.313 231.549 734.95 cv
231.55 734.838 li
231.435 734.92 231.269 735.045 231.083 735.186 cv
230.978 735.241 230.921 735.274 230.921 735.274 cv
230.921 735.31 li
228.479 737.175 214.619 741.848 214.619 750 cv
288.563 750 li
cp
.2 .098039 .027451 rgb
f
286.45 723.744 mo
274.79 724.41 262.927 729.447 251.338 729.466 cv
239.748 729.486 228.433 724.487 216.732 724.207 cv
218.119 725.459 219.059 726.089 219.059 726.56 cv
219.059 728.5 219.206 735.838 228.142 740.688 cv
239 746.581 257.383 748.529 275.534 739.142 cv
284.61 734.447 283.619 728.5 283.619 726.56 cv
283.619 726.034 284.791 725.31 286.45 723.744 cv
cp
.643137 .4 .686275 rgb
f
251.648 711.912 mo
247.776 711.912 243.279 710.956 240.811 708.229 cv
240.275 707.634 240.32 706.719 240.913 706.184 cv
241.507 705.643 242.42 705.691 242.957 706.286 cv
244.701 708.215 248.65 709.275 253.016 708.967 cv
256.378 708.742 259.223 707.725 260.103 706.439 cv
260.552 705.779 261.453 705.61 262.115 706.062 cv
262.774 706.512 262.943 707.413 262.493 708.076 cv
261.077 710.144 257.609 711.559 253.212 711.858 cv
252.707 711.891 252.183 711.912 251.648 711.912 cv
cp
.556863 .305882 .219608 rgb
f
241.882 706.092 mo
241.594 706.092 241.32 706.198 241.105 706.394 cv
240.629 706.824 240.592 707.561 241.022 708.038 cv
243.953 711.278 249.429 711.627 251.648 711.627 cv
252.15 711.627 252.669 711.609 253.193 711.574 cv
257.5 711.281 260.889 709.914 262.258 707.915 cv
262.618 707.384 262.482 706.658 261.954 706.296 cv
261.696 706.122 261.386 706.052 261.08 706.114 cv
260.776 706.172 260.512 706.344 260.338 706.6 cv
259.396 707.976 256.53 709.016 253.035 709.251 cv
248.588 709.565 244.552 708.474 242.746 706.478 cv
242.536 706.245 242.249 706.108 241.939 706.094 cv
241.882 706.092 li
cp
251.648 712.197 mo
249.354 712.197 243.684 711.828 240.599 708.42 cv
239.96 707.708 240.015 706.611 240.722 705.973 cv
241.064 705.662 241.511 705.512 241.967 705.524 cv
242.43 705.548 242.856 705.75 243.168 706.095 cv
244.861 707.967 248.716 708.979 252.996 708.684 cv
256.222 708.467 259.047 707.478 259.867 706.279 cv
260.127 705.898 260.52 705.64 260.974 705.554 cv
261.427 705.466 261.891 705.563 262.275 705.827 cv
263.062 706.364 263.266 707.445 262.729 708.236 cv
261.261 710.378 257.711 711.837 253.232 712.141 cv
252.695 712.178 252.162 712.197 251.648 712.197 cv
cp
f
266.347 685.086 mo
266.347 687.454 268.268 689.379 270.64 689.379 cv
273.013 689.379 274.937 687.454 274.937 685.086 cv
274.937 682.711 273.013 680.791 270.64 680.791 cv
268.268 680.791 266.347 682.711 266.347 685.086 cv
cp
.227451 .117647 .039216 rgb
f
228.045 685.086 mo
228.045 687.455 229.968 689.378 232.34 689.378 cv
234.71 689.378 236.634 687.455 236.634 685.086 cv
236.634 682.712 234.71 680.79 232.34 680.79 cv
229.968 680.79 228.045 682.712 228.045 685.086 cv
cp
f
237.884 678.38 mo
237.311 678.38 236.746 678.142 236.365 677.687 cv
235.43 676.569 234.037 675.929 232.54 675.929 cv
231.042 675.929 229.649 676.569 228.715 677.687 cv
228.053 678.476 226.841 678.611 226.003 677.991 cv
225.164 677.37 225.019 676.226 225.679 675.437 cv
227.35 673.438 229.851 672.292 232.54 672.292 cv
235.228 672.292 237.729 673.438 239.4 675.437 cv
240.06 676.226 239.915 677.37 239.077 677.991 cv
238.722 678.253 238.302 678.38 237.884 678.38 cv
cp
f
275.986 678.38 mo
275.414 678.38 274.848 678.142 274.467 677.687 cv
273.533 676.569 272.14 675.929 270.642 675.929 cv
269.145 675.929 267.752 676.569 266.817 677.687 cv
266.156 678.476 264.944 678.611 264.105 677.991 cv
263.266 677.37 263.122 676.226 263.782 675.437 cv
265.453 673.438 267.954 672.292 270.642 672.292 cv
273.331 672.292 275.831 673.438 277.503 675.437 cv
278.163 676.226 278.018 677.37 277.179 677.991 cv
276.825 678.253 276.405 678.38 275.986 678.38 cv
cp
f
254.339 700.672 mo
248.643 700.672 li
247.7 700.672 246.935 699.907 246.935 698.963 cv
246.935 698.019 247.7 697.254 248.643 697.254 cv
254.339 697.254 li
255.282 697.254 256.048 698.019 256.048 698.963 cv
256.048 699.907 255.282 700.672 254.339 700.672 cv
.807843 .490196 .337255 rgb
f
448.142 691.112 mo
448.14 676.943 445.352 660.569 432.916 643.129 cv
427.642 635.73 416.823 635.022 407.915 635.475 cv
403.802 635.682 399.649 636.252 395.585 637.158 cv
391.518 636.252 382.831 629.213 379.078 630.945 cv
370.98 634.681 368.627 636.021 361.365 643.525 cv
348.862 656.441 344.501 677.35 344.501 689.531 cv
344.501 710.157 356.222 717.113 370.178 723.781 cv
383.083 729.066 387.738 729.066 413.474 726.102 cv
433.004 723.851 448.142 711.179 448.142 691.112 cv
.898039 .898039 .898039 rgb
f
424.08 649.174 mo
418.171 640.412 411.889 633.952 401.729 633.535 cv
401.729 633.535 401.532 633.527 401.205 633.514 cv
401.214 633.103 li
401.214 633.103 398.75 633.203 396.21 633.308 cv
393.667 633.203 391.205 633.103 391.205 633.103 cv
391.214 633.514 li
390.889 633.527 390.688 633.535 390.688 633.535 cv
380.529 633.952 374.501 640.597 368.34 649.174 cv
358.14 663.379 360.547 678.778 360.547 693.962 cv
360.547 718.891 381.936 727.348 396.21 727.348 cv
410.483 727.348 432.106 718.712 432.106 693.962 cv
432.106 678.847 434.498 664.626 424.08 649.174 cv
1 .701961 .501961 rgb
f
396.155 714.668 mo
391.972 714.668 388.209 713 385.559 709.972 cv
385.265 709.637 385.12 709.207 385.149 708.763 cv
385.179 708.319 385.38 707.913 385.715 707.619 cv
386.029 707.345 386.428 707.206 386.839 707.206 cv
386.868 707.206 386.897 707.206 386.926 707.208 cv
387.37 707.237 387.776 707.438 388.069 707.773 cv
390.699 710.777 394.078 711.327 396.231 711.327 cv
396.483 711.327 396.719 711.319 396.934 711.307 cv
400.099 711.116 403.19 709.696 404.451 707.853 cv
404.699 707.486 405.078 707.238 405.515 707.154 cv
405.62 707.134 405.725 707.125 405.83 707.125 cv
406.163 707.125 406.488 707.224 406.769 707.416 cv
407.138 707.668 407.387 708.048 407.469 708.486 cv
407.551 708.923 407.458 709.367 407.206 709.736 cv
405.344 712.458 401.389 714.383 397.13 714.637 cv
396.804 714.657 396.477 714.668 396.155 714.668 cv
.678431 .392157 .270588 rgb
f
421.9 633.226 mo
404.333 622.556 386.837 626.152 373.222 633.226 cv
366.362 636.791 350.627 652.338 348.688 675.936 cv
340.884 700.304 360.245 696.452 360.245 696.452 cv
364.487 661.589 412.201 651.397 412.201 651.397 cv
433.173 695.876 li
440.856 675.015 li
440.86 675 li
443.108 663.741 438.755 643.466 421.9 633.226 cv
.898039 .898039 .898039 rgb
f
405.76 740.578 mo
386.883 740.578 li
386.883 719.758 li
405.76 719.758 li
405.76 740.578 li
cp
1 .701961 .501961 rgb
f
406.712 750 mo
406.318 733.533 li
404.94 738.018 393.321 742.647 386.325 733.533 cv
385.931 750 li
406.712 750 li
cp
1 1 1 rgb
f
426.325 746.81 mo
426.109 746.325 425.896 745.832 425.671 745.372 cv
421.682 738.165 415.99 736.255 414.934 736.013 cv
414.875 735.987 li
414.861 735.997 li
414.746 735.982 li
414.762 735.824 406.318 733.533 406.318 733.533 cv
406.318 733.533 404.91 742.33 402.585 750 cv
404.343 750 li
427.648 750 li
427.245 748.849 426.801 747.795 426.325 746.81 cv
cp
.517647 .780392 .937255 rgb
f
377.897 735.982 mo
377.782 735.997 li
377.767 735.986 li
377.709 736.013 li
376.654 736.255 370.961 738.165 366.972 745.372 cv
366.747 745.832 366.534 746.325 366.318 746.81 cv
365.842 747.795 365.398 748.849 364.995 750 cv
388.3 750 li
390.057 750 li
387.733 742.33 386.325 733.533 386.325 733.533 cv
386.325 733.533 377.88 735.824 377.897 735.982 cv
cp
f
409.593 689.107 mo
420.244 689.107 li
420.244 686.163 417.858 683.782 414.916 683.782 cv
411.975 683.782 409.593 686.163 409.593 689.107 cv
cp
.227451 .117647 .039216 rgb
f
372.204 689.108 mo
382.855 689.108 li
382.855 686.164 380.468 683.781 377.53 683.781 cv
374.589 683.781 372.204 686.164 372.204 689.108 cv
cp
f
382.941 680.812 mo
382.382 680.812 381.83 680.579 381.458 680.134 cv
380.546 679.044 379.186 678.419 377.725 678.419 cv
376.263 678.419 374.903 679.044 373.991 680.134 cv
373.618 680.579 373.066 680.811 372.508 680.811 cv
372.1 680.811 371.689 680.687 371.343 680.431 cv
370.525 679.825 370.383 678.709 371.028 677.938 cv
372.659 675.987 375.1 674.868 377.725 674.868 cv
380.349 674.868 382.79 675.987 384.421 677.938 cv
385.065 678.709 384.924 679.825 384.106 680.431 cv
383.76 680.688 383.35 680.812 382.941 680.812 cv
.733333 .462745 .333333 rgb
f
420.135 680.812 mo
419.576 680.812 419.024 680.579 418.652 680.134 cv
417.74 679.044 416.38 678.419 414.918 678.419 cv
413.457 678.419 412.097 679.044 411.185 680.134 cv
410.812 680.579 410.26 680.811 409.702 680.811 cv
409.294 680.811 408.883 680.687 408.537 680.431 cv
407.718 679.825 407.577 678.709 408.222 677.938 cv
409.853 675.987 412.294 674.868 414.918 674.868 cv
417.543 674.868 419.984 675.987 421.615 677.938 cv
422.259 678.709 422.118 679.825 421.3 680.431 cv
420.953 680.688 420.544 680.812 420.135 680.812 cv
f
399.069 702.704 mo
393.374 702.704 li
392.43 702.704 391.665 701.94 391.665 700.995 cv
391.665 700.052 392.43 699.287 393.374 699.287 cv
399.069 699.287 li
400.013 699.287 400.778 700.052 400.778 700.995 cv
400.778 701.94 400.013 702.704 399.069 702.704 cv
.858823 .552941 .384314 rgb
f
584.628 643.035 mo
580.759 655.821 565.494 662.517 550.531 657.99 cv
535.569 653.463 526.576 639.427 530.445 626.641 cv
534.314 613.854 549.579 607.159 564.541 611.686 cv
579.504 616.213 588.497 630.248 584.628 643.035 cv
cp
.309804 .184314 .098039 rgb
f
572.188 642.64 mo
566.372 633.877 557.919 627.418 547.919 627 cv
547.919 627 547.725 626.993 547.403 626.98 cv
547.412 626.569 li
547.412 626.569 544.987 626.67 542.486 626.774 cv
539.984 626.67 537.559 626.569 537.559 626.569 cv
537.568 626.98 li
537.247 626.993 537.051 627 537.051 627 cv
527.051 627.418 518.848 634.063 512.785 642.64 cv
502.744 656.845 507.38 674.547 507.38 689.732 cv
507.38 714.66 528.435 725.42 542.486 725.42 cv
556.537 725.42 577.822 714.482 577.822 689.732 cv
577.822 674.616 582.443 658.092 572.188 642.64 cv
1 .701961 .501961 rgb
f
568.978 684.39 mo
568.224 690.457 571.717 695.883 576.784 696.511 cv
581.85 697.136 586.564 692.728 587.316 686.662 cv
588.066 680.594 584.569 675.17 579.505 674.542 cv
574.44 673.914 569.725 678.325 568.978 684.39 cv
cp
f
568.543 630.418 mo
550.913 619.535 533.197 622.911 519.69 630.418 cv
509.885 635.867 497.013 649.909 495.067 673.98 cv
494.206 700.221 506.594 725.073 506.594 725.073 cv
507.796 704.954 502.598 685.825 521.656 667.573 cv
539.492 650.495 562.843 648.928 562.843 648.928 cv
562.843 648.928 562.461 652.467 569.651 667.953 cv
576.84 683.438 577.854 690.894 577.854 690.894 cv
586.397 683.376 587.567 673.04 587.567 673.04 cv
587.572 673.024 li
589.828 661.54 585.461 640.86 568.543 630.418 cv
cp
.309804 .184314 .098039 rgb
f
570.909 749.906 mo
569.967 745.753 568.943 744.059 567.636 741.783 cv
566.182 742.201 565.618 741.107 567.012 740.557 cv
564.572 737.114 557.228 734.261 549.812 729.727 cv
549.812 719.533 li
534.594 719.533 li
534.594 730.194 li
527.444 734.463 520.516 737.232 518.16 740.557 cv
519.847 741.222 519.21 742.264 517.536 741.783 cv
516.228 744.059 515.204 745.753 514.262 749.906 cv
514.243 750 li
570.929 750 li
570.909 749.906 li
cp
1 .701961 .501961 rgb
f
564.431 750 mo
566.291 747.149 567.91 745.183 568.731 744.242 cv
569.071 743.853 569.144 743.288 568.889 742.839 cv
567.033 739.565 564.347 736.781 560.737 734.692 cv
560.243 734.406 559.61 734.516 559.231 734.942 cv
557.365 737.042 551.407 742.91 542.586 743.032 cv
533.764 742.91 527.806 737.042 525.941 734.942 cv
525.562 734.516 524.928 734.406 524.435 734.692 cv
520.825 736.781 518.138 739.565 516.283 742.839 cv
516.028 743.288 516.101 743.853 516.441 744.242 cv
517.262 745.183 518.88 747.149 520.74 750 cv
564.431 750 li
cp
.266667 .247059 .235294 rgb
f
542.367 712.626 mo
538.185 712.626 534.421 710.959 531.771 707.931 cv
531.477 707.596 531.332 707.165 531.361 706.722 cv
531.391 706.278 531.592 705.872 531.927 705.578 cv
532.241 705.304 532.64 705.164 533.051 705.164 cv
533.08 705.164 533.109 705.165 533.138 705.166 cv
533.583 705.195 533.989 705.397 534.281 705.731 cv
536.911 708.736 540.29 709.285 542.443 709.285 cv
542.695 709.285 542.931 709.278 543.146 709.266 cv
546.312 709.074 549.403 707.655 550.663 705.812 cv
550.912 705.444 551.29 705.196 551.727 705.113 cv
551.832 705.093 551.938 705.083 552.042 705.083 cv
552.375 705.083 552.7 705.183 552.981 705.374 cv
553.35 705.627 553.599 706.006 553.682 706.445 cv
553.763 706.882 553.67 707.326 553.418 707.695 cv
551.556 710.417 547.601 712.342 543.342 712.595 cv
543.017 712.615 542.689 712.626 542.367 712.626 cv
.678431 .392157 .270588 rgb
f
557.342 683.984 mo
557.342 686.353 559.263 688.277 561.635 688.277 cv
564.007 688.277 565.932 686.353 565.932 683.984 cv
565.932 681.61 564.007 679.689 561.635 679.689 cv
559.263 679.689 557.342 681.61 557.342 683.984 cv
cp
.227451 .117647 .039216 rgb
f
519.04 683.984 mo
519.04 686.354 520.963 688.277 523.335 688.277 cv
525.704 688.277 527.629 686.354 527.629 683.984 cv
527.629 681.611 525.704 679.689 523.335 679.689 cv
520.963 679.689 519.04 681.611 519.04 683.984 cv
cp
f
528.878 677.279 mo
528.306 677.279 527.74 677.041 527.359 676.585 cv
526.425 675.468 525.032 674.828 523.534 674.828 cv
522.037 674.828 520.644 675.468 519.709 676.585 cv
519.048 677.374 517.836 677.51 516.997 676.889 cv
516.159 676.268 516.014 675.125 516.674 674.336 cv
518.345 672.336 520.846 671.19 523.534 671.19 cv
526.223 671.19 528.724 672.336 530.395 674.336 cv
531.055 675.125 530.91 676.268 530.072 676.889 cv
529.717 677.152 529.297 677.279 528.878 677.279 cv
cp
.309804 .184314 .098039 rgb
f
566.981 677.279 mo
566.409 677.279 565.843 677.041 565.462 676.585 cv
564.528 675.468 563.135 674.828 561.637 674.828 cv
560.14 674.828 558.746 675.468 557.812 676.585 cv
557.151 677.374 555.939 677.51 555.1 676.889 cv
554.261 676.268 554.117 675.125 554.777 674.336 cv
556.448 672.336 558.949 671.19 561.637 671.19 cv
564.325 671.19 566.826 672.336 568.497 674.336 cv
569.157 675.125 569.013 676.268 568.174 676.889 cv
567.82 677.152 567.4 677.279 566.981 677.279 cv
cp
f
545.382 700.085 mo
539.686 700.085 li
538.743 700.085 537.977 699.321 537.977 698.377 cv
537.977 697.433 538.743 696.668 539.686 696.668 cv
545.382 696.668 li
546.325 696.668 547.09 697.433 547.09 698.377 cv
547.09 699.321 546.325 700.085 545.382 700.085 cv
.858823 .552941 .384314 rgb
f
736.283 682.22 mo
736.283 650.199 721.141 617.893 686.191 617.893 cv
646.336 617.893 636.097 650.199 636.097 682.22 cv
636.097 749.477 li
735.748 749.477 li
735.748 688.964 li
736.085 686.847 736.283 684.613 736.283 682.22 cv
.2 .098039 .027451 rgb
f
652.973 637.121 mo
660.287 626.751 667.795 626.432 679.901 625.93 cv
693.058 625.93 li
705.168 626.432 712.676 626.751 719.985 637.121 cv
727.303 647.498 723.379 650.187 722.802 662.708 cv
722.365 672.166 724.109 660.636 724.109 687.229 cv
724.109 712.918 698.501 724.277 686.481 724.277 cv
674.462 724.277 650.003 714.521 650.003 687.229 cv
650.003 658.975 649.445 672.166 649.005 662.708 cv
648.429 650.187 645.657 647.498 652.973 637.121 cv
.737255 .470588 .290196 rgb
f
657.618 652.13 mo
657.618 652.13 664.244 660.695 684.678 666.703 cv
728.188 679.492 724.368 693.357 724.368 693.357 cv
724.368 693.357 736.815 681.186 728.632 652.13 cv
717.652 613.145 671.902 615.153 656.383 630.789 cv
629.711 657.664 650.003 699.615 650.003 699.615 cv
650.003 699.615 646.942 674.902 657.618 652.13 cv
cp
.2 .098039 .027451 rgb
f
697.491 704.083 mo
697.108 703.82 696.647 703.727 696.189 703.809 cv
695.735 703.895 695.342 704.153 695.083 704.534 cv
694.263 705.733 691.437 706.722 688.211 706.939 cv
683.944 707.237 680.078 706.223 678.384 704.352 cv
678.073 704.006 677.646 703.803 677.185 703.78 cv
676.724 703.763 676.279 703.916 675.938 704.228 cv
675.229 704.866 675.175 705.963 675.814 706.676 cv
678.9 710.083 684.569 710.451 686.863 710.451 cv
687.371 710.451 687.903 710.433 688.446 710.397 cv
692.928 710.092 696.478 708.632 697.944 706.491 cv
698.481 705.7 698.279 704.62 697.491 704.083 cv
cp
.458824 .231373 .172549 rgb
f
701.562 682.202 mo
701.562 684.571 703.483 686.495 705.855 686.495 cv
708.228 686.495 710.152 684.571 710.152 682.202 cv
710.152 679.828 708.228 677.907 705.855 677.907 cv
703.483 677.907 701.562 679.828 701.562 682.202 cv
cp
.227451 .117647 .039216 rgb
f
663.26 682.202 mo
663.26 684.571 665.183 686.495 667.555 686.495 cv
669.924 686.495 671.849 684.571 671.849 682.202 cv
671.849 679.828 669.924 677.907 667.555 677.907 cv
665.183 677.907 663.26 679.828 663.26 682.202 cv
cp
f
673.099 675.497 mo
672.526 675.497 671.961 675.259 671.58 674.803 cv
670.645 673.686 669.252 673.045 667.755 673.045 cv
666.257 673.045 664.864 673.686 663.93 674.803 cv
663.268 675.592 662.056 675.728 661.217 675.107 cv
660.379 674.486 660.234 673.343 660.894 672.553 cv
662.565 670.554 665.066 669.408 667.755 669.408 cv
670.443 669.408 672.944 670.554 674.615 672.553 cv
675.275 673.343 675.13 674.486 674.292 675.107 cv
673.937 675.37 673.517 675.497 673.099 675.497 cv
cp
f
711.201 675.497 mo
710.629 675.497 710.063 675.259 709.682 674.803 cv
708.748 673.686 707.355 673.045 705.857 673.045 cv
704.36 673.045 702.966 673.686 702.032 674.803 cv
701.371 675.592 700.159 675.728 699.32 675.107 cv
698.481 674.486 698.337 673.343 698.997 672.553 cv
700.668 670.554 703.169 669.408 705.857 669.408 cv
708.546 669.408 711.047 670.554 712.718 672.553 cv
713.378 673.343 713.233 674.486 712.394 675.107 cv
712.04 675.37 711.62 675.497 711.201 675.497 cv
cp
f
654.576 749.07 mo
655.431 746.955 656.299 745.164 657.171 743.775 cv
658.259 742.044 668.218 733.922 678.456 730.231 cv
678.456 720.37 li
695.032 720.37 li
695.032 730.246 li
703.918 733.408 715.057 741.857 716.264 743.775 cv
717.136 745.164 718.006 746.956 718.865 749.07 cv
654.576 749.07 li
cp
.737255 .470588 .290196 rgb
f
653.955 750 mo
655.478 743.968 658.925 740.276 660.575 738.789 cv
660.73 738.581 li
663.721 735.631 668.582 733.688 673.01 731.874 cv
673.461 731.689 673.961 731.856 674.242 732.282 cv
675.416 734.063 679.097 738.454 686.851 738.454 cv
693.449 738.454 697.661 733.858 698.99 732.163 cv
699.278 731.796 699.745 731.671 700.161 731.841 cv
704.547 733.635 709.2 735.434 711.954 738.03 cv
711.954 738.03 717.443 741.926 719.485 750 cv
653.955 750 li
cp
.466667 .737255 .184314 rgb
f
689.468 698.207 mo
683.772 698.207 li
682.829 698.207 682.064 697.442 682.064 696.498 cv
682.064 695.554 682.829 694.789 683.772 694.789 cv
689.468 694.789 li
690.411 694.789 691.177 695.554 691.177 696.498 cv
691.177 697.442 690.411 698.207 689.468 698.207 cv
.627451 .360784 .227451 rgb
f
117.854 177.162 mo
96.64 177.162 li
96.64 150.351 li
117.854 150.351 li
117.854 177.162 li
cp
1 .701961 .501961 rgb
f
148.71 192.182 mo
147.663 189.472 146.855 187.496 146.5 186.706 cv
142.396 177.585 140.554 176.699 124.439 171.107 cv
123.457 170.766 122.618 169.852 122.618 169.852 cv
118.025 165.384 li
117.927 165.447 li
117.863 165.384 li
107.777 171.838 li
107.691 171.997 li
107.541 172.093 li
107.441 172.131 107.342 172.155 107.251 172.162 cv
107.161 172.155 107.061 172.131 106.962 172.093 cv
106.812 171.997 li
106.725 171.838 li
96.64 165.384 li
96.5757 165.447 li
96.478 165.384 li
91.8842 169.852 li
91.8842 169.852 91.0454 170.766 90.0638 171.107 cv
73.9488 176.699 72.106 177.585 68.0028 186.706 cv
67.6471 187.496 66.8392 189.472 65.793 192.182 cv
148.71 192.182 li
cp
.788235 .192157 .192157 rgb
f
122.287 170.004 mo
121.864 169.843 121.389 170.065 121.233 170.507 cv
117.465 180.996 li
107.751 172.599 li
107.669 172.553 li
107.526 172.473 li
107.377 172.428 li
107.223 172.412 li
107.068 172.428 li
106.92 172.473 li
106.776 172.554 li
106.695 172.599 li
96.9888 180.992 li
93.2665 170.375 li
93.1135 169.934 92.6385 169.708 92.2136 169.867 cv
91.7864 170.025 91.441 170.608 91.5956 171.048 cv
96.2423 183.848 li
107.223 174.355 li
118.196 183.841 li
122.774 171.096 li
122.93 170.655 122.714 170.167 122.287 170.004 cv
cp
.627451 .113725 .113725 rgb
f
83.0626 119.641 mo
84.4376 127.462 79.7992 133.976 72.6979 135.383 cv
65.5955 136.786 58.7289 132.544 57.3522 124.725 cv
55.9767 116.899 60.6145 109.421 67.7164 108.018 cv
74.8188 106.611 81.6859 111.817 83.0626 119.641 cv
cp
1 .701961 .501961 rgb
f
132.609 119.641 mo
131.234 127.462 135.872 133.976 142.973 135.383 cv
150.074 136.786 156.942 132.544 158.317 124.725 cv
159.693 116.899 155.056 109.421 147.954 108.018 cv
140.855 106.611 133.983 111.817 132.609 119.641 cv
cp
f
72.3982 72.7015 mo
79.3326 63.2847 90.1439 57.0977 101.625 56.6416 cv
101.625 56.6416 101.85 56.635 102.219 56.6188 cv
102.207 56.1689 li
102.207 56.1689 104.99 56.2773 107.865 56.3936 cv
110.737 56.2773 113.519 56.1689 113.519 56.1689 cv
113.506 56.6188 li
113.877 56.635 114.1 56.6416 114.1 56.6416 cv
125.582 57.0977 136.393 63.2847 143.325 72.7015 cv
150.264 82.1284 148.919 92.8513 148.371 104.224 cv
147.958 112.816 148.706 120.921 148.279 129.514 cv
141.315 155.56 123.991 160.013 107.865 160.013 cv
91.7324 160.013 73.8343 155.56 67.4494 129.514 cv
67.0211 120.921 69.2393 113.97 68.8266 105.376 cv
68.281 94.0043 65.4597 82.1284 72.3982 72.7015 cv
cp
f
73.3181 85.6915 mo
76.3612 88.0939 76.7344 90.0507 88.0452 91.8795 cv
108.369 95.1684 119.214 89.4761 130.851 88.338 cv
134.072 88.0209 141.02 88.096 144.213 89.4622 cv
144.213 127.424 li
144.213 131.626 141.82 138.061 135.278 138.061 cv
135.278 138.061 131.165 123.57 109.272 123.57 cv
88.6588 123.57 83.2317 138.638 83.2317 138.638 cv
76.4101 138.638 73.3181 132.069 73.3181 127.437 cv
73.3181 85.6915 li
cp
63.5853 73.1198 mo
63.745 75.4759 65.7752 78.2826 67.5017 79.6493 cv
67.0639 84.4217 65.2239 135.452 67.5017 140.105 cv
66.6656 146.446 70.5604 151.284 74.0139 151.201 cv
73.3114 153.533 75.969 159.398 81.9879 159.463 cv
82.1648 164.443 89.1243 167.331 92.6363 164.179 cv
99.6842 173.015 106.249 165.929 106.249 165.929 cv
108.844 171.325 116.495 170.516 118.319 165.556 cv
119.669 168.913 128.937 169.638 131.453 162.54 cv
134.548 163.436 140.13 161.807 141.552 154.873 cv
145.464 154.947 148.081 150.05 146.238 145.437 cv
150.043 141.377 150.232 135.549 150.232 133.138 cv
150.232 133.138 150.249 106.227 150.232 90.9601 cv
150.228 86.2705 150.991 81.4898 149.721 76.96 cv
149.359 75.6628 148.641 72.5319 147.36 70.931 cv
147.36 70.931 150.986 71.6268 150.559 67.943 cv
150.043 63.5116 143.901 63.3597 143.901 63.3597 cv
143.901 63.3597 145.184 58.6401 143.258 56.1222 cv
140.68 52.7553 137.482 54.8851 137.9 58.5967 cv
126.43 51.4582 118.317 48.7739 104.47 50.5121 cv
100.163 51.0516 97.1823 51.7858 92.9995 50.9921 cv
90.8719 50.5883 86.8561 50.0577 88.3796 53.5296 cv
84.8642 54.1692 81.9379 51.5667 78.6979 50.8174 cv
77.5276 50.5466 75.3861 50.051 74.341 50.8008 cv
72.0466 52.4466 73.2497 55.1988 74.8816 56.6773 cv
71.5081 54.9463 65.6405 51.5483 63.2577 56.3196 cv
61.1246 60.5952 65.0415 65.8205 67.8387 68.8079 cv
66.3598 67.2271 63.3478 69.6273 63.5853 73.1198 cv
cp
.309804 .184314 .098039 rgb
f
96.5856 137.577 mo
101.904 149.763 118.658 146.247 121.48 137.668 cv
121.709 136.969 121.269 136.369 120.624 136.368 cv
97.2745 136.349 li
96.6301 136.348 96.296 136.913 96.5856 137.577 cv
cp
1 1 1 rgb
f
123.075 112.167 mo
123.075 114.535 124.997 116.46 127.368 116.46 cv
129.741 116.46 131.665 114.535 131.665 112.167 cv
131.665 109.792 129.741 107.872 127.368 107.872 cv
124.997 107.872 123.075 109.792 123.075 112.167 cv
cp
.227451 .117647 .039216 rgb
f
84.7732 112.167 mo
84.7732 114.536 86.6965 116.46 89.068 116.46 cv
91.4377 116.46 93.3623 114.536 93.3623 112.167 cv
93.3623 109.793 91.4377 107.871 89.068 107.871 cv
86.6965 107.871 84.7732 109.793 84.7732 112.167 cv
cp
f
94.6117 105.462 mo
94.0395 105.462 93.4738 105.224 93.0928 104.768 cv
92.1585 103.651 90.7654 103.01 89.2678 103.01 cv
87.7702 103.01 86.3771 103.651 85.4428 104.768 cv
84.7814 105.557 83.5693 105.692 82.7306 105.072 cv
81.892 104.451 81.7474 103.307 82.4075 102.518 cv
84.0785 100.519 86.5795 99.3729 89.2678 99.3729 cv
91.9561 99.3729 94.4571 100.519 96.1281 102.518 cv
96.7882 103.307 96.6436 104.451 95.8049 105.072 cv
95.4503 105.334 95.0304 105.462 94.6117 105.462 cv
cp
f
132.714 105.462 mo
132.142 105.462 131.576 105.224 131.195 104.768 cv
130.261 103.651 128.868 103.01 127.37 103.01 cv
125.873 103.01 124.48 103.651 123.545 104.768 cv
122.884 105.557 121.672 105.692 120.833 105.072 cv
119.995 104.451 119.85 103.307 120.51 102.518 cv
122.181 100.519 124.682 99.3729 127.37 99.3729 cv
130.059 99.3729 132.56 100.519 134.231 102.518 cv
134.891 103.307 134.746 104.451 133.908 105.072 cv
133.553 105.334 133.133 105.462 132.714 105.462 cv
cp
f
431.054 76.7114 mo
424.759 67.658 415.61 60.9849 404.786 60.5533 cv
404.786 60.5533 404.575 60.5453 404.227 60.5321 cv
404.236 60.1077 li
404.236 60.1077 400.473 60.2113 397.766 60.3196 cv
395.057 60.2113 392.433 60.1077 392.433 60.1077 cv
392.442 60.5321 li
392.096 60.5453 391.883 60.5533 391.883 60.5533 cv
381.059 60.9849 372.179 67.8496 365.617 76.7114 cv
354.749 91.3886 359.767 112.058 359.767 127.747 cv
359.767 153.503 382.557 162.24 397.766 162.24 cv
412.974 162.24 437.152 153.319 437.152 127.747 cv
437.152 112.129 442.155 92.6761 431.054 76.7114 cv
.576471 .364706 .219608 rgb
f
397.283 168.741 mo
386.465 169.535 li
377.085 172.338 li
377.085 172.338 377.984 184.577 395.344 182.796 cv
412.703 181.013 416.385 171.163 416.385 171.163 cv
410.12 169.535 li
397.283 168.741 li
cp
f
421.335 120.626 mo
419.96 128.441 424.591 134.947 431.686 136.349 cv
438.783 137.753 445.642 133.519 447.015 125.702 cv
448.389 117.889 443.759 110.415 436.661 109.015 cv
429.569 107.61 422.709 112.81 421.335 120.626 cv
cp
f
373.005 120.626 mo
374.381 128.441 372.049 134.947 364.957 136.349 cv
357.862 137.753 350.999 133.519 349.628 125.702 cv
348.254 117.889 352.886 110.415 359.979 109.015 cv
367.073 107.61 371.631 112.81 373.005 120.626 cv
cp
f
409.793 180.082 mo
386.793 180.082 li
386.793 155.621 li
409.793 155.621 li
409.793 180.082 li
cp
f
361.076 110.83 mo
361.076 100.303 359.588 83.5926 368.875 83.5926 cv
375.753 83.5926 376.47 85.1649 397.361 85.1649 cv
415.847 85.1649 420.056 83.0686 426.975 83.0686 cv
434.389 83.0686 436.371 90.675 436.371 104.419 cv
436.371 116.088 435.915 120.19 438.151 120.19 cv
440.68 120.19 440.246 106.773 440.241 101.259 cv
440.23 91.0721 443.191 71.4558 424.757 59.2322 cv
413.421 51.7137 392.291 52.1081 379.246 56.3621 cv
370.16 59.3284 362.612 67.0522 359.374 76.0479 cv
355.817 85.9303 357.079 90.2094 357.079 109.777 cv
357.079 118.175 357.899 120.333 359.504 120.333 cv
359.504 120.333 361.076 121.006 361.076 110.83 cv
cp
.2 .098039 .027451 rgb
f
413.143 138.144 mo
407.096 152.002 386.903 148.004 383.694 138.246 cv
383.433 137.453 383.933 136.77 384.666 136.768 cv
412.361 136.746 li
413.093 136.745 413.473 137.389 413.143 138.144 cv
cp
1 1 1 rgb
f
412.8 115.157 mo
412.8 117.525 414.721 119.45 417.093 119.45 cv
419.465 119.45 421.39 117.525 421.39 115.157 cv
421.39 112.782 419.465 110.862 417.093 110.862 cv
414.721 110.862 412.8 112.782 412.8 115.157 cv
cp
.227451 .117647 .039216 rgb
f
374.498 115.157 mo
374.498 117.526 376.421 119.449 378.792 119.449 cv
381.162 119.449 383.087 117.526 383.087 115.157 cv
383.087 112.783 381.162 110.861 378.792 110.861 cv
376.421 110.861 374.498 112.783 374.498 115.157 cv
cp
f
384.336 108.451 mo
383.764 108.451 383.198 108.214 382.817 107.758 cv
381.883 106.64 380.49 106 378.992 106 cv
377.495 106 376.102 106.64 375.167 107.758 cv
374.506 108.547 373.294 108.682 372.455 108.062 cv
371.616 107.441 371.472 106.297 372.132 105.508 cv
373.803 103.509 376.304 102.363 378.992 102.363 cv
381.681 102.363 384.182 103.509 385.853 105.508 cv
386.513 106.297 386.368 107.441 385.529 108.062 cv
385.175 108.324 384.755 108.451 384.336 108.451 cv
cp
f
422.439 108.451 mo
421.867 108.451 421.301 108.214 420.92 107.758 cv
419.986 106.64 418.592 106 417.095 106 cv
415.597 106 414.204 106.64 413.27 107.758 cv
412.608 108.547 411.396 108.682 410.558 108.062 cv
409.719 107.441 409.574 106.297 410.235 105.508 cv
411.906 103.509 414.407 102.363 417.095 102.363 cv
419.783 102.363 422.284 103.509 423.955 105.508 cv
424.615 106.297 424.471 107.441 423.632 108.062 cv
423.277 108.324 422.857 108.451 422.439 108.451 cv
cp
f
441.393 192.182 mo
441.106 191.07 440.861 190.207 440.676 189.639 cv
437.498 179.865 432.817 176.914 416.385 171.163 cv
416.385 171.163 409.337 178.046 397.461 178.046 cv
385.586 178.046 380.379 171.163 380.379 171.163 cv
363.946 176.914 359.267 179.865 356.087 189.639 cv
355.902 190.207 355.636 191.07 355.311 192.182 cv
441.393 192.182 li
cp
.2 .098039 .027451 rgb
f
401.169 129.623 mo
395.474 129.623 li
394.53 129.623 393.765 128.858 393.765 127.914 cv
393.765 126.97 394.53 126.205 395.474 126.205 cv
401.169 126.205 li
402.113 126.205 402.878 126.97 402.878 127.914 cv
402.878 128.858 402.113 129.623 401.169 129.623 cv
.470588 .290196 .164706 rgb
f
137.455 498.965 mo
136.701 505.032 140.194 510.458 145.262 511.086 cv
150.327 511.712 155.041 507.303 155.794 501.237 cv
156.543 495.169 153.046 489.745 147.982 489.117 cv
142.917 488.489 138.202 492.9 137.455 498.965 cv
cp
1 .701961 .501961 rgb
f
78.1414 498.965 mo
78.8951 505.032 75.402 510.458 70.3348 511.086 cv
65.2693 511.712 60.5553 507.303 59.8028 501.237 cv
59.053 495.169 62.5505 489.745 67.6143 489.117 cv
72.6793 488.489 77.3939 492.9 78.1414 498.965 cv
cp
f
115.598 553.66 mo
98.7036 553.66 li
98.7036 532.841 li
115.598 532.841 li
115.598 553.66 li
cp
f
73.9343 452.357 mo
81.2474 441.986 88.756 441.667 100.862 441.165 cv
114.02 441.165 li
126.129 441.667 133.637 441.986 140.946 452.357 cv
148.264 462.733 144.34 465.422 143.763 477.944 cv
143.326 487.402 145.07 475.871 145.07 502.465 cv
145.07 528.153 119.462 539.512 107.442 539.512 cv
95.4228 539.512 70.9641 529.756 70.9641 502.465 cv
70.9641 474.211 70.4063 487.402 69.9657 477.944 cv
69.3899 465.422 66.6178 462.733 73.9343 452.357 cv
f
139.617 564.061 mo
135.924 551.352 131.507 549.373 124.757 546.562 cv
124.353 546.394 115.785 544.239 115.785 544.239 cv
115.785 544.239 114.999 548.021 107.762 548.027 cv
100.525 548.031 98.8906 544.239 98.8906 544.239 cv
98.8906 544.239 93.001 545.916 92.8623 545.957 cv
83.9644 548.633 79.4746 552.26 76.3415 559.065 cv
76.0219 559.758 75.4207 561.675 74.6853 564.061 cv
139.617 564.061 li
cp
.2 .098039 .027451 rgb
f
95.1211 486.852 mo
82.9581 486.852 li
81.8574 486.852 80.9646 485.96 80.9646 484.859 cv
80.9646 483.758 81.8574 482.865 82.9581 482.865 cv
95.1211 482.865 li
96.2218 482.865 97.1146 483.758 97.1146 484.859 cv
97.1146 485.96 96.2218 486.852 95.1211 486.852 cv
cp
.556863 .305882 .219608 rgb
f
130.632 489.985 mo
118.469 489.985 li
117.368 489.985 116.475 489.092 116.475 487.992 cv
116.475 486.891 117.368 485.998 118.469 485.998 cv
130.632 485.998 li
131.732 485.998 132.625 486.891 132.625 487.992 cv
132.625 489.092 131.732 489.985 130.632 489.985 cv
cp
f
135.709 492.666 mo
135.531 501.01 129.043 505.513 122.986 505.515 cv
120.001 505.515 117.501 504.397 116.127 502.448 cv
114.501 500.145 113.282 496.315 113.255 494.369 cv
113.776 493.512 119.707 491.672 128.141 491.672 cv
132.753 491.672 135.023 492.283 135.709 492.666 cv
cp
101.046 494.46 mo
100.982 496.418 99.7612 500.199 98.1754 502.448 cv
96.801 504.397 94.3013 505.515 91.3167 505.515 cv
85.2627 505.515 78.7766 501.017 78.593 492.675 cv
79.2683 492.317 81.4453 491.749 85.8 491.749 cv
93.9398 491.749 100.247 493.495 101.046 494.46 cv
cp
75.195 492.31 mo
75.195 503.093 83.5011 508.91 91.3167 508.91 cv
95.4177 508.91 98.9285 507.268 100.949 504.406 cv
102.416 502.325 103.532 499.426 104.075 497.017 cv
104.737 496.819 105.84 496.691 107.025 496.691 cv
108.465 496.691 109.68 496.871 110.26 497.154 cv
110.814 499.537 111.914 502.367 113.353 504.406 cv
115.371 507.268 118.882 508.91 122.986 508.91 cv
122.988 508.91 li
130.802 508.908 139.107 503.09 139.107 492.31 cv
139.107 491.312 139.107 488.276 128.141 488.276 cv
127.65 488.276 123.223 488.298 118.821 489.022 cv
113.438 489.909 110.465 491.451 109.948 493.608 cv
108.874 493.355 107.731 493.307 107.107 493.307 cv
106.104 493.307 105.138 493.396 104.328 493.548 cv
102.859 488.419 86.527 488.354 85.8 488.354 cv
78.6637 488.354 75.195 489.648 75.195 492.31 cv
cp
.2 .098039 .027451 rgb
f
63.3441 476.107 mo
63.3441 456.841 68.4364 445.787 83.8336 437.338 cv
105.039 425.703 139.353 429.455 152.252 457.98 cv
157.158 468.824 155.794 501.237 155.794 501.237 cv
155.794 501.237 99.1037 488.716 76.6585 466.271 cv
70.9855 482.185 70.7708 505.376 70.7708 505.376 cv
66.6804 500.635 63.3441 483.853 63.3441 476.107 cv
cp
.847059 .282353 .470588 rgb
f
93.7825 496.587 mo
93.7825 498.81 91.9787 500.617 89.7532 500.617 cv
87.5277 500.617 85.7206 498.81 85.7206 496.587 cv
85.7206 494.358 87.5277 492.556 89.7532 492.556 cv
91.9787 492.556 93.7825 494.358 93.7825 496.587 cv
cp
.227451 .117647 .039216 rgb
f
128.513 496.587 mo
128.513 498.81 126.709 500.617 124.484 500.617 cv
122.258 500.617 120.451 498.81 120.451 496.587 cv
120.451 494.358 122.258 492.556 124.484 492.556 cv
126.709 492.556 128.513 494.358 128.513 496.587 cv
cp
f
107.326 526.957 mo
103.142 526.957 99.3794 525.289 96.7296 522.261 cv
96.4358 521.926 96.2906 521.496 96.3203 521.052 cv
96.3497 520.608 96.5506 520.202 96.8858 519.908 cv
97.1897 519.643 97.571 519.493 97.9703 519.493 cv
98.0126 519.493 98.0552 519.494 98.0979 519.498 cv
98.5423 519.527 98.9478 519.727 99.2404 520.062 cv
101.873 523.07 105.259 523.615 107.41 523.615 cv
107.659 523.615 107.892 523.608 108.105 523.596 cv
111.27 523.405 114.361 521.985 115.622 520.142 cv
115.87 519.776 116.247 519.528 116.685 519.444 cv
116.79 519.424 116.895 519.415 117 519.415 cv
117.333 519.415 117.658 519.513 117.939 519.705 cv
118.309 519.957 118.558 520.338 118.64 520.776 cv
118.722 521.213 118.629 521.657 118.377 522.025 cv
116.515 524.747 112.56 526.672 108.301 526.926 cv
107.975 526.946 107.648 526.957 107.326 526.957 cv
.678431 .392157 .270588 rgb
f
109.771 515.231 mo
105.215 515.231 li
104.271 515.231 103.506 514.466 103.506 513.522 cv
103.506 512.578 104.271 511.813 105.215 511.813 cv
109.771 511.813 li
110.714 511.813 111.48 512.578 111.48 513.522 cv
111.48 514.466 110.714 515.231 109.771 515.231 cv
.858823 .552941 .384314 rgb
f
238.171 513.712 mo
238.727 513.157 247.333 506.91 247.169 508.954 cv
246.95 511.748 248.479 511.345 250.142 510.942 cv
251.069 510.718 252.038 510.493 252.769 510.823 cv
254.879 511.777 256.44 515.439 258.785 516.849 cv
262.633 519.161 271.417 522.946 275.099 518.447 cv
276.583 522.989 280.486 524.79 283.559 520.972 cv
289.26 525.203 297.941 519.522 297.235 513.055 cv
302.919 516.865 311.279 510.706 306.83 503.338 cv
312.881 503.552 314.477 494.378 309.008 492.443 cv
313.36 488.862 310.734 479.8 304.999 479.645 cv
307.994 476.039 304.746 469.706 300.415 469.306 cv
302.239 465.483 299.103 462.703 295.377 463.194 cv
297.16 459.084 296.029 450.88 285.594 453.562 cv
289.271 441.186 273.948 433.124 265.621 438.212 cv
263.415 428.614 250.09 430.709 247.697 436.334 cv
246.453 431.564 238.888 432.816 239.385 437.558 cv
233.502 432.192 218.293 437.959 221.552 447.707 cv
208.995 448.229 203.92 458.932 208.271 465.097 cv
199.859 463.846 196.586 474.479 201.859 479.2 cv
194.24 480.199 192.559 491.704 198.071 494.91 cv
193.36 500.443 198.933 506.443 202.304 505.688 cv
199.49 510.423 204.453 519.003 210.518 515.158 cv
208.777 524.35 221.104 526.957 224.142 521.527 cv
228.055 530.551 234.923 516.945 238.171 513.712 cv
.858824 .360784 .019608 rgb
f
283.153 456.701 mo
277.337 447.938 268.885 441.479 258.884 441.061 cv
258.884 441.061 258.69 441.054 258.369 441.041 cv
258.377 440.63 li
258.377 440.63 255.952 440.73 253.451 440.835 cv
250.949 440.73 248.524 440.63 248.524 440.63 cv
248.533 441.041 li
248.213 441.054 248.017 441.061 248.017 441.061 cv
238.016 441.479 229.813 448.124 223.75 456.701 cv
213.709 470.906 218.345 488.608 218.345 503.793 cv
218.345 528.72 239.4 539.481 253.451 539.481 cv
267.502 539.481 288.787 528.542 288.787 503.793 cv
288.787 488.677 293.409 472.152 283.153 456.701 cv
1 .701961 .501961 rgb
f
241.519 520.331 mo
246.652 532.275 262.827 528.857 265.63 520.412 cv
265.888 519.636 265.42 518.955 264.739 518.956 cv
242.232 518.955 li
241.553 518.956 241.201 519.592 241.519 520.331 cv
cp
1 1 1 rgb
f
281.895 564.059 mo
281.867 563.933 li
280.434 557.651 276.24 552.353 270.592 549.251 cv
267.66 547.641 264.227 545.896 260.778 543.787 cv
260.778 533.594 li
245.56 533.594 li
245.56 544.254 li
242.637 546 239.646 547.494 236.971 548.879 cv
231.046 551.945 226.714 557.428 225.235 563.933 cv
225.207 564.059 li
225.208 564.061 li
281.894 564.061 li
281.895 564.059 li
cp
1 .701961 .501961 rgb
f
280.043 498.451 mo
279.289 504.518 282.782 509.943 287.85 510.572 cv
292.915 511.197 297.629 506.789 298.382 500.722 cv
299.131 494.655 295.634 489.231 290.57 488.602 cv
285.505 487.975 280.79 492.386 280.043 498.451 cv
cp
f
227.059 498.451 mo
227.813 504.518 224.32 509.943 219.253 510.572 cv
214.187 511.197 209.473 506.789 208.721 500.722 cv
207.971 494.655 211.468 489.231 216.532 488.602 cv
221.597 487.975 226.312 492.386 227.059 498.451 cv
cp
f
299.776 477.095 mo
299.368 469.425 293.019 458.827 286.929 455.111 cv
286.262 454.703 285.257 454.353 284.118 454.119 cv
283.229 447.056 261.538 432.925 247.014 439.134 cv
239.467 442.763 232.789 436.424 232.205 445.306 cv
220.386 451.522 215.369 455.666 212.357 462.656 cv
209.968 468.199 208.195 475.066 209.638 481.115 cv
210.199 483.465 210.09 485.367 212.128 486.693 cv
215.01 488.567 218.074 488.334 221.206 489.325 cv
227.798 491.41 233.319 482.641 232.249 479.201 cv
232.249 479.201 241.263 482.385 245.447 474.043 cv
253.349 479.081 261.086 472.389 260.237 468.239 cv
264.762 473.514 272.335 470.68 274.932 465.191 cv
272.897 472.586 279.189 476.064 282.048 475.254 cv
278.646 479.577 283.124 486.773 288.04 484.199 cv
285.699 490.31 292.115 495.406 297.743 495.017 cv
305.215 494.5 300.058 482.404 299.776 477.095 cv
cp
.858824 .360784 .019608 rgb
f
268.307 498.73 mo
268.307 501.099 270.229 503.023 272.6 503.023 cv
274.973 503.023 276.897 501.099 276.897 498.73 cv
276.897 496.355 274.973 494.435 272.6 494.435 cv
270.229 494.435 268.307 496.355 268.307 498.73 cv
cp
.227451 .117647 .039216 rgb
f
230.005 498.73 mo
230.005 501.099 231.928 503.022 234.3 503.022 cv
236.67 503.022 238.594 501.099 238.594 498.73 cv
238.594 496.356 236.67 494.435 234.3 494.435 cv
231.928 494.435 230.005 496.356 230.005 498.73 cv
cp
f
239.844 492.025 mo
239.271 492.025 238.706 491.787 238.325 491.331 cv
237.391 490.214 235.997 489.573 234.5 489.573 cv
233.002 489.573 231.609 490.214 230.675 491.331 cv
230.013 492.12 228.801 492.255 227.963 491.635 cv
227.124 491.014 226.979 489.87 227.639 489.081 cv
229.311 487.082 231.811 485.936 234.5 485.936 cv
237.188 485.936 239.689 487.082 241.36 489.081 cv
242.02 489.87 241.876 491.014 241.037 491.635 cv
240.682 491.897 240.262 492.025 239.844 492.025 cv
cp
.858824 .360784 .019608 rgb
f
277.946 492.025 mo
277.374 492.025 276.808 491.787 276.427 491.331 cv
275.493 490.214 274.1 489.573 272.602 489.573 cv
271.105 489.573 269.712 490.214 268.777 491.331 cv
268.116 492.12 266.904 492.255 266.065 491.635 cv
265.227 491.014 265.082 489.87 265.742 489.081 cv
267.413 487.082 269.914 485.936 272.602 485.936 cv
275.291 485.936 277.792 487.082 279.463 489.081 cv
280.123 489.87 279.978 491.014 279.139 491.635 cv
278.785 491.897 278.365 492.025 277.946 492.025 cv
cp
f
274.796 550.938 mo
270.521 548.248 li
269.935 547.88 269.172 548.301 269.172 548.993 cv
269.172 553.256 265.717 556.711 261.454 556.711 cv
246.209 556.711 li
241.946 556.711 238.491 553.256 238.491 548.993 cv
238.491 548.661 li
238.491 547.969 237.728 547.547 237.142 547.916 cv
232.867 550.606 li
232.611 550.767 232.455 551.048 232.455 551.351 cv
232.455 556.711 li
232.455 558.744 li
232.455 564.06 li
275.208 564.06 li
275.208 559.076 li
275.208 556.711 li
275.208 551.683 li
275.208 551.38 275.052 551.099 274.796 550.938 cv
cp
.160784 .631373 .839216 rgb
f
256.579 513.294 mo
250.884 513.294 li
249.94 513.294 249.175 512.53 249.175 511.586 cv
249.175 510.642 249.94 509.877 250.884 509.877 cv
256.579 509.877 li
257.523 509.877 258.288 510.642 258.288 511.586 cv
258.288 512.53 257.523 513.294 256.579 513.294 cv
.858823 .552941 .384314 rgb
f
736.283 500.453 mo
736.283 532.472 702.627 539.049 686.188 539.049 cv
667.968 539.049 636.097 532.472 636.097 500.453 cv
636.097 468.432 651.239 436.127 686.188 436.127 cv
726.044 436.127 736.283 468.432 736.283 500.453 cv
.2 .098039 .027451 rgb
f
719.873 459.039 mo
712.66 448.81 705.254 448.493 693.313 447.997 cv
680.332 447.997 li
668.387 448.493 660.982 448.81 653.77 459.039 cv
646.552 469.274 649.286 467.322 649.856 479.672 cv
650.285 489.001 649.72 482.908 649.72 508.405 cv
649.72 527.353 666.112 540.435 686.821 540.435 cv
707.122 540.435 723.926 526.295 723.926 508.405 cv
723.926 481.096 724.457 473.503 721.725 464.572 cv
721.124 462.611 721.962 463.109 722.615 463.608 cv
723.524 464.303 724.074 464.997 719.873 459.039 cv
1 .760784 .501961 rgb
f
714.762 467.559 mo
714.762 467.559 708.136 474.806 687.701 479.89 cv
644.192 490.712 646.62 499.116 646.62 499.116 cv
646.62 499.116 635.565 492.146 643.748 467.559 cv
654.727 434.57 704.026 433.852 715.996 449.5 cv
741.448 482.773 725.46 510.183 725.46 510.183 cv
725.46 510.183 725.438 486.829 714.762 467.559 cv
cp
.2 .098039 .027451 rgb
f
673.698 521.871 mo
679.172 533.835 696.265 530.316 699.198 521.821 cv
699.467 521.04 698.971 520.357 698.251 520.363 cv
674.447 520.484 li
673.728 520.49 673.358 521.13 673.698 521.871 cv
cp
1 1 1 rgb
f
694.869 553.66 mo
677.974 553.66 li
677.974 532.841 li
694.869 532.841 li
694.869 553.66 li
cp
1 .760784 .501961 rgb
f
718.887 564.061 mo
715.194 551.352 710.777 549.373 704.028 546.562 cv
703.623 546.394 695.056 544.239 695.056 544.239 cv
695.056 544.239 694.269 548.021 687.032 548.027 cv
679.795 548.031 678.161 544.239 678.161 544.239 cv
678.161 544.239 672.271 545.916 672.133 545.957 cv
663.235 548.633 658.745 552.26 655.612 559.065 cv
655.292 559.758 654.691 561.675 653.955 564.061 cv
718.887 564.061 li
cp
.937255 .505882 .682353 rgb
f
672.678 503.533 mo
672.126 503.533 671.58 503.289 671.212 502.822 cv
670.31 501.677 668.964 501.02 667.519 501.02 cv
666.074 501.02 664.727 501.677 663.826 502.822 cv
663.189 503.631 662.016 503.771 661.207 503.134 cv
660.398 502.496 660.259 501.324 660.895 500.515 cv
662.509 498.466 664.923 497.29 667.519 497.29 cv
670.115 497.29 672.529 498.466 674.142 500.515 cv
674.779 501.324 674.639 502.496 673.83 503.134 cv
673.489 503.403 673.082 503.533 672.678 503.533 cv
cp
.227451 .117647 .039216 rgb
f
710.483 503.533 mo
709.931 503.533 709.385 503.289 709.016 502.822 cv
708.115 501.677 706.769 501.02 705.323 501.02 cv
703.878 501.02 702.532 501.677 701.631 502.822 cv
700.994 503.631 699.821 503.771 699.012 503.134 cv
698.203 502.496 698.063 501.324 698.7 500.515 cv
700.314 498.466 702.728 497.29 705.323 497.29 cv
707.919 497.29 710.333 498.466 711.947 500.515 cv
712.584 501.324 712.444 502.496 711.635 503.134 cv
711.293 503.403 710.887 503.533 710.483 503.533 cv
cp
f
711.012 493.593 mo
699.635 493.593 li
698.605 493.593 697.77 492.758 697.77 491.729 cv
697.77 490.699 698.605 489.864 699.635 489.864 cv
711.012 489.864 li
712.042 489.864 712.877 490.699 712.877 491.729 cv
712.877 492.758 712.042 493.593 711.012 493.593 cv
cp
f
673.207 493.593 mo
661.83 493.593 li
660.8 493.593 659.965 492.758 659.965 491.729 cv
659.965 490.699 660.8 489.864 661.83 489.864 cv
673.207 489.864 li
674.237 489.864 675.072 490.699 675.072 491.729 cv
675.072 492.758 674.237 493.593 673.207 493.593 cv
cp
f
689.169 515.705 mo
683.473 515.705 li
682.53 515.705 681.765 514.94 681.765 513.996 cv
681.765 513.052 682.53 512.288 683.473 512.288 cv
689.169 512.288 li
690.112 512.288 690.878 513.052 690.878 513.996 cv
690.878 514.94 690.112 515.705 689.169 515.705 cv
.839216 .584314 .364706 rgb
f
349.503 564.06 mo
349.652 484.556 li
349.652 455.121 367.062 435.534 398.416 435.534 cv
427.374 435.534 446.086 454.205 446.086 484.556 cv
447.139 564.06 li
349.503 564.06 li
.2 .098039 .027451 rgb
f
368.72 456.701 mo
374.536 447.938 382.988 441.479 392.988 441.061 cv
392.988 441.061 393.182 441.054 393.504 441.041 cv
393.496 440.63 li
393.496 440.63 395.92 440.73 398.421 440.835 cv
400.923 440.73 403.348 440.63 403.348 440.63 cv
403.339 441.041 li
403.66 441.054 403.856 441.061 403.856 441.061 cv
413.856 441.479 422.06 448.124 428.122 456.701 cv
438.163 470.906 433.527 488.608 433.527 503.793 cv
433.527 528.72 412.472 539.481 398.421 539.481 cv
384.37 539.481 363.086 528.542 363.086 503.793 cv
363.086 488.677 358.464 472.152 368.72 456.701 cv
.576471 .364706 .219608 rgb
f
410.353 520.331 mo
405.22 532.275 389.046 528.856 386.243 520.412 cv
385.984 519.636 386.453 518.955 387.133 518.956 cv
409.64 518.955 li
410.319 518.956 410.672 519.592 410.353 520.331 cv
cp
1 1 1 rgb
f
371.93 498.451 mo
372.683 504.518 369.19 509.943 364.123 510.572 cv
359.057 511.197 354.343 506.789 353.591 500.722 cv
352.841 494.655 356.339 489.231 361.402 488.602 cv
366.467 487.975 371.182 492.386 371.93 498.451 cv
cp
.576471 .364706 .219608 rgb
f
372.365 444.478 mo
389.995 433.595 407.553 437.262 421.217 444.478 cv
428.102 448.113 443.894 463.969 445.84 488.04 cv
446.701 514.282 434.313 539.134 434.313 539.134 cv
435.77 506.775 437.618 495.707 418.56 477.456 cv
400.724 460.377 377.948 462.084 377.948 462.084 cv
362.786 500.273 li
353.34 487.1 li
353.335 487.085 li
351.08 475.601 355.447 454.921 372.365 444.478 cv
cp
.2 .098039 .027451 rgb
f
361.98 520.603 mo
363.081 520.603 363.973 519.71 363.973 518.609 cv
363.973 508.219 li
363.973 507.118 363.081 506.225 361.98 506.225 cv
360.878 506.225 359.986 507.118 359.986 508.219 cv
359.986 518.609 li
359.986 519.71 360.878 520.603 361.98 520.603 cv
cp
.968627 .784314 .368627 rgb
f
369.978 564.061 mo
426.664 564.061 li
426.645 563.967 li
425.703 559.813 424.679 558.12 423.372 555.844 cv
421.697 556.325 421.06 555.283 422.747 554.618 cv
420.391 551.293 413.463 548.523 406.313 544.254 cv
406.313 533.594 li
391.095 533.594 li
391.095 543.787 li
383.679 548.321 376.336 551.174 373.896 554.618 cv
375.289 555.167 374.725 556.261 373.271 555.844 cv
371.964 558.12 370.94 559.813 369.998 563.967 cv
369.978 564.061 li
cp
.576471 .364706 .219608 rgb
f
376.476 564.061 mo
374.616 561.21 372.998 559.244 372.176 558.303 cv
371.837 557.913 371.763 557.349 372.018 556.899 cv
373.874 553.625 376.56 550.841 380.171 548.753 cv
380.664 548.467 381.298 548.577 381.676 549.003 cv
383.542 551.103 389.5 556.971 398.322 557.092 cv
407.143 556.971 413.101 551.102 414.967 549.003 cv
415.345 548.577 415.979 548.467 416.473 548.753 cv
420.083 550.841 422.769 553.625 424.624 556.899 cv
424.879 557.349 424.806 557.913 424.467 558.303 cv
423.645 559.244 422.027 561.21 420.167 564.061 cv
376.476 564.061 li
cp
.956863 .662745 .192157 rgb
f
409.913 498.124 mo
409.913 499.215 410.798 500.1 411.889 500.1 cv
419.887 500.1 li
420.978 500.1 421.862 499.215 421.862 498.124 cv
421.862 498.123 li
421.862 497.032 420.978 496.147 419.886 496.147 cv
411.89 496.147 li
410.798 496.147 409.913 497.032 409.913 498.124 cv
cp
.227451 .117647 .039216 rgb
f
374.78 498.124 mo
374.78 499.215 375.665 500.1 376.757 500.1 cv
384.754 500.1 li
385.845 500.1 386.73 499.215 386.73 498.124 cv
386.73 498.123 li
386.73 497.032 385.845 496.147 384.754 496.147 cv
376.757 496.147 li
375.665 496.147 374.78 497.032 374.78 498.124 cv
cp
f
409.748 491.595 mo
422.028 491.595 li
423.139 491.595 424.04 490.693 424.04 489.582 cv
424.04 488.471 423.139 487.569 422.028 487.569 cv
409.748 487.569 li
408.637 487.569 407.735 488.471 407.735 489.582 cv
407.735 490.693 408.637 491.595 409.748 491.595 cv
cp
.2 .098039 .027451 rgb
f
374.615 491.595 mo
386.895 491.595 li
388.006 491.595 388.908 490.693 388.908 489.582 cv
388.908 488.471 388.006 487.569 386.895 487.569 cv
374.615 487.569 li
373.504 487.569 372.603 488.471 372.603 489.582 cv
372.603 490.693 373.504 491.595 374.615 491.595 cv
cp
f
401.069 514.294 mo
395.374 514.294 li
394.43 514.294 393.665 513.53 393.665 512.586 cv
393.665 512.18 393.807 511.807 394.043 511.514 cv
394.057 512.446 394.817 513.196 395.751 513.196 cv
401.447 513.196 li
401.985 513.196 402.465 512.948 402.778 512.56 cv
402.778 512.568 402.778 512.577 402.778 512.586 cv
402.778 513.53 402.013 514.294 401.069 514.294 cv
.603922 .34902 .211765 rgb
f
402.778 512.56 mo
402.764 511.628 402.004 510.877 401.069 510.877 cv
395.374 510.877 li
394.836 510.877 394.356 511.125 394.043 511.514 cv
394.043 511.505 394.043 511.497 394.043 511.488 cv
394.043 510.544 394.808 509.779 395.751 509.779 cv
401.447 509.779 li
402.391 509.779 403.156 510.544 403.156 511.488 cv
403.156 511.894 403.014 512.267 402.778 512.56 cv
.470588 .290196 .164706 rgb
f
401.447 513.196 mo
395.751 513.196 li
394.817 513.196 394.057 512.446 394.043 511.514 cv
394.356 511.125 394.836 510.877 395.374 510.877 cv
401.069 510.877 li
402.004 510.877 402.764 511.628 402.778 512.56 cv
402.465 512.948 401.985 513.196 401.447 513.196 cv
.490196 .278431 .160784 rgb
f
506.543 563.966 mo
581.556 563.966 li
586.417 561.457 590.647 557.098 593.609 549.63 cv
599.181 535.582 589.928 525.157 589.928 512.277 cv
590.763 484.151 li
590.763 459.881 576.051 433.86 543.275 433.86 cv
512.921 433.86 495.788 459.881 495.788 484.151 cv
496.457 513.547 li
496.457 525.157 488.738 532.833 493.074 547.377 cv
495.811 556.555 500.685 561.408 506.543 563.966 cv
.929412 .67451 0 rgb
f
552.84 555.777 mo
534.306 555.777 li
534.306 534.958 li
552.84 534.958 li
552.84 555.777 li
cp
1 .752941 .552941 rgb
f
510.356 455.613 mo
517.67 445.243 525.178 444.923 537.284 444.422 cv
550.442 444.422 li
562.551 444.923 570.059 445.243 577.368 455.613 cv
584.686 465.99 580.762 468.678 580.185 481.2 cv
579.749 490.658 581.492 479.128 581.492 505.721 cv
581.492 531.409 555.884 542.768 543.864 542.768 cv
531.845 542.768 507.386 533.012 507.386 505.721 cv
507.386 477.467 506.828 490.658 506.388 481.2 cv
505.812 468.678 503.04 465.99 510.356 455.613 cv
f
565.433 462.62 mo
565.433 462.62 548.318 479.267 500.777 490.182 cv
500.777 490.182 500.476 449.844 523.602 443.195 cv
564.353 431.477 571.613 447.7 571.613 447.7 cv
571.613 447.7 589.841 455.962 585.778 496.622 cv
585.778 496.622 571.901 492.213 565.433 462.62 cv
.929412 .67451 0 rgb
f
553.774 564.061 mo
553.388 547.593 li
552.035 552.079 540.627 556.707 533.758 547.593 cv
533.372 564.061 li
553.774 564.061 li
cp
1 1 1 rgb
f
573.031 560.87 mo
572.819 560.385 572.609 559.892 572.389 559.433 cv
568.472 552.225 562.883 550.316 561.847 550.074 cv
561.79 550.047 li
561.775 550.057 li
561.662 550.043 li
561.679 549.885 553.388 547.593 553.388 547.593 cv
553.388 547.593 552.005 556.39 549.723 564.061 cv
551.449 564.061 li
574.33 564.061 li
573.934 562.91 573.498 561.856 573.031 560.87 cv
cp
.537255 .509804 .494118 rgb
f
525.484 550.043 mo
525.371 550.057 li
525.356 550.047 li
525.299 550.074 li
524.262 550.316 518.674 552.225 514.757 559.433 cv
514.537 559.892 514.327 560.385 514.115 560.87 cv
513.648 561.856 513.212 562.91 512.816 564.061 cv
535.697 564.061 li
537.423 564.061 li
535.141 556.39 533.758 547.593 533.758 547.593 cv
533.758 547.593 525.467 549.885 525.484 550.043 cv
cp
f
558.329 501.319 mo
558.329 503.688 560.25 505.612 562.622 505.612 cv
564.995 505.612 566.919 503.688 566.919 501.319 cv
566.919 498.945 564.995 497.024 562.622 497.024 cv
560.25 497.024 558.329 498.945 558.329 501.319 cv
cp
.227451 .117647 .039216 rgb
f
520.027 501.319 mo
520.027 503.688 521.95 505.612 524.322 505.612 cv
526.692 505.612 528.616 503.688 528.616 501.319 cv
528.616 498.945 526.692 497.024 524.322 497.024 cv
521.95 497.024 520.027 498.945 520.027 501.319 cv
cp
f
529.865 494.614 mo
529.293 494.614 528.728 494.376 528.346 493.92 cv
527.412 492.803 526.019 492.162 524.522 492.162 cv
523.024 492.162 521.631 492.803 520.697 493.92 cv
520.315 494.376 519.749 494.613 519.178 494.613 cv
518.76 494.613 518.339 494.486 517.984 494.224 cv
517.146 493.603 517.001 492.459 517.661 491.67 cv
519.332 489.671 521.833 488.525 524.522 488.525 cv
527.21 488.525 529.711 489.671 531.382 491.67 cv
532.042 492.459 531.897 493.603 531.059 494.224 cv
530.704 494.487 530.284 494.614 529.865 494.614 cv
.858823 .580392 .411765 rgb
f
567.968 494.614 mo
567.396 494.614 566.83 494.376 566.449 493.92 cv
565.515 492.803 564.122 492.162 562.624 492.162 cv
561.127 492.162 559.734 492.803 558.799 493.92 cv
558.417 494.376 557.852 494.613 557.28 494.613 cv
556.862 494.613 556.441 494.486 556.087 494.224 cv
555.249 493.603 555.104 492.459 555.764 491.67 cv
557.435 489.671 559.936 488.525 562.624 488.525 cv
565.313 488.525 567.813 489.671 569.484 491.67 cv
570.145 492.459 570 493.603 569.161 494.224 cv
568.807 494.487 568.387 494.614 567.968 494.614 cv
f
546.321 516.884 mo
540.625 516.884 li
539.682 516.884 538.916 516.119 538.916 515.175 cv
538.916 514.232 539.682 513.467 540.625 513.467 cv
546.321 513.467 li
547.264 513.467 548.03 514.232 548.03 515.175 cv
548.03 516.119 547.264 516.884 546.321 516.884 cv
f
543.406 528.984 mo
539.222 528.984 535.459 527.317 532.81 524.289 cv
532.516 523.954 532.371 523.523 532.4 523.079 cv
532.43 522.635 532.631 522.229 532.966 521.936 cv
533.27 521.67 533.651 521.52 534.051 521.52 cv
534.093 521.52 534.135 521.522 534.178 521.525 cv
534.623 521.554 535.028 521.754 535.32 522.089 cv
537.953 525.097 541.339 525.642 543.49 525.642 cv
543.739 525.642 543.972 525.635 544.185 525.623 cv
547.35 525.432 550.441 524.013 551.702 522.169 cv
551.95 521.803 552.328 521.555 552.765 521.472 cv
552.87 521.452 552.976 521.442 553.08 521.442 cv
553.413 521.442 553.738 521.541 554.019 521.732 cv
554.39 521.985 554.638 522.365 554.72 522.803 cv
554.802 523.241 554.709 523.685 554.457 524.053 cv
552.595 526.775 548.64 528.699 544.381 528.953 cv
544.055 528.973 543.728 528.984 543.406 528.984 cv
.788235 .498039 .345098 rgb
f
696.178 172.568 mo
676.146 172.568 li
676.146 155.781 li
696.178 155.781 li
696.178 172.568 li
cp
1 .760784 .501961 rgb
f
727.62 192.182 mo
726.574 189.472 725.766 187.496 725.411 186.706 cv
721.307 177.585 719.464 176.699 703.35 171.107 cv
702.368 170.766 701.529 169.852 701.529 169.852 cv
696.935 165.384 li
696.838 165.447 li
696.773 165.384 li
686.688 171.838 li
686.602 171.997 li
686.452 172.093 li
686.352 172.131 686.252 172.155 686.162 172.162 cv
686.072 172.155 685.972 172.131 685.872 172.093 cv
685.722 171.997 li
685.636 171.838 li
675.551 165.384 li
675.486 165.447 li
675.389 165.384 li
670.795 169.852 li
670.795 169.852 669.956 170.766 668.974 171.107 cv
652.859 176.699 651.017 177.585 646.913 186.706 cv
646.558 187.496 645.75 189.472 644.704 192.182 cv
727.62 192.182 li
cp
.517647 .780392 .937255 rgb
f
717.053 78.2854 mo
710.757 69.2317 702.759 69.2686 691.936 68.837 cv
691.936 68.837 691.724 68.8292 691.377 68.8157 cv
691.386 68.3914 li
691.386 68.3914 688.761 68.4947 686.054 68.6033 cv
683.346 68.4947 680.722 68.3914 680.722 68.3914 cv
680.731 68.8157 li
680.384 68.8292 680.172 68.837 680.172 68.837 cv
669.347 69.2686 661.619 76.1335 655.057 84.9953 cv
644.188 99.6722 649.207 112.281 649.207 127.97 cv
649.207 153.726 670.845 162.462 686.054 162.462 cv
701.263 162.462 723.15 153.541 723.15 127.97 cv
723.15 112.352 728.152 94.2496 717.053 78.2854 cv
1 .760784 .501961 rgb
f
707.455 120.849 mo
706.08 128.664 710.711 135.17 717.806 136.571 cv
724.904 137.975 731.762 133.742 733.135 125.925 cv
734.508 118.112 729.879 110.637 722.781 109.238 cv
715.69 107.832 708.829 113.033 707.455 120.849 cv
cp
f
662.567 120.849 mo
663.943 128.664 661.611 135.17 654.519 136.571 cv
647.423 137.975 640.561 133.742 639.189 125.925 cv
637.815 118.112 642.448 110.637 649.541 109.238 cv
656.636 107.832 661.193 113.033 662.567 120.849 cv
cp
f
701.258 170.004 mo
700.834 169.843 700.36 170.065 700.204 170.507 cv
696.436 180.996 li
686.721 172.599 li
686.64 172.553 li
686.497 172.473 li
686.348 172.428 li
686.194 172.412 li
686.039 172.428 li
685.89 172.473 li
685.746 172.554 li
685.666 172.599 li
675.959 180.992 li
672.237 170.375 li
672.084 169.934 671.609 169.708 671.184 169.867 cv
670.757 170.025 670.412 170.608 670.566 171.048 cv
675.213 183.848 li
686.193 174.355 li
697.167 183.841 li
701.744 171.096 li
701.901 170.655 701.685 170.167 701.258 170.004 cv
cp
.352941 .580392 .717647 rgb
f
672.162 122.754 mo
671.659 122.71 671.179 122.444 670.88 121.988 cv
670.149 120.871 668.973 120.163 667.654 120.048 cv
666.334 119.933 665.053 120.425 664.139 121.398 cv
663.492 122.086 662.411 122.12 661.723 121.473 cv
661.036 120.827 661.002 119.745 661.648 119.058 cv
663.284 117.316 665.582 116.436 667.952 116.644 cv
670.321 116.851 672.431 118.117 673.74 120.116 cv
674.257 120.905 674.036 121.964 673.246 122.481 cv
672.913 122.7 672.531 122.786 672.162 122.754 cv
cp
.227451 .117647 .039216 rgb
f
709.581 121.93 mo
709.077 121.974 708.559 121.795 708.185 121.398 cv
707.271 120.425 705.99 119.933 704.67 120.048 cv
703.351 120.163 702.175 120.871 701.443 121.988 cv
700.926 122.778 699.867 122.999 699.078 122.481 cv
698.288 121.964 698.067 120.905 698.584 120.116 cv
699.893 118.117 702.003 116.851 704.372 116.644 cv
706.742 116.436 709.04 117.316 710.676 119.058 cv
711.322 119.745 711.288 120.827 710.601 121.473 cv
710.31 121.747 709.949 121.898 709.581 121.93 cv
cp
f
709.835 110.966 mo
699.409 110.966 li
698.466 110.966 697.7 110.201 697.7 109.258 cv
697.7 108.314 698.466 107.549 699.409 107.549 cv
709.835 107.549 li
710.778 107.549 711.543 108.314 711.543 109.258 cv
711.543 110.201 710.778 110.966 709.835 110.966 cv
cp
f
672.915 110.966 mo
662.489 110.966 li
661.546 110.966 660.781 110.201 660.781 109.258 cv
660.781 108.314 661.546 107.549 662.489 107.549 cv
672.915 107.549 li
673.858 107.549 674.623 108.314 674.623 109.258 cv
674.623 110.201 673.858 110.966 672.915 110.966 cv
cp
f
649.29 115.797 mo
649.29 105.269 647.829 88.5592 656.946 88.5592 cv
663.698 88.5592 664.402 90.1315 684.91 90.1315 cv
703.058 90.1315 707.19 88.0352 713.982 88.0352 cv
721.26 88.0352 723.206 95.6416 723.206 109.386 cv
723.206 121.055 722.759 125.157 724.954 125.157 cv
727.436 125.157 727.01 111.74 727.006 106.225 cv
726.995 96.0387 729.901 76.4224 711.804 64.1988 cv
700.677 56.6803 679.933 57.0747 667.127 61.3287 cv
658.208 64.2951 650.798 72.0188 647.619 81.0145 cv
644.127 90.8969 645.366 95.176 645.366 114.744 cv
645.366 123.141 646.171 125.3 647.746 125.3 cv
647.746 125.3 649.29 125.973 649.29 115.797 cv
cp
.2 .098039 .027451 rgb
f
699.088 143.915 mo
693.77 156.101 676.015 152.586 673.193 144.006 cv
672.964 143.308 673.403 142.707 674.048 142.706 cv
698.4 142.687 li
699.043 142.686 699.377 143.251 699.088 143.915 cv
cp
1 1 1 rgb
f
689.01 137.136 mo
683.314 137.136 li
682.371 137.136 681.605 136.371 681.605 135.427 cv
681.605 134.483 682.371 133.719 683.314 133.719 cv
689.01 133.719 li
689.953 133.719 690.719 134.483 690.719 135.427 cv
690.719 136.371 689.953 137.136 689.01 137.136 cv
.839216 .584314 .364706 rgb
f
715.957 125.941 mo
715.957 126.718 715.324 127.351 714.547 127.351 cv
694.784 127.351 li
694.007 127.351 693.374 126.718 693.374 125.941 cv
693.374 116.761 li
693.374 115.984 694.007 115.351 694.784 115.351 cv
714.547 115.351 li
715.324 115.351 715.957 115.984 715.957 116.761 cv
715.957 125.941 li
cp
678.95 125.941 mo
678.95 126.718 678.317 127.351 677.54 127.351 cv
657.777 127.351 li
657 127.351 656.367 126.718 656.367 125.941 cv
656.367 116.761 li
656.367 115.984 657 115.351 657.777 115.351 cv
677.54 115.351 li
678.317 115.351 678.95 115.984 678.95 116.761 cv
678.95 125.941 li
cp
714.547 112.351 mo
694.784 112.351 li
692.818 112.351 691.169 113.652 690.601 115.432 cv
681.723 115.432 li
681.155 113.652 679.506 112.351 677.54 112.351 cv
657.777 112.351 li
655.346 112.351 653.367 114.329 653.367 116.761 cv
653.367 125.941 li
653.367 128.373 655.346 130.351 657.777 130.351 cv
677.54 130.351 li
679.971 130.351 681.95 128.373 681.95 125.941 cv
681.95 118.432 li
690.374 118.432 li
690.374 125.941 li
690.374 128.373 692.352 130.351 694.784 130.351 cv
714.547 130.351 li
716.978 130.351 718.957 128.373 718.957 125.941 cv
718.957 116.761 li
718.957 114.329 716.978 112.351 714.547 112.351 cv
cp
.2 .098039 .027451 rgb
f
519.454 119.171 mo
520.79 126.788 516.276 133.133 509.362 134.499 cv
502.446 135.866 495.757 131.736 494.421 124.119 cv
493.08 116.502 497.597 109.219 504.511 107.851 cv
511.424 106.486 518.114 111.555 519.454 119.171 cv
cp
1 .752941 .552941 rgb
f
567.695 119.171 mo
566.356 126.788 570.87 133.133 577.787 134.499 cv
584.701 135.866 591.389 131.736 592.725 124.119 cv
594.067 116.502 589.55 109.219 582.638 107.851 cv
575.724 106.486 569.033 111.555 567.695 119.171 cv
cp
f
512.53 72.3141 mo
519.034 62.9622 526.353 56.0697 537.533 55.6241 cv
537.535 55.6241 537.751 55.6174 538.11 55.6028 cv
538.097 55.164 li
538.097 55.164 540.808 55.2726 543.605 55.3837 cv
546.406 55.2726 549.115 55.164 549.115 55.164 cv
549.102 55.6028 li
549.462 55.6174 549.68 55.6241 549.68 55.6241 cv
560.858 56.0697 567.905 63.1615 574.682 72.3141 cv
585.901 87.4678 584.338 117.925 581.908 129.86 cv
575.13 155.221 559.311 159.555 543.605 159.555 cv
527.9 159.555 511.521 155.221 505.303 129.86 cv
502.877 119.226 501.069 88.7982 512.53 72.3141 cv
f
531.68 110.395 mo
518.899 110.395 li
517.742 110.395 516.804 109.457 516.804 108.3 cv
516.804 107.144 517.742 106.205 518.899 106.205 cv
531.68 106.205 li
532.837 106.205 533.775 107.144 533.775 108.3 cv
533.775 109.457 532.837 110.395 531.68 110.395 cv
.858823 .580392 .411765 rgb
f
568.247 110.395 mo
555.466 110.395 li
554.309 110.395 553.371 109.457 553.371 108.3 cv
553.371 107.144 554.309 106.205 555.466 106.205 cv
568.247 106.205 li
569.404 106.205 570.342 107.144 570.342 108.3 cv
570.342 109.457 569.404 110.395 568.247 110.395 cv
f
502.448 192.182 mo
584.698 192.182 li
588.234 192.182 li
588.234 180.09 573.765 172.196 563.073 168.819 cv
558.869 167.997 li
558.479 168.108 li
558.02 167.997 li
543.573 172.061 li
529.126 167.997 li
528.667 168.108 li
528.277 167.997 li
524.073 168.819 li
513.381 172.196 498.912 181.326 498.912 192.182 cv
502.448 192.182 li
cp
.458824 .27451 .137255 rgb
f
555.234 179.915 mo
531.912 179.915 li
531.912 155.325 li
555.234 155.325 li
555.234 179.915 li
cp
1 .752941 .552941 rgb
f
544.229 185.276 mo
551.266 184.28 557.479 177.596 562.204 169.21 cv
561.808 169.079 561.418 168.947 561.009 168.819 cv
558.016 167.997 li
543.202 172.196 li
528.274 167.997 li
524.942 168.807 li
530.219 176.89 535.903 186.305 544.229 185.276 cv
cp
.898039 .898039 .898039 rgb
f
543.369 191.461 mo
543.369 191.461 555.532 186.224 564.551 169.46 cv
562.639 168.59 560.47 168.078 558.072 167.62 cv
553.347 176.007 543.274 182.994 543.274 182.994 cv
543.274 182.994 533.172 175.95 527.896 167.867 cv
527.896 167.867 524.104 168.544 522.595 169.163 cv
528.857 185.353 543.369 191.461 543.369 191.461 cv
cp
.298039 .184314 .098039 rgb
f
532.56 181.319 mo
532.393 181.167 li
527.896 167.867 li
527.896 167.867 531.666 163.138 531.817 163.552 cv
543.572 169.248 li
543.572 169.248 555.029 163.552 555.138 163.552 cv
555.267 163.552 559.248 167.867 559.248 167.867 cv
554.694 181.162 li
554.528 181.312 li
554.464 181.321 li
554.305 181.264 li
543.548 172.35 li
532.783 181.27 li
532.625 181.326 li
532.56 181.319 li
cp
1 1 1 rgb
f
546.69 134.909 mo
540.994 134.909 li
540.051 134.909 539.285 134.144 539.285 133.2 cv
539.285 132.256 540.051 131.492 540.994 131.492 cv
546.69 131.492 li
547.633 131.492 548.398 132.256 548.398 133.2 cv
548.398 134.144 547.633 134.909 546.69 134.909 cv
.858823 .580392 .411765 rgb
f
544.169 146.884 mo
541.875 146.884 536.204 146.516 533.121 143.107 cv
532.481 142.396 532.536 141.298 533.243 140.66 cv
533.562 140.369 533.966 140.209 534.396 140.209 cv
534.427 140.209 534.457 140.21 534.488 140.211 cv
534.951 140.235 535.378 140.437 535.689 140.782 cv
537.187 142.438 540.38 143.422 544.052 143.422 cv
544.533 143.422 545.023 143.405 545.518 143.371 cv
548.743 143.154 551.568 142.165 552.389 140.966 cv
552.649 140.585 553.041 140.327 553.496 140.241 cv
553.605 140.22 553.714 140.21 553.823 140.21 cv
554.167 140.21 554.505 140.314 554.796 140.514 cv
555.583 141.051 555.787 142.132 555.251 142.924 cv
553.782 145.065 550.232 146.525 545.752 146.828 cv
545.216 146.865 544.685 146.884 544.169 146.884 cv
.788235 .498039 .345098 rgb
f
557.562 116.389 mo
557.562 118.757 559.483 120.682 561.854 120.682 cv
564.227 120.682 566.151 118.757 566.151 116.389 cv
566.151 114.014 564.227 112.094 561.854 112.094 cv
559.483 112.094 557.562 114.014 557.562 116.389 cv
cp
.227451 .117647 .039216 rgb
f
520.995 116.389 mo
520.995 118.758 522.918 120.681 525.29 120.681 cv
527.659 120.681 529.584 118.758 529.584 116.389 cv
529.584 114.015 527.659 112.093 525.29 112.093 cv
522.918 112.093 520.995 114.015 520.995 116.389 cv
cp
f
570.731 122.394 mo
568.491 124.591 565.23 125.705 561.038 125.705 cv
558.25 125.705 556.075 124.897 554.392 123.235 cv
551.393 120.274 550.822 115.402 550.721 113.212 cv
574.325 113.212 li
574.237 115.434 573.65 119.53 570.731 122.394 cv
cp
532.844 123.214 mo
531.153 124.888 528.965 125.702 526.155 125.702 cv
521.944 125.702 518.67 124.585 516.422 122.38 cv
513.504 119.519 512.915 115.431 512.826 113.212 cv
536.507 113.212 li
536.411 115.392 535.849 120.237 532.844 123.214 cv
cp
577.806 111.959 mo
577.787 111.819 li
577.806 111.61 li
577.806 110.725 577.148 110.009 576.337 110.009 cv
510.81 110.009 li
509.999 110.009 509.34 110.725 509.34 111.61 cv
509.36 111.821 li
509.34 111.959 li
509.26 114.354 509.547 120.39 513.923 124.682 cv
516.851 127.553 520.967 129.009 526.155 129.009 cv
529.912 129.009 533.006 127.83 535.355 125.503 cv
539.234 121.662 539.893 115.777 539.99 113.212 cv
547.241 113.212 li
547.338 115.78 547.998 121.673 551.873 125.513 cv
554.215 127.831 557.299 129.007 561.038 129.007 cv
566.206 129.007 570.307 127.555 573.228 124.691 cv
577.602 120.399 577.886 114.357 577.806 111.959 cv
cp
.298039 .184314 .098039 rgb
f
526.924 55.0133 mo
509.916 59.2345 500.346 72.7896 500.346 92.0061 cv
500.346 94.0235 500.864 110.701 501 110.395 cv
502.189 110.175 516 101.5 525.289 80.3333 cv
525.289 80.3333 538.712 99.0935 586.253 110.009 cv
586.253 110.009 586.8 102.402 586.8 91.5988 cv
586.8 53.0477 551.87 48.8187 526.924 55.0133 cv
cp
.929412 .67451 0 rgb
f
263.607 172.568 mo
243.574 172.568 li
243.574 155.781 li
263.607 155.781 li
263.607 172.568 li
cp
1 .701961 .501961 rgb
f
295.049 192.182 mo
294.003 189.472 293.195 187.496 292.839 186.706 cv
288.736 177.585 286.893 176.699 270.779 171.107 cv
269.797 170.766 268.958 169.852 268.958 169.852 cv
264.364 165.384 li
264.267 165.447 li
264.202 165.384 li
254.117 171.838 li
254.031 171.997 li
253.881 172.093 li
253.781 172.131 253.681 172.155 253.591 172.162 cv
253.501 172.155 253.401 172.131 253.301 172.093 cv
253.151 171.997 li
253.065 171.838 li
242.98 165.384 li
242.915 165.447 li
242.818 165.384 li
238.224 169.852 li
238.224 169.852 237.385 170.766 236.404 171.107 cv
220.288 176.699 218.446 177.585 214.342 186.706 cv
213.987 187.496 213.179 189.472 212.133 192.182 cv
295.049 192.182 li
cp
.537255 .509804 .494118 rgb
f
284.482 78.2854 mo
278.186 69.2317 270.188 69.2686 259.365 68.837 cv
259.365 68.837 259.153 68.8292 258.806 68.8157 cv
258.815 68.3914 li
258.815 68.3914 256.19 68.4947 253.483 68.6033 cv
250.776 68.4947 248.151 68.3914 248.151 68.3914 cv
248.16 68.8157 li
247.813 68.8292 247.601 68.837 247.601 68.837 cv
236.777 69.2686 229.048 76.1335 222.486 84.9953 cv
211.617 99.6722 216.636 112.281 216.636 127.97 cv
216.636 153.726 238.274 162.462 253.483 162.462 cv
268.692 162.462 290.579 153.541 290.579 127.97 cv
290.579 112.352 295.581 94.2496 284.482 78.2854 cv
1 .701961 .501961 rgb
f
274.884 120.849 mo
273.509 128.664 278.14 135.17 285.235 136.571 cv
292.333 137.975 299.191 133.742 300.564 125.925 cv
301.938 118.112 297.307 110.637 290.21 109.238 cv
283.119 107.832 276.258 113.033 274.884 120.849 cv
cp
f
229.996 120.849 mo
231.372 128.664 229.04 135.17 221.948 136.571 cv
214.853 137.975 207.99 133.742 206.618 125.925 cv
205.244 118.112 209.877 110.637 216.97 109.238 cv
224.065 107.832 228.622 113.033 229.996 120.849 cv
cp
f
253.648 149.806 mo
251.354 149.806 245.684 149.438 242.599 146.03 cv
241.959 145.318 242.015 144.221 242.722 143.583 cv
243.05 143.284 243.469 143.134 243.911 143.134 cv
243.93 143.134 243.949 143.134 243.968 143.134 cv
244.43 143.157 244.857 143.36 245.168 143.706 cv
246.663 145.359 249.841 146.346 253.511 146.346 cv
253.998 146.346 254.494 146.329 254.996 146.293 cv
258.222 146.077 261.047 145.088 261.867 143.889 cv
262.127 143.507 262.52 143.249 262.974 143.164 cv
263.083 143.143 263.192 143.133 263.301 143.133 cv
263.647 143.133 263.984 143.237 264.275 143.436 cv
265.062 143.974 265.266 145.055 264.729 145.846 cv
263.262 147.987 259.711 149.448 255.232 149.752 cv
254.692 149.788 254.159 149.806 253.648 149.806 cv
.678431 .392157 .270588 rgb
f
268.687 170.004 mo
268.263 169.843 267.789 170.065 267.633 170.507 cv
263.865 180.996 li
254.15 172.599 li
254.069 172.553 li
253.926 172.473 li
253.777 172.428 li
253.623 172.412 li
253.468 172.428 li
253.319 172.473 li
253.175 172.554 li
253.095 172.599 li
243.389 180.992 li
239.666 170.375 li
239.513 169.934 239.038 169.708 238.613 169.867 cv
238.186 170.025 237.841 170.608 237.995 171.048 cv
242.642 183.848 li
253.622 174.355 li
264.596 183.841 li
269.173 171.096 li
269.33 170.655 269.114 170.167 268.687 170.004 cv
cp
.317647 .298039 .290196 rgb
f
268.347 120.703 mo
268.347 123.071 270.268 124.996 272.64 124.996 cv
275.013 124.996 276.937 123.071 276.937 120.703 cv
276.937 118.328 275.013 116.408 272.64 116.408 cv
270.268 116.408 268.347 118.328 268.347 120.703 cv
cp
.227451 .117647 .039216 rgb
f
230.045 120.703 mo
230.045 123.072 231.968 124.995 234.34 124.995 cv
236.71 124.995 238.634 123.072 238.634 120.703 cv
238.634 118.329 236.71 116.407 234.34 116.407 cv
231.968 116.407 230.045 118.329 230.045 120.703 cv
cp
f
239.884 113.997 mo
239.311 113.997 238.746 113.759 238.365 113.304 cv
237.43 112.186 236.037 111.546 234.54 111.546 cv
233.042 111.546 231.649 112.186 230.715 113.304 cv
230.053 114.093 228.841 114.228 228.003 113.608 cv
227.164 112.987 227.019 111.843 227.679 111.054 cv
229.35 109.055 231.851 107.909 234.54 107.909 cv
237.228 107.909 239.729 109.055 241.4 111.054 cv
242.06 111.843 241.915 112.987 241.077 113.608 cv
240.722 113.87 240.302 113.997 239.884 113.997 cv
cp
.858824 .360784 .019608 rgb
f
277.986 113.997 mo
277.414 113.997 276.848 113.759 276.467 113.304 cv
275.533 112.186 274.14 111.546 272.642 111.546 cv
271.145 111.546 269.752 112.186 268.817 113.304 cv
268.156 114.093 266.944 114.228 266.105 113.608 cv
265.266 112.987 265.122 111.843 265.782 111.054 cv
267.453 109.055 269.954 107.909 272.642 107.909 cv
275.331 107.909 277.831 109.055 279.503 111.054 cv
280.163 111.843 280.018 112.987 279.179 113.608 cv
278.825 113.87 278.405 113.997 277.986 113.997 cv
cp
f
256.439 136.267 mo
250.743 136.267 li
249.8 136.267 249.034 135.503 249.034 134.559 cv
249.034 133.615 249.8 132.85 250.743 132.85 cv
256.439 132.85 li
257.382 132.85 258.148 133.615 258.148 134.559 cv
258.148 135.503 257.382 136.267 256.439 136.267 cv
.858823 .552941 .384314 rgb
f
295.365 97.6585 mo
295.365 97.4704 295.35 97.2917 295.348 97.1046 cv
295.521 86.4653 294.516 71.8846 279.712 62.068 cv
268.376 54.5495 247.246 54.9439 234.201 59.198 cv
225.115 62.1643 217.567 69.888 214.329 78.8838 cv
211.031 88.0471 211.876 92.4017 212.016 108.586 cv
212.14 108.529 212.74 112.661 212.74 112.661 cv
259.5 99.3729 276.937 81.5412 276.937 81.5412 cv
285 102.417 294.736 113.048 294.736 113.048 cv
294.789 113.171 295.365 98.4223 295.365 97.6585 cv
cp
.858824 .360784 .019608 rgb
f
150.694 376.982 mo
149.554 374.392 148.397 372.197 147.234 370.497 cv
145.783 368.376 132.504 358.428 118.853 353.906 cv
118.853 341.827 li
96.7524 341.827 li
96.7524 353.924 li
84.9037 357.798 70.0515 368.147 68.4429 370.497 cv
67.2799 372.198 66.1193 374.393 64.975 376.982 cv
150.694 376.982 li
cp
1 .701961 .501961 rgb
f
139.876 267.032 mo
133.581 257.978 124.432 251.305 113.608 250.873 cv
113.608 250.873 113.398 250.866 113.049 250.853 cv
113.058 250.428 li
113.058 250.428 110.433 250.532 107.727 250.64 cv
105.019 250.532 102.393 250.428 102.393 250.428 cv
102.403 250.853 li
102.057 250.866 101.844 250.873 101.844 250.873 cv
91.0197 251.305 82.1412 258.17 75.5777 267.032 cv
64.7104 281.708 69.7274 300.075 69.7274 315.764 cv
69.7274 341.52 92.5193 347.954 107.727 347.954 cv
122.935 347.954 145.974 341.336 145.974 315.764 cv
145.974 300.147 150.976 282.996 139.876 267.032 cv
f
130.278 308.644 mo
128.903 316.458 133.534 322.965 140.63 324.366 cv
147.727 325.77 154.585 321.536 155.959 313.72 cv
157.333 305.906 152.702 298.432 145.604 297.032 cv
138.513 295.627 131.652 300.828 130.278 308.644 cv
cp
f
83.0883 308.644 mo
84.4633 316.458 82.1327 322.965 75.0398 324.366 cv
67.9445 325.77 61.0819 321.536 59.7102 313.72 cv
58.3364 305.906 62.9698 298.432 70.0605 297.032 cv
77.1556 295.627 81.7144 300.828 83.0883 308.644 cv
cp
f
70.8445 298.847 mo
70.8445 288.32 69.3561 273.913 78.6439 273.913 cv
85.5233 273.913 86.2386 275.486 107.13 275.486 cv
125.616 275.486 128.686 273.389 135.604 273.389 cv
143.018 273.389 145 278.692 145 292.436 cv
145 304.105 144.545 308.208 146.781 308.208 cv
149.31 308.208 148.875 294.79 148.87 289.276 cv
148.859 279.09 151.821 261.776 133.386 249.553 cv
122.052 242.034 100.921 241.289 87.875 245.543 cv
78.7885 248.509 72.3809 256.233 69.1425 265.229 cv
65.586 275.111 66.8475 278.227 66.8475 297.794 cv
66.8475 306.192 67.6674 308.351 69.2726 308.351 cv
69.2726 308.351 70.8445 309.024 70.8445 298.847 cv
cp
.537255 .345098 .211765 rgb
f
95.0137 305.074 mo
94.4983 305.074 93.9887 304.846 93.6456 304.41 cv
92.804 303.342 91.5491 302.729 90.2002 302.729 cv
88.8513 302.729 87.5964 303.342 86.7549 304.41 cv
86.1591 305.165 85.0673 305.295 84.3118 304.701 cv
83.5565 304.107 83.4262 303.013 84.0208 302.258 cv
85.526 300.346 87.7787 299.25 90.2002 299.25 cv
92.6217 299.25 94.8744 300.346 96.3796 302.258 cv
96.9742 303.013 96.844 304.107 96.0885 304.701 cv
95.7691 304.952 95.3909 305.074 95.0137 305.074 cv
cp
.227451 .117647 .039216 rgb
f
130.283 305.074 mo
129.767 305.074 129.258 304.846 128.914 304.41 cv
128.073 303.342 126.818 302.729 125.469 302.729 cv
124.12 302.729 122.865 303.342 122.024 304.41 cv
121.428 305.165 120.336 305.295 119.581 304.701 cv
118.825 304.107 118.695 303.013 119.29 302.258 cv
120.795 300.346 123.048 299.25 125.469 299.25 cv
127.891 299.25 130.143 300.346 131.649 302.258 cv
132.243 303.013 132.113 304.107 131.357 304.701 cv
131.038 304.952 130.66 305.074 130.283 305.074 cv
cp
f
121.965 326.564 mo
115.918 340.422 96.8631 336.425 93.6537 326.667 cv
93.3945 325.874 93.894 325.19 94.6282 325.189 cv
121.182 325.167 li
121.914 325.166 122.295 325.809 121.965 326.564 cv
cp
1 1 1 rgb
f
151.521 378.121 mo
149.491 370.733 144.895 366.21 142.695 364.389 cv
142.637 364.296 142.572 364.208 142.489 364.134 cv
138.5 360.521 132.019 358.141 126.115 355.918 cv
125.514 355.692 124.847 355.897 124.473 356.419 cv
122.908 358.6 117.999 363.979 107.659 363.979 cv
98.8628 363.979 93.2461 358.349 91.4746 356.273 cv
91.0902 355.823 90.4678 355.67 89.9136 355.878 cv
84.0651 358.076 77.8607 360.279 74.1892 363.459 cv
74.1892 363.459 66.8705 368.231 64.1481 378.121 cv
151.521 378.121 li
cp
.466667 .737255 .184314 rgb
f
96.2913 295.998 mo
84.1092 295.998 li
82.4278 295.998 81.0648 294.635 81.0648 292.953 cv
81.0648 291.272 82.4278 289.909 84.1092 289.909 cv
96.2913 289.909 li
97.9726 289.909 99.3357 291.272 99.3357 292.953 cv
99.3357 294.635 97.9726 295.998 96.2913 295.998 cv
cp
.537255 .345098 .211765 rgb
f
131.56 295.998 mo
119.378 295.998 li
117.697 295.998 116.334 294.635 116.334 292.953 cv
116.334 291.272 117.697 289.909 119.378 289.909 cv
131.56 289.909 li
133.242 289.909 134.605 291.272 134.605 292.953 cv
134.605 294.635 133.242 295.998 131.56 295.998 cv
cp
f
110.683 319.465 mo
104.987 319.465 li
104.044 319.465 103.278 318.7 103.278 317.757 cv
103.278 316.813 104.044 316.048 104.987 316.048 cv
110.683 316.048 li
111.626 316.048 112.391 316.813 112.391 317.757 cv
112.391 318.7 111.626 319.465 110.683 319.465 cv
.858823 .552941 .384314 rgb
f
114.633 343.468 mo
113.991 343.368 113.362 343.167 112.794 342.854 cv
112.172 342.511 111.498 341.995 111.321 341.31 cv
110.973 339.957 109.142 339.083 107.835 339.083 cv
106.526 339.083 104.696 339.957 104.348 341.31 cv
104.198 341.889 103.694 342.347 103.166 342.682 cv
102.491 343.111 101.712 343.365 100.919 343.466 cv
77.8557 346.41 70.8347 324.539 70.8347 324.539 cv
77.1193 352.13 107.835 350.635 107.835 350.635 cv
107.835 350.635 138.549 352.13 144.835 324.539 cv
144.835 324.539 137.921 347.101 114.633 343.468 cv
cp
.537255 .345098 .211765 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 19.2.1%%For: (Irina Mir) ()%%Title: (avatars_geo_new.eps)%%CreationDate: 01/06/2016 14:54%%Canvassize: 16383%AI9_DataStream%Gb",K#t%oUo(`4mn/^:Y8TR1>+!F2X#',qJ%Ct3"9oUmc`n8e.VVP&Jf17]DcNi+e-=HH:G.28Ll&A0\BJ.Qn/M=2K:>3>)pAS7Y%mlQd\/m)[V3F=M$=!SRiMi3Xb0,qq6Xgh^R8kWj_QEBX7ZtIQ_.iVgSbJH"PhH]O!:C\?2hMZ9LhDd^%G$:I)nXW;FT3Akt['h'J%e1*[?>-6)Jb$(iHs1#;CqH/7"Cpk7OSaKpg=#%l,@.H[4p%<<L-bKr(!Gjt_4q*P?7^!UV$]%11`Kq+eb2!5/r9%8Mi-K'UZbi#n%G##"*6V&i3$pV6:>5?=KQhNJKQ&#+@YH6PYCA7t51l(c[]V(2VQA,$1kOp8#a+bZo[0nWI-+QW$q!\?/%XP?HDf@A>N^"feVg(Q0%8MZL*\MYj[iL'6]r9ska;Eu$>h@S,u=,7^<]ONW8jV?r2]`Q+0'#qbA)1"_$GR7t)%+se'PrK7ZOJRpm0VafISAc;W@Asb@AD-`E%d/sdZVGr<MB4g'*keYHV(SD'cRkXfj"Ek4'YWceq?E^kH`=I40Yjd7#F-NTDKW4$_=:o2%KHe,14`DISE;>LG'&J.'>j)d).qm-0%bbru[CWcctKb6_%$g;$h7!_5<!9.BTDJt)E!'>g?rUe`5:KY[n4dk?'-Pok.ZS80ENUV.:6bitDSg59+8a8Lj90^94JoP6_Ppa]$%+9]>*Mn\,'0RI5fj0/^1Dp\KG#0%7(Ye8%$Ejpf_nh`?;9KhA?Zkq(qUkL="cI75uWu't4WO7]NTOD"abHp7ui-Z+a3&4$>)Rhu-%4]Cd,4bNZKd\,V.E@47KGVPh^[Xa5$f0>lWP%4>9e47609+e!'bYs252h3Bo@*Lh-!=WCF#'hIFrd^kL`rSSSKIaI\0\j0"j,]pO%S9D&[W@b7!&72Q_Gf-I8"^uMma+!$hi>!$&8XsoVo,EA;d-bpg^P+T\Nt]E><I(0/QuGMW^bY4kBH4I#@,p%Jf]pN`/E><sp.;XQ%KbYkP7HS4?R4+d=Zo:7_.G>FMSCWL-QF&@"ct=IaZ`k\m40#t9d6=`Ga`EpU'&%\o<*Y"4jA+-,_*?Q.*]/3Q`/un4qj3<@k&IS/%lSUck?fBDtA!8b5G2oNei'D)68I32Nb'IR$G1,Y%eQOD*KqH'EQ&,A6&HIjO94<TapC.'nIg&Q`#6%cbnDBtnn1XPg.^GdX2_SL=%6Pgq0%h^qi*teM26Z87[?NVLg:3b;K4DNDmNG,0p(G$.P8X<U8=27?EK&BkLieVNkVh(%uPX2WF)j]=d98I0h]MVchNPCpA:Nn:L%)R\Bj2]4<Mh;3>H^VNff@FKu2-0WO9<hoQ'h<]hU'EI]<9qHNO)m.J0IWr+uMoJG)`:;`a_5ga`^X3E)=f6BD.rqQOiRu?3<pcMK%\*2cG;5=)io-RAFUlA&;RhR%V,n)`rgE6Q&`>_1F\"kP&Pnk*s""HQ(4kMH4M_B\Xot9&7Dmo*;oT^_t9JXg5G+6*t>o"]c9E0kO%=a$YAH2:mB3"3OQCUA(F\G/mK>-dVLo$d!Qm7)H3g,Xi^57W1F"a4ehS$1Aq:XAV#pa!M$Eg4QTs8MMh'3[?LJ90[PI,[?&BUsfH%&%eBrUW;c8cGI!>h9Jcjnto:QFh2!5G:V!`rWn!YY?ZuDBB<.&<Y#JQhmq!PXa,$e9QX]^h*r\R$ua-Ml2Sf=*B%W9MMp("FJJe9%UX_@SThXpoj*T1R[;4SjKP,C2c+h,Z>*tl_+Z+$-hG&MTE5kbBNeeo<)8L\jK@6Ob*Gm[g6O4m;f'RnNF?emt+1GE$;&"2bbI+*"%=LULQHM)nV]EnJ.0YaRZ%YBVfB^[!T"R46AQ=8nhD#F(/[8s?=hlRn>2!^F7m`Fubj]/5-b.'r(ci'*#`CKF["D\DBZJ0ib:1G10%',q@'(BdofB1i'Dmu6NZ4Ih[#BM(1+Rt2k]fm[SBg&=qYN5!itR=G=IlOh[Gnao&g@m]ZtN9FOCpucUodqTpG(8slf(LbcOl`J2#%5KCIWfb3tfGLC8CDn^Jp&El*ReUt5I[XdA1jBKl:)f4-<c(-Y%)m&g@ZQ7b#[SO]=bM0RKGQdQ'b4\-gW"B?2QJ3:NrX`%9=h-+9%NRN4D8XqBnN.l&n)P8dSnDG%cb%g_/]2&e^$\eELm[s!hPORUn!;]YlQ)BoA^Tu!7[!]EgA=XO[L3m73?M\6nK,o*e#DQS@fYs,X%!;;;0K&g"B7Ut4WBLeeg0*HL9gZ1Sei9@$ZdV5bW47%*smWji2OLN*%$i[:54`VQ*m,02nr8EtPNl5?/gL.`#Ha`unon*@C>Q+"$%6]+t>qB#tZSB4%F5Z\(0kXl'N9b-,'"Y:2nG0#<*m"Y@0d"1V<=]QlZ[Y)(c!>CKE*lBY6Jl=PR-%Q<tjKQ'j%3e"GS<<.i]O(*c%"h]1$GTntRDHT$_TofYq^;Mam_!nM#3>S;_JT:l1O_g#sSOW"Z>'<MpJPODH&pEGd5i^,kQT?.<]78<h:)8(c4d%1Z'h"8n]P6Rl%C`knu`Y,e"N+SLD&OS4eI7X"9PfsPe%E(t`--i=E%%2kGA`mSl_O%fu`4cf5;`]II&%`[0Nal;0$qHsGB`WJJQGYe,6i[>i=9^Ou%*2YT(;VD7!Qs=7]rhP:a=Qt5KfMEg'ecsN`J=[(8qGLR<"=flF"qb8k1BQ\AJ/NTudSOR#;AJuHCS%M'd\iC.lm2dCN/lWq2W6M5%XV%!_o8,#c6^,TC#\jp0F_"2WEOH/H&:=VRNU`VDZpH$G=B<O4"m=^?8em]:S%-8\".'o<E:!g+)qlX3oErY#XMdO5huJ`BCuAFX%.Z#]&X\M,qXM>uMmss!9WTD,C!Y7RNOhbCc1sUX`as:A"U]f0o9t+GP1'i/o`5#>)JH_6O&d+nJ(D3U]X55"]HQ-23[%P?-:>/7+%LnQDhE1)G2?oBQr.kJ9JQ4VfE3H3as!Y8_q"D!roU];G`TX"k)k_QGaKYT?Tdr9r@j4IL2D*.j:FsEYjbU&nlqCM5(S@SuL^?Eeg%dV+i2;4*"OfYl5gR)"2c%U;;:+N>kkDeVUC>7K<<,t?lP/7TF6QjOccD'glTmfub-ekXsS.!3]6YOd<7/TKfcD_(r-:Ra1s5,Kkd%W/:g%$%ZU7U.cF;H6=7H9#T)U1cW[K"l4[<OS=IG'iA/]KI64.:eKq0/O&?3m3IK$O]aQI?!M#XE,.i1R4E)h?/EIAB-P^=Je=o+%LmOuI_:0f>&;/'T#"#8f.g<sRM:Y%>dQ1U9E=W4-:.([[&^2EPJ-.T(7n"F$ZgkQ$JN67uMp0g>&91?Pdhmj,.juX#^nCF!3b^P]%,>fj77hI=qOs:86$<Wa9=@T'B,@KGP,)e7-lg/V+Jd@YFN'\,#Z*C5d4A8Z0`Bjo2-VPpT^mlNZ9tPXp%Ua<p]FNXQ>04U^m^&$'%0qD=:jif6U8"X?V9/:Z*7iOd,b8GdU4*`(Srj=V:kKDT&dNk;?9HV?PYk8J2^u6(4)[iZ85k*=+d2:8u'HW:boO(`HE#Gp>S>XX4%QTH5-9q@0cf6s2*i%fHf7&uG;SX.'>SIXU*Ze6UVG+d:s\.<p%.]7j@SIX]":-k2@3EtpY">42>rLRlcOl18X_ml[EE9Er`mI.C^%Qa'$_A@U)$\?F@)ggm&CCdXOM/VEr)Z]ZIq&mX^D"R^a9r%hp+lZTm`f\!<n4ui]!pN%U:@`C"c$N=BLX:36/q-"'Y)M#X1Ul7Yj%hAlbmms[9J&rD^#)<AL`BE]%m5ujR$!<ikZ,63"Nn=YL37_k@CjfZF%LgUBi.(*'k?:G&]fF8Fn%&R9@W:qe29)o/p1i+IgUI0#l%@%g;0m[`HR(+fpFOZ06sr!Olr#g$,aDT-WY%)iHF-1!NdC)B`SB2kZe!/9Dj!L_GW-7mfK$o&,+jEq^,Y[A4o3l%U<noQ!";=/s^%KA`CB1Y<X:h-".tZW(@0,O*0]Z=#)+S9u">i'8D?+VF&\%O;m9_9/Pg!=^*$9I,KUa=`)I$"0=D(Vg4`Gm$/0Q4UhtHNJq5VY>Ao%)M2.D9mMis">g6$(dTm`I`.#OE_^XAb\1D'BOrl"cD7K_8dqE/*C72XU6s!*>U"a,<4&5_i[WXedeLo'!JM(+gHtHBU(*nER,GeP%WFBds3H-25)@&X^d?NnZK9)b-RL.Q];9,6G,S:G+Q:<S&NX/[IiIeb$$_/B*%'g"H\=>p2MrjFNMBX>fI#Tj$$KiCGF@iurPK<2r%WB<KtECY*>G%ca9(leoRaA^$RE&<Nt5QcZS'\hC`F'@Z_2,"=>Cs3M.>/@I*l%k&QN_&dDK$6TB+Vb>p&G!9ka:d?D;]/.m29R*0%Bp4<tZ<@0OD'BV#b^;uW=QQKhFp6N4J^V\FU][>SC&Pj,f9MK3&K.IQ+]Xn+,f9a)"P+pE"o+].BA%9oJVGCR1!WYg>Fh!GC+Jm0%FP&GT);IhU.&,aj2C&DT7ab9J4O>5`X<>\7/ZC$;%#qs`-!!L.+q29q&Z:U5mkRTncb.hsKfftWN,3oSH=IgaBdPWX!!gUc$_)[B%!&3+MJu)@)dt(A11_?#332tWS!^)!dYe+:&;0rYM7rZhjLn+c<TospqV>5ak.%q3NS<G6LUl#F/l?1I)W".XhQQE,^N"3Y]\I0%A%;8s7N0-!jI'N&8Ki?Tf\!=+?EbMl/*,1@MU=G!5tHttlC+f%V9R+F,cK=8^BdTUB)PRB3UYc'#r.B)AtA_[lI"]!0tb*9=:ZIV?G%P/;WVE%8[lU@,,)dgl)=,m;'^cH@<^22bgU#VX,]&?'kc,[gkq!J;U)9GMAg8r&Rl?k7FQ6JQ!FOUS_S'+cA7$#!de!h4L39i:`k%Ur)sOU]Y]R6@]2&;!(1^!oBD/C.GVP(tjgee>GtD[8fadjI(slW6e[\%8]<cl*+e/@^aK*AIt^`mH^#^RDX$g1+&_r;G52(<bR\^%Tai9bUSJ],kI-t@>@p]C%2)L`F65G,369r-3$hE;lmeSQ-ZO?DboP&^%cRkMSsCY$_qt`!;Ni+`eD401G/8:;%ZTY>NhQ1!>'Zp]%^d;mt7T.;i)kNcDQe#]8k7K*FR^*u>,!3$[5,nMa1d29NZJbq>dn&=ML9)SUfAP_NW.h(ho$1q.G[Vl*eTm(YGV1\-r*kS1T,CZK%RE*;;MXY#M,8)?ai!+fN,g@0MdEP!3(M!l8e?u.+'uJ)88.(G8a5Q*8:kXBHdK%L)LBs6j2b3p"H%1Z\!U'Xr+tC=l!eH,2>,!1m%YVlS@-e4hr*[%Ij&>Mfn.570',*h>%QteH9?!'KM.\cW&?lkXK-)DG8$^hpQj>GLF]@&3T2Nq6&0#>gQ[C'.^.A).n6R\1ncULj?%\k"8rk"o!%JSQ59R#j/EOSsd?N+O0AS(VBD&EbD;>$>b-NC7n0*V,<q<:d0rPsL36=3d)tkb&Q&dMNs;-(mRF*e6^_!m5!#34C`O%GeAgICktGrj[]`uP/agi&04n1SYXfC0t]]>+bIi\[G`l2EDC#=R*$:N;eL&3XMN"U[,DDFaItVMaJV1s5u,M61EF&p$BI.j;!I&Q%.`f`o#\77<9@2s<F$Wob@p:eB*LMhPFHI;Ybg+L35]\_4)N6P,+F#T92`XeSJOYu)AhVN9FQ+0hMJ!&s.jQX4Es2W?$q=sDFjsH-%M]j>j'`fm)@hNsp.k'nM&F^tESUeifFPaN"HH'B\.fu8]Kn((DKIm70K2YFtb(2/V2?>ta,9'`i>'1*.&W=SP_BFMri$^IW_nJRA%^!=2<)&BHl&;`b,ZNTn;%tlsJ^0"(iF4b>D$cYSQdUQOn$lg&4:qr)\UaVGW5DZEmj/gb`9p^Rm+++Q7Do:9Q`BoXuPH?I0brM2.%<g%H+3Adrc`QR1e6D-CV2BsAA4BkKuS5'1FflZ_;P9:\[@lXf!&PSh;-<rifZT7I58YXYA"=[g%F;\ql-pr0'<oj@]cgjDDU?XQi%T8@,SckMSj.8kg6kJcVM50#hfSFIB2M_^YU<hRMD"66/,W^(>f(5-rNNR%+J1Rm">AfJ^I!^YDI*$ZZS<S9=)Z0%(*.npBpc.7t0%m19:ZCm[/,0eL51U4lHuW\oep"8Cek!YD/D6$s9gbA;=Dj:tD4o;q&0'cC?-e)c>*oLht@J6A$]Og.DofMWt"XU5eZ)dPE)Us^DU%C<9D+2+fQ2A-So:THXR#GAu%KTkVWtE[7$;_nA([ImKI?M1fA3<Hq+Koa:mR0kt.&YHA3g$62.0&ZAC^_bnV`&/:lN,k+I`jliBm%Y&P/DkB&9P_S2Pc6Z]%1SMeC9a;cdr]&`.MjU/gr'JZKG=pjB5eLRAU@F'dhf:XPuk6mSH#gs.SVBaJK1p^a<N"gRpPfX1=)j`mZ%9]LsI=Bp+-K\AM?]uAP<9IBlt/b/IfNhO6"bJ&2C`Yh36ai/8\!&@8]"!nb=Vp$%,iIts&T&nO:,cK-rh!6s-:FA+%Q?8R'+e*9U%_%Kj"l!*6Wn,SW-?*TbORKPSQ4\YL(,M4,^)lCL*FM\m1>&+6s&'L8hGTm-%<+)nh_HXthFcPY=A?$^a(aG!UeQ:%(LH:n8_5E([%A-<5`/fhH]_M]EiM!F(-%j'h$Yg#\'2E3d`"=uYL!J)!hRN0K!1.o7dL=0=)I0QStilrAR%'Kf`-G*2aqMZ[..HUseO\ojqW.[;Z%0ZFu0MROq*p*:0$9Jls[A=0tC^.M4\#(Z6BW2W+i%C2Khdm]r%KogE\!bDP`V1Hf$.n6^nCee(;7SjMQN^X'%87FO!$cBlE+>JG$%[Lg[04:.`J.iP[:.10]aKTF!.*D/jD,[O>m.M]c(_dGA?kZ\=Y7V&`[M\gm^_gXN.d#iQM(jMttch9VaGBbN>VrMg[P=6(6L/D':%M%g^!E($5BKGaM1JA>gh(c?kWV2,?oOM_bH>E;O?6pAkP>IAFA<A`)JOM#*)3NTTeH)<M]@9(16"07/&('(!QZS#FIUBmMaj/%r/%`q#qAiG!I@")/JQ8dY_Wb9[4DBA$f=mj!?3N%abL]P"(n6r^^0cFQO+P,Gri`/4b/'I'D0EX4Yj)NHU98jX$PHA;W(/rNUH2\Q0C%dg1%J"4:q=\:$DL9OO)b(./W>BW,c'rC0Y7Uqs33'F(m!70(aWZuj5*IRGXoA=&M6Z90^P!&DXI9gAtQ<=o8TDFJTs'7q3L2Xt0l%'Eo>7Fum-[=c[PbrsV`,knkij<+8dZR)C1903:Z<,R"QYX5rgh3'KMO0Lk4j=JR_X!*T`:>E$o/&6625M+1K3?mt3V@L1Y\j@i\7%RZ*@Ci%0*Yg`)L'EIJE)Cq2*J#tP89k/u[3)M(mT+>X(@gEP!C>Dj,+Lk9AJTYd/\4NA%Uaj5qm!>-Z'Q@0Iod5_4-cbjIZ6k4";%jH'Ggm%>(Q#J)SPi]1;_1HPGbp:-P&jij74QmG<hDG&8/L(&\O1o/[oMPQ!5Ld75!""2Q[a"RZ#Bf`04`8aZ<9bm4i8t$f8.G5q*%A,bgTPE6*3D7(SkZA?Y4i8rIJ@<5?jl$\gq=FqeGWWkph:Qe-1Hto_r$&8ePQq@BlqalqNO=-qsj*2563!,sFJI#6mNBqasJJ^m5%M)e'=5iuGCJ5AZ=Rhh&S&Blt^P;iXe14'!NAdG=u+b90T.NuS0)?;Q^D)#JB5RoWe0ZV'r`ih&Pn#$OFE[W'G(getBX[`I2ElcYU%VUCBYKR?6C_R2V?6gkYkC<0!+BWhng#B\`\M2L*o>KW'd!Sd#R_;p+"d""creNF=$@Z&S'A-P:]NMDe3+o$^,m7YN#XH)]VJ/0V@%0Hj=4Q@[8Ck%#+F(Vg5,/=RjK>6qZrPb51:>6$&S[[!<.`oR.&;^q,M_#cFdi.rmdh2j^Wa*X\VbN)2*\4K7$TI6NE/[QboM?3lV%?_R.,4qh*oRGX!62S2E^Zc6Lf#`I4MBeaVB_>As!0Q$[I0;4.;-t"?VlP)RB$(&1c?7s6Nb/oTN()TfK8fB60I$8D8Q,<m(),kJt%;F]RNBH4EZf'A9FS3E.LV(Dhj@P-@96<'m>>+V[SWABNYU$a_sQ$BV$;A(kh0t4up1edrSP@$%Tj`ihM&3pYXpb!U=Ca#1+!*h:,%&l<7No#S`LKRu+5]0SJNKSa*q,\&nYONB9l@!.Pa_Q=Oj/#T5.:1_:%(S$kD/*ng%^BB349`e2u's#$(!]l^WON!ltD34Xd9[quE%,TrX>5mT^k6\qn*b+;P#)I=>8L1Cl!i[i^rN_;WS1fEWp/+B&@#XO%&V2O=e$M$fP<_9%s)r#E*g',ZFHsm2O_t:+Kr(mb=[g<=s%dnEUlg1:C$8V(F8[-tL8>DOLKHPFa+a:$t.BfgAP*!qWe/8,EDD.BFdXqa"*4rY+Mb-Y,;?sONrJs!D+EdZ`>/VlYc`\M5k-(lFm%Ra.EI=BTBS:ng3Z6*-3o1aA*HX[rc(KHRLp7Lc++CN.o?1uTnT.f_rON]*hT)*so--W(cAYU*l/!`=g5!QYQ1n^K.B\L#oDR5=qu%-2"A`0!l;p$O6K`l9muqE,$4V@r>>smg;og%[G>5U/>ok"Lctjf,,0QOG0SW5*DKKgd&1Knlpt2+WuF8"aT88_\H"hKuXT5l/WNc%#t?*Z1O:r+U*J'bK3VbXKM_r?>*^$qLN=qFhU23odcmT/*1N+PVUD.hi^APh6VX>tn#Lh.ac#)>_P:GAcOCI?3i#1O"OM1[-W]0J%(nXJ`!+q'/NCH7mGW&C3TZOL&+]^6Y9rgS#-Emp@_'^o@RfNQ_AJqJIYhGL&>bSoK/5o5M@l3SV*0eo#2^)-rmjj=ukYt-?<tNW(%h"@'k4B\"*JNSKpa`OsTk.LasjAYEl?OY=PTKnQ0V^cB\nuTVLL1jGa63T#saM<;CQBK^SCXa!t'P*h(iL+&n;eD#7hm*2*p_W=J%">hM>@9eP!;<5W]R-BN'8Ptli+AY76BO5-SFXB?cg3>Tg7:8bc74VmiK-n0-6#6[E:-ciTHU1bk"r8dH!5akda%;(F=9:7K>=q0i%cLTZ&M+<"$`e>Ol`c8A),489&/"(%9je..C>ZrgdF+PuigBgE=I_&@`ba1_iB5%QZrAt%N::h9lMFJ<oed-iF_Af&D&1V0ImI6p8%TN[gV8YT:dr-I:4;Eoo0E<T@LQ>AQ!Sakpc:^GAm)3]T8%2IYf14B8(%*jA=8bU$uRTr15`\TD2\I"cT<Hs#9)N"W2PfEg)F$`Ps%iYL?)Y/nEl+p1V\.OgNk0OtlKdV.Vl1nC&W8U)SJ\^:3W)_+YOTZH,WU@ur1d'Ac4A1GR[&u@dk8d5pVPT98t'BlA[k@ANeQ*Wdb%Wu9Wkluo+l@mOC7&nZj$`SciBg1md2>=mD;MIEL6;HcGW0I)[Y'I4.23+<\[i#D$C//r8<ZHNlM3hr\f>QDVk0\U%cQjpM3padBn%K#$<[Gu9kiDip*69JZ,%UaY)+JbEM9'_7bNZD6Xcl/E"_aBW29$*R4R;$`S@GfoC8PK70oS0R7A7$:Kg=O&\K^f_$!EiIF:0UO[(%2[3YH?R@*pEC?GLN(hXIGhVB;1*oO]$[<'6('j+5%5Gl.!MNH#9EH!X=Bi)V(gQc*q_P)[-D3,)om2ho-Xc$]jaBlbp-)RHT`^'P%Z[]/L_Qe3uRt/9nKKs:4@'[EYf\8UM4jJUJ).uiM$Ne^)"AUWpj/%o&)tc@f%JHqIV3YSa0T27H.]"!cZr.7:XurOFH>mOhV!A^R%oe)lqJV7E!X3tO(>Fl?i+QehS:+d9OH+96XOH#2H:16&N'E.84he/AGakDQQC#d!#XYYcb:3AhLi4)Il_]^a$cBRfFVu8n"!Cj7e%%W0p/[Ycbs9o=T8BM1[_Z5E\DTQ%TN.E0K"*!He!T<m7E1Il_C<1i>rc4Nu(]UjX>\s#b-GrK'-bc8$mUCN>MCM?#2YXQEtk<PIK%!\MJ"jE-1]JR!pfWn31@a?j*8>9MjU$r83kB@;sfUki_Ne^2#<MbC+OTW0!6A3(h&i,UeT5U,;qH'Dj]#&ol@"=bXPH4ti\gXF)J%TIpT+KQ<g#b2ELu\Ni@$+`qfSn_P(iG:JkUcm]7Hq'K(c"$f=.*7g123WoI;jE>6bhaW5CSc_#1k[BH&SQYOM4>98]a@gk_W0B=I%#E`\e:ju:B3Kn;.74/`<aHDMM.#m^eff2m==R$6+a2l6(^bWZ#eH%]IFhrVVAtsn]<>d55Yn\LqKKs$6N5eCX_MT,0c8E8;81E'1%?:tM65)2I(MP_W'=Sk]S>oKaiB-`4jne>2_X,Y)WE;[teC$*i%F?X:"V[_r@pWg<W^J^=TeJ3eH<*T^+LEQf%86FjsMHgR);d4mp%1lsl=.&Te96oSb"1e<jlQ,$\H"lTq%$#Re<:9IY$;DC/t&^"F%2P2`kVJttI8Wl+C$f-=a@n?\_WbHO.5Zd2(G)JhEY.7.b\-W<V%EscF1&P1;MPsV]3\"$<><:K0^Xq2f(?IPkf*?8`@^<EKQb##ZA14.IV(h5r6$L)f879c(0)[S)@K0r9]Lib[^!?aThiFVfj[r_gE%/s/gVm=^g7P).?HL/-h;8Ot2:"JdiC=P6GC",eZ!AD&\sR:lT?7"8A+*0lM5$-,4nT,.l./Q42DJqYQT;PtF"-hI.(:7-,YIM2_=%f8:nKJlu[+aRbcp#H\HcY'>Me7&G<X<6EceEmfelL')l_ak6ZSf06-X8uf-u8!G>OY"f%Ee:;dn"<jGjM9+l90Y'2$_n%+Aj(PDc%`o_SnQs)p+Us=$J:b"cOl:RspnNsn?^h!Y7;jk<TH#8EiFJ`!VjVc+Z/uODC7Z:!!+ECI5!#:co`DZVclSrH$Mp2"@jJl(>pW1_/%345TIgrPf[]IZs:)1b4j$)H`s"?'=N)jgHE"nu\j`Xs&6?^]=VjMI^[hO/o>;SIZ\S.e^rSrqHH'm6K44',F8?#HUh/sqnlJL_)0%<Ls8UEh"AAC58>)3Wu\LPQU*J-84LE'*9Y2QRVF;7:8R+6h-$@PjEuOpaBPm>3;!7,59]WI/!`!?q+]F9P*BLQ)>n#.PBBs&SNuX%"+QJn#!uQm(4i=Q%@9ZjORI26@rc?[>9j@k'dU&oaOdBkfML.C>kTc!k9_]C:>&Mr`uL";4$?qDk:1-g343mf2MBRO"G6"eF4m[k%g*=,+(+J1`K\f$L`T;A+jA&aHA981[eaIdOP;5F)q8-+,KP-Sp`_4F0c\:7GEjEO'<oV5S-?D8'Gu-%_EZN!i0%*Y'gI"hXaEMXb%hfu#4-)dmJ4=!S]h6H$k>V)n_EnS4%`3:)SnEBUDQENj1-M_N>V$]=?:Hi5o7O^=mZ]Yn^(ZeF6%^%4RUu]'aQ=/@/L6MLPF'YRS%P2\I&1g%mmANWbt88/;G)Tg,nEE@f_\>$o+"d0gUP#Br,"k=]!&X5tM9r\%LRF0Y'W@[9R;8mT^7;SB%1U\]C'lkET,Do=ULbrLU%CN<E1`J2I'($KceTZm@]?=YG,>UBdI12O#_-<HR/%113H\Xd_/s/2YO4&7CpB,dp#2A><h(4eL+2-,i90T<kA_!r7Q'r?RLM-8%2%F.?&2;b0!Yc)'>6?S>:bdle!L-k+YaGfNg5>mVuO:M'22804c^,"",41*W':75238fU>]);`lh9YuD8VJNVO3^rLY>Pd@l:7HrT.%jQ]&mM1_+-,K]#j&cudHP!LiuD%1R^\c>/r@LCtD>g(N131(p[Ne\&X^/iol%7Xt2[Xs5W>Y;8ORkD+B9<X;OW3Y!MTXC[+(hU(I%-*^Q6jYQ#Hr>bVh3IaZ`$[!(aRI$er$D<i8=BZWKc&#t=ZssNtAePqlQVoA:O^9<]JFR^apERnbbi`:mS(ZkdGa>OYON<<LkNf%E%8hL/9?D>*G#c9"00FaUL`DhmTK9YoOo6H<dFmE$ioHO#KD]_S:>$@Ml4\P=tYK3K!'#.&:JZ:+j7p9K(@OkSq$0\@hBESqLRI)hk%3H/q3/0eXqijk]*Vmg=Of("0PCKN]>(/ST,VAD@6i5P(V+K`f,c\a2gSDsAB3G5Lair#9.C7/tA+U#kM]JuiJ``pkhda>$VVgV\.%9B^JE[4;*i#S`H)=5mBr8T`)`Atq9g!_)u1T<Q=kA58?6#nN8_/b=\C&M01k@Wb9DkAVQ,mfG5."@5M_/=j8g]A9G9>LN&;bmHmK%E&7X\C^aM0o6UiK$qOH!oNMSRi]<=I_d-=#YdY@aPbu0RV8OTbh!5&F<#0Pg\1^j$0fnH>WI@MU=7X=r79Og+A?1O%k,iKgcY-hR%Y"D8)N3[qTY)u@7O=B]JQ\AjB?tr?':;VF23Qm6leh@MoJ2U&jF:Uc3PKI4%OE@ER?r%@ZVqTFP^uoH6d_CC3$n%=r#=;fp7e:.0%+bHf08EL5@o6N\9df,8P@AHti&X5SYGi#e_B8+`]&Y)H#@g3i?(jSsq,"k?IWVdrOlkMI/#WhMg.VC)d<%s\i7J1n!;+s67<R\`&%W^,JMbon*mMT(8'1gP@q-;7"c4%JFj0I=KTYu2SN!FnB\J0Tq]9Zc.1BJ^&eEM[Uf':pFFk%b@AEYAU7T1eZiD[9^]2F([C)?BBZ%9/`E993-pk3(\nU!7!H9n_BJHcB6q^0c*7KP"bNuD)04S:6/YGA9^^Q3Z/`J1I94NNoQNS^iV2bGD_1k-+fR;8#1su+75\=.80?6%'R#FC_'pQIZ\PKbMlr>.q,gUrHr5R<a_gN5OK@_Q(3KW&Sr2&\\'9@/D'fRWpSt<]'7ut.7Ac7=!/n=Vj0fPeUEX!hmuXNE2n]`9%J#"Y1-M.ED?I2C]#/ug[S*qfs9%L(cksBia;RIqE"kmEV"<s5Td?/D%9,8Tr2$FiQ""MbO'D[&N.O<lJZ@u],$B9gtqs]_=)F:qj%1]\K9j<AM1nQbB4d0C.H=n83E[<_gPfj9;Xr[mCHV+N\K;OMB/nUXA8HP'AJgmuMD"ZkOiK\?8qk?;q3nLC4I`1[6TLk=).@RNMi%$ZI1D0`a9\b2b\:_LV`VMYJH<<$st%`Gij0cgR&D&MJ(SGuWY_H995gMhfm&4Z,.gX>8I3Osr#KJ6(*!%`U-D<+S^O3,)V$q75SR%V&PRqb:JaLa.<ksMF:?SQ\oFlq19j9&]b?]S.u<7^="@J/[c3aa^Hri;\I`(TA:e=c+u>.8c8A=S^44IEAL!=27-ARJdGBlU5L9#%M-"U`TMmE-2C_GJ75-tZUW1ePSZkdZ+TTG_<W_Er<#lumEaQ2mVG,>g40bMA!TU(5<&uu_6U6R"M^P7t$8@l*8.9c`"NG?nV2<G\%Z]<'4q*H*l!*+3g0o[ab<PIXO:@'4X.<<QFWaTT,=]X4tJ'eVt9]XFiZHh,,nZm_u%'l9M)BS`M'\Sul/CO3Ol$\YU'WeYi%Kk'i%.lVn'-FL4&J0HQ/,[J-B9p57M$[I\PKtqN'/+b9t:\Qjp!k_#0"lLAGU7CZP/=['-WCkMm?Sj!Jen)M<38_DXP+5:%1^R\d?B$r[%q,/qB0ci<JAXTfGDX6kjV/g3i8ti.8)%5[;-FHk7'm&._!9AD5=Rr.`_G%[7O:j3VSLXFhdO(H=$A_Sa9_L?Hj?qn&%&pAZF@%;o%jUK3B%o_=,WNF6SP%;o@&/4\nPQR2V7e8o0g7C%BQc^;h%8/)9PgGQqMf>Q<.@Z=?P`Qd/Zoo]9.n9l&MA]un-kPH3!JZ1a-BSkI%l#rbrcnQ_Td`"0PJP(5=Fb]`RR8Adp+t(G_VbObb=/F(e."B<0MFE&0MG/Y*.U*2018e*/jA![!;Q7qaL'<[*<DK+._*5@\<m\BA%Q"tn3,Uc;@IA\DhOE7)S+X8/'i^u1k8Y'R&8uQ]p@!$R#dTu0aPBnF=Al]^sUe,00!_Q3:M(ou8#XkgqYRpE^688!kX[c5#LPFe"%b"P\a9iqCa>jmi9JJ&M!As9MF=[hM?:u@I/gAn9$#)tPM09*+A-Xinb*)l/oZI4]PHQH%;g0Clfh^KcQ<39r!!89ag9_tb;\C<Rs%5@rls5H0`,\WYTGWuP>s6TBc>(,_CJ#&tIfeIW&.WLX5NUW7/\$seaUTSfbCUnBuO(8^BQPTgZi71uRIKeIJR`[!E.Gj1MoP8"=<%I%PI\1#)l2SQ!Xe,:?+TX>(-4P:H]/-C2;ac#Y2?:1mB0!Qu7A8]Kp/JdpE=E,9::Atdk=`f.\=jGm-V$aC%.O/6qm\f!cL-fZW8%aep',cqk'QJXB?$$oaf2ZSpF4"S7LGHSJ5L_PF(Z6E<Z;JUo-sDqLe.)3>WqDc@CJ>X!!+U.B`#>?$9;FMc-8UogiL`C3;u9!fe?%1/ZsY4"5Sq/HRC"e"A"a9FeCrFFocP?VNPO)T0H)8;oiL(ee:.2'=28""X;tmc##ZdMZcsi`H9Qb_#Ab5]Ti:bEKn%3Am*9O>O#d%q48cA]qg.BanHL;']@3<L8!j(l)r-ZE\t$\X\bOO'AO"MU;;]8PdtI\,QEV`h#04tV9t"R$-[F%D*0"-XGi>$82u-0R'T[FgBcV(%;QHd[5LH*%]S"obYDCVK9Y0GZ#]PBYM`Jp=(kL"2#>J!jdtqUM$-m`XO!#8;E9-Cg9hQqY=:h-)/p0#8@jX#8MGBTS_:h4pnANMH%.8/'PG.FImo:aBp9:OB"NKU,r7Uf*G(4rq@%;)iO7*5@,(qY_QHqIq7AFkM0Ypl(g2I1Eog<rhg&r3H[n0F!'8n*)gY;&_//'tC3%.?#7/VG*[#9*h^E:g$]`$9mrF"DIElPfOYQ=M-:M[LD;BY*#WtROW4N[!36Y"B)VOi]TF:8B9,d'WY+_LP0Kpp4/gG!sXZ+6Hc*>%f*]q^!DKql/Ts=109K'[&1T0KZ3p[gU-o%.$,==%7dEGH0kmRQQgXYV^ln2p.;1/Y^9SNn5nt!1>Tr+4@YGqf,Y;S:)m]j--mh+7%``1`(%/Jq_56pGFUb=mM]BEHU2Z9As'\B^cVuR5-AiZ8>,qMJ-SYV[$0k:F1Ct'r!Bb7SFZ5X4l"qWFGPG4_/[/&&WCA\`$9DIca%?-jf%,@*qKCQRS1[Ua)N/\e[G4tJ;l![-4Bjhc*V'kScFoKe99A=7)p/67A8cl#@n?^c@))S\9tSP`.F`PfMJ"$GJS^j$I^'K0/X%P.jj@:%lH.g]6(EeK#Q\N[B1H0FbLInX<G#QDR.3b*njX#$]#C/CnC55+gU2e5:Jr,L1nR:_F#t(<An/.&9uX#r\6<:_FH-S8hDB%Am%**nad_-JJ@$rPqt6HQ*6Bo\I)UX8"<$D[#>#nPc'ac!l/WuV_@>nKk<.iMG$9l]XUAF;>HQ;R;O:\Yg>uXT8Tu=f#4C%]@WF.%BTj")cp,j6,*o1UM#puH?pVo_iIT,FJu%siFS;B+4OfOV%L3`Z>b.l^!GN;e&n>)GW%o<,;k/@,>_+NU;2[*XiPZjS!g9::4H@H8%n?q1:=f;niUrCu6$%aP_^^VW0"\npaF1S-_:s"+7<egsH"XhK@d=`+-/]_[WRiaW?h0;Y\T#<-:a]W*KQ3gRHD*qBW$kYa+o#[DR%V'D0G,1L$I+`&;Q#qjh<=@L3S1qPeSPt@qU*hAjr_@hs!D!=lhmpQ0;>>d;Qb5%6V),.k'M;K1#--YBqlNk_6@Bu+1WFW`u<`*VF%PSAtLgNJALYL6Kf;]`QG_`fdJ%LJSf58;s5++\OT,k5q6!7X$pN8#Ne<-pY?;fj/tLbnno#h=SfPGONmh,>>X:'n!F@YY6[M(@Bp%3&H4"ZRT2%oYn"u,aZMI$?L3IW1m.Fj.clOoNl2sk_sZjD)HaaQ).gIVhB29`gt6'?;aJQ'_r"7U_:LG9ttdNNB\^&RXC,:J[t2T%jf9%!-n*mqRBM(%F<sk=OtMfpG6l]?QO$$W:DMO8d%fWH=_,;"I(SL=b9f_VKbrH/'c/7t^uV'H6#Vm&9tUKlTBcN?A^@;8;n4"_%YJg_LNae>s^$dWY[&Ln*VsiH0r+R3"91e_0n"2'?XNO,k$kqtn?<G@GAQXC9O@_io")s2dT5eoH*BkiDT9@([T+'1K>aJ7&8sR&Z%HsJq6jGrl;is:m[ZG]j8h]7f;WWGooHl[_@*QQ/"9>9%bfmFqJhD3.B<OF=.3t;p)9X2[r[#C;79ejVHdETQY%Sd6M\u=VmL/+To%b9_^\DP"`6AcONWB53)6WKd@"9DX5Ieb-m*P+4)B2$!sGVh'\pj"Af3$XJEZeO'te@]9tD'?Of/M++QqJdmu<1IN^o;+:%g6=B!W%>LB!d6PL4nqmi56.s/MWO)?rhG^F9/HHP*R`O1)8i<WdC$F=ig"b`cj)N*q[FT>.4@0>=%S3Rn&WjFpF'=ao$csofZD78H,Eh,EF%2iM:J\,\:*]<Lq,4XbtMrJUo`<89lC9W;!iMa3m"19l?`hN1;J7UQOOWkca;V;,d\JVr?p-u*5fkc,EmI.ed3Jeb1>ds/Nm8qV/d%\r_rP\O>ud%W)Qi-m5??Y<=%/Zt27SJe96N;DDNd+!hs['V3"V(8i,)A,-t4r0mP'_-nUr:d/5eLH![(;XpTXb`Cro;@Nk"F&ah(%L\f8#!1V1*i#30<m6Z_9bMr,aN?H(h[?\9F0ckOt,`Lm'AQKAFX>m#5_L)LsIAma-posmk^8c]0/suR1o-JJb>_K<(eLUgY'f/A!%gN\nnc(*!49_o+#.m@j(O]NNrV"e:R4_T_192XmW@TQe?XGa\YLFB*5*Uc-k^.'\F3o2l#<0tA.lJia/MF2$icengLF9a+fdo%oK%bSR*;e"r^^<N.OE\06gDH)O?^71bA0_Vh6rANW%H5U5O1$B"ogW)V^9_Iu<gi;d.-hZq3nm25B21<J1Q\Q30I"N>NQ".3e9.Ncn@%WXMbX7*HI.i:hI0YfJ*Qfb?56[3./1`2U^ij4_BQl_9\!QAQ_-fQ6nhN\=/JMbeU4VcL\`E&EVJ:6!DQ#)<?,T59G#k_qW:/(-jr%VYp7q?t6)J=4g5-%g\rr_gTqoj!%k"!7r)l](]Rm+tT4`1q![[:FmNPcNoY=2k0@d&l@U[O\N;#=%@I9I.4p3$3hGkh%H*C*4XSq%HO"Y2MG4msD2lPda<f#2J@\^&F,43b]6(#G.KLuQ&?jRS#c)Et.j\r#L4IE]F0'eWJEjq:mf1=GhFD6*J1LOYI./1@B)a</C&X@C%hK(UEh0\H&K5:JE$I5lFH/*r$`NROt13fiA%$qHu<DoJ,#qQXp6_?"J+TA-f\:O,)$P.ebW7qUEbbFb\iNr8R8OuX.HXDA%"[@T\%YsD1!>7Fp/P;&4c.WGD](m1g\"j5bePYsbrO;@94f6P7U:e@h4i2q_#0L9-),"i=-9tQeS!>GeWn*kl3(-^.lXT95g6$.\^-4^fD%Vj1%;*O1bQ@##ke;lN\1YL,'NE%?+S.aS-C\$_oP6jdC:06Do?Wi+s:2o$0d^;Y`g;`m8`!(L/Xr<l>$](TWfO.S3p5SP=p+c,"t%;?Lc)qCl2>ecOJo5oH2l/[4r.CL@Y;ICnhKec_"+Hl>gqU0sr7%p!3Y@HQ@>j"`$H=9.r#b4tP3bC,_S#f,.c4k*L\_u$^)JE?e-%^dMlCCGDRBdFV//6r@^c/snbJ-XUE=`_Ah4ebE[d"F;3LfK*PIq#$A=$*<'+3A'%@0fTra(:*iHXa1Pd!=4N3iGY9i":9^Gl(c7T%N?F'W7ZIM=%jHs\_?+UW%$^`J+=n'D"dt%u4I,.ui?a4qMsgS=XUg8n8/7e^E)UhGo\c=:01QeqX=bc;e=FRSPf:ZB1AeJ55+,iQ%P0'$NFdd]EcJ0Ys_>tY#'L_h^^kX4gc\[7MSih]4%$j+P2;CsJFJ;"2Be@8=+F>g5*`EpnEtMm9BEBPhSDMb`FpU,rmASh]4h/<O%`MLtZIn1X+3fI-g6h6nuiJR+'+i0>[Ru$or"F-\qQA,OIC')FOO-^(T5RXP=j["m!GN/RG\tu&#pu,ARrM&%_pR:LJV54<T#"8:'%_QtJ3_HD2lrT<'NZPCh<gs/,7G8>)2Hb/mOZeL#&lcjaZfkK'Ls.&aiV/ktl_cAi]=pee_Rl`"2`pr`EXbGN1h/7)&7K&n4g?gfP%n6Aq15Ap4QBCN+]5=Z0-G)\;dGeJ-E4!8A.pUBt!eiHB^%N<UjKAJ'%^fZ1hTm(6qCFVjEWO^bF(dA:BG4&jBIJdN]F`^IW^rMJ2%\N>6Wd,s-(0Yo7:4eD;\07`W=c6&$lDln*/h@69_F\X0f(s$%=b-0REhXU@aoei>\Abg!:)#g5j3LdfuO_h^pm`nD)dB5FJ%R.Q^%DZ#1`!lcs<"Pq)f8S\A6:$p5u"dbVu4,TT_EFZ?0q"#c4g&qgEd/;\>,fU=mI<,+qhQ-V*Qp='(gRe:=g7@V;ZWB@c4Vf8'Nm1lf%>E]JpYONmDitTr;)5N<.du@Gh"@5?D)=r=&$drjP?&Hp)UKd&,]&VD9BK;X3X4][R/!UP^BQW\7Dg+sfou=memHC3GT3re*N8k!6%6FClZe2_F?-J8`5K7IV>NU?W:H=O.a13],J%b!fUPF=R,F,+Jt0`A2-hWraErRlMJBcbT+VQ"O&`^bVmb[VPEWTP>Oggce"9QQ8/%mP.ugO%EUaO(jbS9Y\WTf(c;ng-2J&G!=1A6.;!a?-d4/g+T(FZ-t`o9odJ[;4b.!N&uDQh)9Cfpi14r^%#11#*_ej[?b$(R&YU;%4#oKBf%Oo;F4rGhY+<8>j$rJGU1\.dN9@:u#pe9nFS_lH'.B+$MpNjcM:SZ8[%GBe0LHe'r.4S38U%@=Df"$@XU1_5rN4D:MiNi:%p#d^#/\hc$TeF&!cC+ME3&m"-=RWUXh)h5=:A6opqYHh@3%QpKJ*1PD!!;b_ZteE3Vg[@$[3o@ciAWCI'Q)iLD>\h3BfA4g>f@Yg%AE='Z-N%NC[/>.G4T+pt>VeMLn^Hc)nqj7CbB]C\`<pk;Bsr@m'*X$&:;F!:N>lgE"n<"(,aUuS?^>+!kCj;@2Pr\f?VS4pnN#"p%C"_"r7Jb'Rm&SRA6^nIfAU?(Fbu:a9)%oKJDR4P+f]Z%KUbrg;C%<9-[6eT?;t4i/g-8o@1XbMl!BIt'a9s,=!hjpD5d3qnRWVmo%4.bPHKZU.K%!gRjmPePAB#kCK=I3Bpg&H@$bk"F*Xk($&q'>l9jHEP)S^puRdJ32*)"mMJPN_Ne0r6V>9:^dO1s&5%I#0Tl7#Ija%-]KL%l5fiZAudi+J_NjXq0[I8M/p)6gH:lh'MuCj&"ub1l.P;B*HYJUrUF?4H7](&da=sm+C0RSTXd=V14_7u6Ph#&AiO.G!nsPY%&1u.GEp"\_<E$VEB.c@<o$e?AN7V7^.sWJg\C3'UfE>g(N)`3*cQ/UF9'Ak=o!FurcE"IQ9PL#??<gZj$'XU,.#WOer!90$=,a&*%l?1&k\pA[D>%Up'^)VWY;E^tdgPsd-UXc;='WW("j89Fu`ZIKop99;/\1fM>hE3u:e`r.37_AE%Fu2Rdiij1pNBcp$C<qK3kb$#E%:Ythelo=%/$&fO4GQ+mbL@8iGJG/6ZN"];?diJXk6;?7aZSqe>8ueHPhVRmFrcm.pTCXFl4O\%F9i*nHQ1&ITQ<gjV=dm`EZdkKm%Z__dFX/Slnd%qTU"IE2c7d#9lebW8BBD`%P54@%5P6lolnD$O^D+(.ClqhH/]?O[RY6bWYU?24&Ef:e7V%HS>cQ_adLXk:0$H:n/%[rXOFIZLT`+MQL"JB@*LPJ`S?:AN*!;/1IWhTGW,^B<@URNVO"R[s<]>0V5c2SO^7?>J)`Fs]`k0=@=e,D9B9!lqck@HMs>h)q3\%l+^+3ret/"<M/5,L^@aeH=p^/c-mdf0ENq(K=J-nAUT<^+=<b0l6Xbfr.`c*=")<e,/baqH!8*Zo0eB`;]Fc!N%%PUW6]E,`!!GC%]sa:r>>K/]`%9*[Gp:0h&`Pnhk#*NmnB7:,;4lf8L^@aeIa'iJKXdu5jU<M'9L/LIF8e96idXLPR-IV+fu`9A6jQJupmoA3]I(`e%S'UtuTD-N*00[-*D-YuIHt1mqit(JG(5WQ/1+"qA)Wrk]TeSiDEnW1n\7AqPrN+1!joXga!G1BpC;pG,p_B;,W4@GI4TVt<%=nJR%##k]EIQ>?qgjY]MVopT^rbn6$QUj6`Xf&^S\r>XJI*D->9:gXZNg,u^Fa^tk-J]j=s5XY-5O/%Sq7jL.1ooj1\R0'D0.0?k.Q'Bh%<6E6'?8V\"ZsL+Ss*U3mHG9"Lr5e41Z>S^,F6]S&1NHJ!YOE:C.U7aYZV(#M9)'G+IjI4Ub^L0OT:hR"IMKp$.ZVgobW,PWZhJDq%gUiHYB)D5(9pU(mW);l_:U51:9eW1!D14@_W*rr\eJuV"E&ktk;>e&,3A/8@TDX.rBsClc-Mk==Zs'4<;*X_6g0a#i=*%/dRZb))%46)dD'KsPShktpUSBCI[G1?,ok9Nu1X#la#R.bTm0Ch-ro="M8:A`)\U._=sLGn=&MH#a1Qf(oC>.<0H3,J46fZ>opS0kX1VH,O5%kH'^Xd/NQ%DF!t:V*25@hujF,>"2P<!TZ\ZeDj+bm7=][\sdc42EP@AcdO=ADir8EY3%*t;gDh4_tO/V:Fo#^b@NZ<N#N8P/-T7G%D"GnI.HdUno2Eg-.HUJlEdgV@"Wn;CT2Ns1.;'p_3Bs>[0o5WSjo8l*O'dm1mTqTa[O8`_\?GS91Y4jN<ibh+m$Lu$rI\F$^/Tk,%rPjn5Yl2+nCU^j`G;@"4%&R&*O,j_/&?D@FE&ZJaLuG$DVKPt:?Enn:_rRfWXYd9rMQjh7o5N,H#k4,XDPPTc$#J9s$1;AG^U*K4%ZdW[]<k=:HPtng>4uG_l96$j)LFMD+VQ\o/:LMr$K2(rFdlc8>%lSR-djm<9:QZQtnAf&OJl:(hfC<bV:hp#I*hN"!q[-;JB2c\U%MfPmXUT_'/3p*.L,hA12[=rpEL=hr%Z=llb`\1\tjnPcO&)+@:.FRp&gp%qS4)))L%iYtmE<2*W`8fSHq^C*PT/3Y0NHsmMgjKil%<2A.M"u9Wn@ii7La"HMZMg=Yu*kRf[0'9EsH0f!0@Mc.&]_knlEh8%m^,-;Rk[VhEm,_-Uop;]tJ*%,F5DQ_F^&W$d9CaGYGb*EK%r)U/uU=MFa^b\>El*==L:RlJb]n0sMC?fN8`;a!Wg/$T5bY.Kh]'OHB013<eI^RDL.C7>V;5[Hgc1'7=',u6rX39YWb07LNS"0Z?%a`Y_THdqX;A]FF,bu`&h55qd7:ttAbRX[0Re1o57'eJsni2JFa`a<[A0+:$7J[)\.gunddh8\knS2KuoAGjL+G/o)N0XdB=dSCP@%A^^Um!7EO@9uYH=Ie^ZdHiK#;5P=@:3C`eNXM\WHW9`4LRUn^>9=?gG#nIpfjeq0_k9%W?'9(pLF*EeC+Dc5h@jjIf)86f,M<j[>%0nE&?&LPcuHIL?Q0GE*\s3)\go16[3)MFMK!iF$G]o8'R2nP3&#tU[Y!p5VqGpHc=$+L[B0TQ?1>pKFJcX(IOgo.4F53M+&UZZ3l%>H@L5X_43e"I[U#X`8DJ\BfFGobidL9L/L)S(MP&r%/^H[H#8=\+/WQUKsM-hB$?ZrisB2Bk6Up_rkG1rAD^Y%HY%]cXL6:Z0L,f%cF8/F?N%5:D)k8ic!E83P:T42j&qPuQf7@sq/mnQlU8I7]O:m71:+HH9VPng\t-_F[X;n6mK8h`LGGIA0(M&fYBlVX\Smf(T,m0=%-LbS-PF2V^+`9"09dj?p@e/f[]5uC-Jom<qB(L?^:,UcZjQkM5\E)*[])8'RS9aaGZkn->nq\V1`Ur=*'k7-ZBsi:D&20M\.H[$d%;n4HG09<%jc;9slpc4;n1.7hhV$fYOcN'B$..i`lEp"LmggcdFO(fd]4SP9+51A;"\e(KJ]PTCtRH?]^gh6IJPBCtM]Vb5ljtl-V%N??O&Bpq+XF/Na?1sMSgbMkAC9Aq^%15b=?Rbi3K]DLF<"JTpO4f0MhpR.o,B:<LB/t^`P=ZPTNm\\0,Da3jFe;s?ajq[XR.'1ap%0V3itI2Qr3R,8oD^G4[(MP:(K`dmYUe=>aoX&CNu-6n$*7F#3ipe9pN\9E+"[JIq/8cj-qC@u3-T0&6iBodW@ZmH'FA$ZQt,+C9j%);67Snc#r]D"!S2W2D:A/G<H,]J?l<fa/D9Zn(]Mr1;F5'SYS2mU!$PfWNgQdM.,3c^g7`*DB?b373NB97n.!J*t4Cpg\s*W_:?=%-\+RcG1uIR`Y3S:K.fpcW_C*,r5*p4eF?S.fEij+?fP8rpmTD!C&&X\TSL_\C3BMmq9Pi[b1[a2[/A^rRKX)bF2!/bfB3sOcY9X2%2\q2+\:F5FM9!$opJIjEpmc==Dp0f!$aWst#0Ye0aY[hocC@1Yj\k?[b7a?Y,h]Z!pSID*_"Ro3X,j/9.8;n2\H!p;iA]2_?7=@8%c/-9FA!/pZB0nRP*1rg/_)/tei$Y2rj$f&Y8[8aP=FnpR+Y'[GS5.L.bJblnY3*=^92GFiQd'[+f<eAP<hE)ok=r!@Rs8jFXX]fJ%o&m#h\lIGM6rE,SiL5dLp^1JG#%mo$&MQRFIsGo[)109<$sBHon8cRmoSoP;nM0&!D(AO3M@XJ'ebK"6W><@`_XO0p^G9?d+QKX3%fT"UUq`l6X=-(ZuH^Z*ho,3F,lKu>g\FfEpNAQVVs)M*h>mfsY^GoVi2TYJ_=O=N6hSc&?b58"Q0"o#)iMN"n_1rRL/A\A[EM;T-%ajKr$!d9GsO<up3Vga-Aio,'+MdM&HIXd[%RTb?0:[hN;\Oh.^>kN!<dG8V^00p$*@O1BKXC\TD1Vq/13cHGrj5]`NQu==1bk3j-%\Ee?6g@^dg,S_p4-S='[X'A\3H8t)aF6+]sH,\4c7AVD#QNBc3?Zg/Oj1PaO6_>Ek#23"'q/Y+^QR.+M\V^5_)`maFZ[<fWp^/M_%1T4>YXfnt>B?-eB9K>')N&WV=H!d?<chcYBip(%!5&@TMo9VrIU]L&F=f;3BTSV3Z/1'dhA&$\L5?N/R"A`9KntL7>rr"s.,[oZc%l>C74;-E4V*$8.Of%RP17^qs$],QPfqcP4.XO^RWk'iK`f^`%?e%/i4Q)!2VjX#;-iV%6Fl]n<#C],pUZestb/1X4&7<md:R+8J/%'CN]6&]GXT2d<]H(t9/:mI9_CIP@K*]tN.e4`A*6oa^hEW?0R#ohInPCK6ZMRuPdhd67B'p#]W+h4dbk%\c(YkdF!(ERLmMC31E(%Y?.#'%g8coj+&f,8Y_(Om#m*,*p%Oc%(]_ih$/&[XdIiXq?PH$DHF]iGg$i<>bSJ.nG2_7/.N5RRY96,?BCp4CtWOb?2/p6%C>PV%)eXi+gl=2j=gWY"ac;9D@bkJ0ET(njcPiFSF[c!'anbG`Bc.a=6QG%gNUO5K#@@ffUdZ84!5O(%MuTOl1]FTRk4GffQ6ieG)?(5F%@MP&VPOui+/OWM'<Wc]`Ish/Iqk*T'\5)WtTi3!o>V`l7dpTr1*"T2ilF9sNY;P1cjS8D4`[Fe.(#gb1#+qIiZ*b%mPTMR6rh80D%e;f"]9C1C0?kUt@mJ:TP*hEP/"_QJ3oC/^/TI-c2I%eWfKR_k/!oW/A>;k>ie-\FA(?pTrg4G!adVJ59Z:QQ'5e,b+7#944=5L&3%'R?2:rX"':#s\CpTMN?::Fkm`AX2'OIeRk+G.P;)4'%FG"/]VMGaOS%FCV647BP)GE[d%4`D.8&eP,Hl"E0fh5F<!j.@*-W7Nm?7%hS0J;+8<A:-n7n+d/NIJ$\Rr&(\PmiY//*LM!F"%rg>J<:GZ5@a/,UH%[;ne9Ig30S95HNYZbcG&>1VR,Sm(I=J^<)g<4j%h[f/^%?!4dP$Te1$fE[`oE&7+uIK:)%L#K9Im^.O:&.*1rP?Xei9VFPa:$fq)N04@'OMkMkW=2R."WSj=:WpV>aJ_gu'/0d\XC]b2KWtM;%gaU?F0t;b^qLC>C^D9:8m]$eX?!6OuN'U$L,Tp,REI6o,=lqRaf!GdQqG^d@m\$Vb63/H0oF"UcD=CEhY]#k6H^cW$Uj(7ZM(l(@%O6i[TNH='kF)dA2&r+N<`_OUr*FXu9/UiAu"bQseXKiW@<Mler60a@7koIDiXYd9n0;LH086trCUje;Sea;fo.2\csd7sWSS88kK%'#nBC1Qe6!E_aS6p,3<n=GU($e@M)If$t22.s"J_ppO%>UU&7EN8bXc13G>H"6^N9,Ok.ZpikVW"s0V$,^5)6D:nQ%&Zce;_'i`m%.eo]O$74/0c/90EAmo-k,m)Y*+g0YMrTr#-!%1Th`o9GtnqYE,9OVSnB!X1Ka>A``,81+omN^--p[`%t,8<dZRH$2l>e>fNRt*'t%%E>K1_pBTDJ@HQ'6^pUP=G*I]8/762SLjLon-#XbkTE9fnDe3o:0Ja9MVrL#!TLWJ_uD)M<gl,&@=b65\LTn[SudmFab8brJDYEX%D;ojo@5>aO&$#eBcXNuC7h-@flt+kjHi4IQ=+U1,N8)E8'6jRT#o:Gd9U.&;,[`9S!&=XtPW5aoXnj*sJ2E1C(V90$bo@8R5;Jg-%EBmZI8VQSg!6M;MalO^rWF<>+&!/<;nOZ5j-Cg+6d#J2t(%uA$l+f>,DW.fr;14;B.+"@_+`CaO9V:hCKB(5\m?/eG$rBG7U:"#n%(_rb^GEMtE.-&mDYWmE',]<L62#%?'dR(oa&#2c[aFaCb1;_M3!fg3!+K:DMf!LD$b4YMVs+hF^n[(Xl8j%id,b<t8Q3sc&>\J[2%DPNNDgngb[<PrWC%nMWu.jH5Z`-3s^S;fFN(f56;5tIYRPmJ(W2'<8H)R0&:M<fYC[L]>4fM<&G,,uoN'R#]V_;/+*6`8>AC]Z"+%FTMe#k'd1:4@'_'Ko6ngL#q95VZmMs-;JNJaV"]+.L2Q$j5HXBXGDbCO5C/5OC[iHdmnJ3=gV7sN<8qWD.Kq+;n,3T.^OrIp.L!g%8%9t`0T>ls.aDicLP'm^nhY<)Op-]MU:ChLl_h;^!D8_e!lPu(QDlhQeo?EOO0c>*/aX:C(soB9aNcaRkMh5HFm\'9"&DH[#FTDf%=rJIhG?-4'&EsX"^!QI+X:Yd=8Smb8k`>m_>^h2=;V3f=KG8+.YVeghOMg>dihP'r5@A4mcS.4r?]4pN3:I4:c$?;JG*FI+!@Ipk%R]`1F-o9nV5U)\HE>a!P84>Ef0)H^JI"`l-)^>Vt&Qcr*GtS?h0XXU.+)tM8;TFb@Z;DZB/eH>R;V06*I8=f]5uT/3?NgbO@s:h=%UqB_(@;*Es-sL*N"p.3X%Aq9:D(5<C.mHRQ"f#En2&q:`O\%YS/^rS&.n&f_9pQ<kLPa#iP`EK(/f8hbhM0L!!<SUWi,#3+P?BHC%2B%F?PB^&2aq"#FIY->&gU&"[fE40h,XCtRZreT9,mcAnD%7/_H.\(e?a>pS`5j,>]KAq[YhZ$!7OG3(N#[..NKNh-]]@fC,\Co!%@1?^D.L49f-.`hX#GqsA)dk?=fncV9#4$c%7hX%O\>b*b&f.!,Oq#8"UI9!aJr5U-#sA@F0@mEr:O`3("?X&D@pY17%)iT`K7=P7%i@I.Gro\6udfMB+YB6em%m1"Ud^n;7T,]cC^%GR4[]oPc2Z6pl'E9O(",=RK'>i^`V]NI(VKD>$ohg);r26'G/Uf\F3-4W-[B&]T%%tE-@a"-2q1.,8rO%\TVPT9Gr25@LadqlqbbK&1&LSeJm[i<"nE>ljC:q?8$M]H<>diNjt*LaAsooG)P[uEm-W9"h!rr7!1B:TSe%I[FeSRuj*t$0.(Pa][?]GQ+%UX$b>Dk$f06rT(K?3P8Hcp@\4Mc>a:g(dR6fd4m(3IeA,o4grN'4A!'l]C^@:dhHTX$f2*.X_*"4%A[,aHEr0FCeiJ5H#E9&(1_C%eQ5;'$-Q(:0k3gl?IDl,iiPc:?.JUEr63T;qbco*PdjGJTHoT9ZALkD62k4kH)ak&4\`huT.C.Oh%S2#tn:+qt9>E->Qo58W!C`6n2AGD]E;#=,HV2Wk\aMditU2RK2Z6q:`*c?/4LUFD]@YVmLbuWlK`dKC7DLJc0c:0oJO/l@JmPfI.%idp%/n`0:67Q:7jb^8P`[17SoDY5^MS;Gh3gj7*h>j&';4Db"@17,Z'pk&IO/"?&n'C=LA8;4-?n?L#)9Y'hMn(b6NY2+C"=[VLn%5NRN5*:>Y,+'5Kr\fD?ZPDjGDPpmg7;7EmhD&aWVs-dVGIEaEIW3C8Vjj0,oX4`u`#g?#@^e,M\&tE/WU0krI1c6]UA"Mehcucqp%l(Ua/D"MJS[GGVA.8<Kkru^L8ZASrhPO,bVj$(Y!Xjq+O^?Q]O.1g9@p9<*#WO6%jN_WcuGT4lbRkGq4:jTVN.<n5Y&*&1A+*1c1%Vf%'l:6$f.[J'SkD8/qnd5a6J9'qVh;Wi7OV:P&$FDBXf9)L)YKi`k:UraV2[S,`j2q#h'P/sTQg4.Y5[tBr%?pR4j?N^trkl0,2%]P@B#X).,\HaTDV+hu0Z=_4c?$FejT<pHgL;'5i?YC?cYp;8/M=L/15I;a4Ca1Xrdl*!Ri(T7hM?],`1T%1ppdFS,od63'`:[CH\%]G`FA?20@P05-K'h<+-\\83+6pJ0\&[HPf"=lOO&Yf6d4BOKi;p/.`S/oU.D%P#PN@<>7jX_,1Bl%KurDJ;]pC[GH7'!t.<a*A,'%/^*6S[Z@JM2c!U/>2(ueA.W0414TQLO?O\kh.SsOotn=FSU.CALMY$$q'^ZUgP-k1\rYId/^'2^6%Bi!4aSVl%ZYnlc:?<5Wl3GW%W@88Ha.tsN>E-B9XWb(+Rr9fWi4`85W1SrOiKV.hr6>)#4F6[BX$X\<o!#G8efDn8K2U?9%INK?2n"c^oe?=`LI]%-Wf:'F\DP^O%ouc=4+:"LhNaVj5A[sVjNE8IWn48^Oh*Tdlk@_/N[JgpcMN:A\;Dip9J`V4&^citZAq9Z"]lgUgP7"r`[-4E2nYjoRrjUAE;($!/%h!<uiFaJHj%PW<ZDaOf0Z5H@%8h=#bpIk]VZEt<\Z?Ie&6BtmpHjJ\<]dH<%n!M`+AQK5rF.`9"^btkYq&[jkA),"`RY19sUX6a+%/&/@?32lf+m$o9mqO)doZj]jo<!(b:=WI%!q,_JXF-t:"8WB>80lP02ib7+?\AEiGem#Yuiq*"erO1^qQd4<L@sYG5r-*H7UD[f3%!9JE>]uo)AHaiV2Gbgu^[sM;ZO-H$n2Qtl[^B[:]4`6j#QU.r#"I#jaCnL(\F]qU)S1KIC5g-l9H=<IdV9$.a<4/9lIk#6AqT&PP%/9i-l:6b@8G>DQSO<:A;Vn;H)qO7%Jo1AXsI%d43'!8C2qJ*]P4"Rio-><'sBK1X.1Y>'@&^$K_cF2:jc,a"m7ZFh*k*.;D3tS7O%"68,1ql&!2JJj^FhmN2S)nX@Y_og0BEMmr2eV0jI%=9IlfgLai5d/B<3h+,sTfm64+&lQ9.ipk:;E*hLanjk=IaU;=l&Bt$E3X+m%#OeNO0^cj4n](YW4Uu'`p2-boUY>,YT*Br=\3sfm@/$V1>akH1l:J1CBdN45W03Gdo"@HMH];lFo&s2J#=e,sV&:Tae6K4A@s6[)%@p_6r*JKb>DB>CV8d;(>p"P*\ZAr[*phE^jZah#Ys*'-K;X4!d]2S_H%.jmGjjAb!fuY9L5IK0trbI(""dZCLl0^HQLO#Y8qcTiK%pR'FF\&,/-00mQ:TBhZ,-V"t+]P.<#BEc_$Y>HBbhL]9R4?[EOR_]H1r^Y)7@FC"DgI5*2G-h.PFkg3((WS'W8H.ZC`sSUB=8Eo=%4JN"R40#^1Dka9Lei.Sq0E9GQJ`'V-h6.L/<'KR5<1^!X,p<gF?-/f/D`&`90^(lB[qdt<\(@'*)6;NBa,cct%hl5V2<'PZqr_&<%hn8j[hKLKXGIO0bX3[-`*crJF*o,FeJ+I4BRp4LYX#=b:a5<?;O#G4I3tGX^]`1rZIqS)6n")`,T%*/iL3Vu!\PcKG4'qqsIK()[%p;+mib;UKt]leGpi:mOsHXZH\b18LWC@n=2[f>R3XTs&MA%UI-GJCl+]_pUb:fgl55DB+'qW?cXqt%_^qB*JTWLoMpXWDYoNl1_f%%W:,^=&([*e[KJKrb-`SG%#B=O$2/6M<nI4p["@khuC"YWk/,joM3Tsmelq>m`3RZ+5Ak_5.nFTC[ks,g;Da[KuH#SS%jGtI^6]^%lW_!PHI-t^B5d11=$<cPo=jJarT\^"DuKLime>VP9m?`]a49)@J*Vbp=8uNT]_hJn[3bRf\#\7V=5&LcGI?7jKgl$^[@?iK])M5'%og!q-\\#F$YMNN2G3eml&$"O#hQ/V1DVTa5jN>;2]jCRA^R@)?p9kH/c^`gofl$E9hsWCOHa:97>5\B3V=)T8:0+j4YPnk#?[o<N%j?P=KR[#hH5$2[R^H9)Rn*.u3HhbdtVR<mopZ-(urg;U@G_]pjp%9]QDo/m7mi(o%A@m&Se_@L9^AR6/CJ2,TCG#GC0TG"gXi1Oq%a*4`"h72S>EEJRJn'.-p[bCQEk1qu.n*c('/&+Q\pY1U75kiN_/$L;fc!0dL)s6Dag;iMk$!HlEmM=it??s,2]6<r6ju55KmQrQ2%*rHeY`$PkMD!+$D<W%::roRMaFnb:C&#jjIf#I.bRJ9?9%]oPfh7S5ej-EgIIfCJKH$f#Jb3g@tIZ#_E#nHa%YA*>L1g56h$2CnN%J7#q_&fNW,K^!F+ej%*P?>gg5YKY>TO8A.Bofm>sn(n!%c]),q]5Q<FcKcSNMoBnD=.`RG?EEU42ue9pkHB+'(DbWP:TlsXao'iY%rk.cPhgDc-hQ9!!>lWjOLMHDkF*hKeE,gB6\p&d^$,$;M[4c_c7=T4Pcbgi*T5WQ\@<;DDmLO#LBVH1/LXki6/cU(eq_toIdt$j*%=*q1BWqW.9=&4,i_a>B1g!W"06G2W56`@H2c?Wa`/M(f;]Xt[,I_YdY3nsSoJW).!p\2:hl[_-8gq(&In\5O9<WC:/(R>g\ER+:`%a!Ykm_H=tPoOR:HlA$`LEm3@/7k;>m?JG?cH'R36os;1-m;I1^+oTku:1!e:k-_6[f;f/=ji<@M>K`K>VhPZM;[4Slp;S_(k_$+=%%^1V\?+F:t5M.s(/+qLI=7+>nmGJnqGgq&gL\j:H2jS@Kpea]D5;mth/hF0>HFeGZ8=9:'I;S;JO/&Y5/PGIPrabc?VV)MS4B,+3%3N)U\oD4Brb3$;7=kp[inFrc5`F<(\<;!rLNHK*ibgQ)A;;a"s7rN:a:=jFaIWT)eO5B<`>-%V!ZhitFh7!F(%lZ:rUQ&KKB4CJt%P't+AEpqqunCk'If?DLAK-W%PYO?o6a966>#>#8?]Qs7-7!RqRLL4E1bm4.?hLU4WI=4U+]Nos!=?l4lGBNT?X7n4?7r.@,P\>ap%#e^qu4&=Mb[?&q"R[\LCnnTQ)rq";P[ITgj>uD<dSF)h_>eBangHs?t4:Rg.X_7A1H&_3bkO/)6/!#bcK#Fg!d;/ZUomV&\pErsg%l;rIbE;*4P3AgR19ooE\=4d5n-QcBu:L:$[Bl"dM=9'=)kgo3-9rh:NT=9<]qu-,$gV2It^W(JHHbCo4Ie2q2n8sp[XDU1O?h`6;%L\r3/m+hE.hmuke5/Ze)D_*FT/L(u/>Q[i*NA&:9c1[Iu&Y@iPDc6m@J?:,.X*9mgX^51\.6dZWZiNnh`l@N2qSH\gD[dUJ/+B?@%TYGpi%l3\Lo,B3b#uL4;P*Ca6)@9PKN5J<k#,:IB7o*ImCaC8UHAO$SVhdkblnn^0nSMbhq<dt&$9XBepqE-<fK>=`B!K%anme8C%m5U`KQb*>m(KS;#TggU#^K?;CA\_X#4"se@mPp.b:]8a^093(-1Et"*59)u,K99ZS5CQ0:amiHPQoaX71U0B1r229hWGDTp\+6I)%<Z*o#nNl*oiQ8Zt`Ys%29ujqVbg?.\W(A#^WHeR6V&:3hAt5&Hr@#DKVl#o0:-:\dBl%&@]"lG,CA"^orISfpF-qg7&R/fm;tqOE%O2Rja!UfoBp@G3YCjq4>*bR3:7NNKp!9;Gsf).Wg9M:QC:m.-,`g=^8ld+Up2#T+e83Hh9kC1nK`p0T`5I<?kI+NTX/H%_/<Z$:n%*H^EBf&lEsJ%Du^c&LhX`F)r2[/JF^_/`]Ypu(P)fDF+\D]^$:e3EqX26!mE3MCdQ:3U?nB#i0*d@CTX=MI3:$!lFq])I+5rE_V#%r_&sFqReD'jh[GTY5.A!aig=.J,&!K[ISk!4u?;I[b%-9f`&"b'.heeK1"MQbK]64gj-nC+7:c[^=aBOHM]qYhZkP$c-]#ZeuRP@%k*B+!q2Kc=B7IU7A)gEp>CiXCjMViJK3$VXmWlos.iT):2$Mmg[l-<paZLM/n4n\hQ9)LI^AMOWkR*VRYh&Kns,1qRJSP=Qdf8O$%9]2A4eX&:<$&4aNk!%\s[uZ5ui`aO]8%8c,(I+XBo^9h)1h2Gh.SsD'cQYEujA.r8Ac7BAo3LS<qTdfU&)Q2Gqf2/X?8RF'<7hfS%<;&a)gYXqS/?_;;_q']Z$_@Mq*)?NKqiQ<Ug3U1'r:LSOh8AYSbZPKtRT#@2o=cq<ncj?Keh[-kU\2C+=P3YkKJoF*5Q&%D#i"[c%]+EJjLL7N:&!-^rj8I4;orK8&egXA:h=$M[H+:HAH>k[Q^&KI`^\n)AGjtPKO.PX;)iZOS+4V4+?i9il9(h,/Dsda[5CB-Ss)g=1%G<,$g[?"+%#"RanT#r#5%QF[-XaLoX^*t+6AnQ=2%pKI.kt.M.Ct:N5DZ$f1Z.R=YI_B`4F/+-rG,8=5LG!StX`&-mGIG6YAF7DR%%t_7bl0oQ'HLfPElAs9"hghn)&)R:/EK3+^RJhB9o7Cg"/[lcB5AtWKHH'5Nd.`mpH!rG6jQ;)4pY`HjoCVGEZ%EebrQ=Teh,W."%Y<FStIX\ZtBMG&!0n/H]nMbl3nG]ms^[f9?Idfu.\_LGL^=^H-#MoDBH*hkWqCNH#e_B$>gtHTMmIYF?o>C6>%Uc+'_;1[>g(3'>%Gk:3kK:CW?T`"^0Oj?\KGpn45BPIE:pVuZYa+cV:RuR<EA_t1Ma<oZT_Q7(')A(m^j7]Z-JrXL4h@_!9H\3j$frI#lRg,So9CH5n%-Q@P9#;Ap2jd4?npeB,j[!Q@<?[c\--?lus-J86cf7/+o>Q*M.^71GYh@IqUf67c(/RlG0rs=/NpM@P>kXn`B9:^"h0;h'#MOqMp%VscHk^Y6JKHM$4j>&3p[%nO1adHjt;9KbRdm=*mdnCut"5lCU?&,oi2m98(C#FY%4e2?,9L7.Ol60ITQm+hTNfl+brM>]X7m\m=u%p4K2Ph`a3Wmap9oV7eB<)B6FSht[h"P8+WgHe14A2q]jblC.`-LqgDOf`Kg>]^k"KpTLd'5<`nt?dirM/[,.uj2M#_b?$WTBCTs2%iNIFl,N%mS9pMMNmbM3!r-mr9(`P,<P9?FbDN?!u]t4(-p?%,\=+=E2$hLdWEo5_WIrarQ[:n@V]cSh_rPahK-iAHpp:f?H(t#;i%9(_68`m#H7YH6SgXc>THrV#0o\%Q,9Gq1H9r\p^`[J;RsZ@93oeG&1=DqO+E&+:^"XC#Ijp?<ZGHZtq9rV/4:FLP:0f7/*gA(8m%%g?G(7M^uPchZ%UsUGk-uZhhi9JL2n,hl_HfEO7gRp/d\%[lQbF+;m%Dh:A(15!82fp^Z$V5n[dcMln$)?1RV1))C*=G7Ub#Wc,Tn%i!hf^k^N+eR*C,p%#b&Ac]WF,W7Z-XhR>u_Mt$dX`#:1^rV;(#pGW&!FEbF+V$eLb(\+sbhlQ9`s5'_5s7<?&N3/\T[dQHKN8c!_%(LXi;SbeIu\p'XI5/4Go_h45^UU'!@Phj%HTY':b5B5So=&lQ.qZOP6M]?!F=a<aS,U3ABP/Mm66)'%h\,26`m!!hac*RJuF+3hs%IEq886-Tb37ZA=sm_G%,-c25K\'p,c\*#Oh%rV:4iA:@[h7k<2rq=p]jmho'@'#o$8o]^&I]b"NPBo)nUQVlZD]U-bluZ]KD'ENZ%.5lXG5(%Q!2f`FDq.sD^cV@2^3LZKW5C3@@B2m,OAC"%!*cEegoR2*sD16-kjn*D,2St<_]>e2o*ZU0;=4^enQ[CcM.!.i3/"r]&%j54-V'_C%*Gr^)WF?Vf&k$H70o&JcO<k2's)!/sNbk1@W3kk?JD]Gq9ebU?YDsjK,n+W=30A_.BXU41]Y;P2pHSLet?HV=)@fkBM%jLO&pD<UFQH[^@HrN/?XJZY^-p%$r2lg:12l"@W71G8u[HImid[sh#B09<Z!o^].XY-6<8OH`5aJFGSR/#(bOoBF0#CJjeg_t2Rg%SA4mjD6A)kYqUX_]mVtjG^8+kKO?UH23.t#g\ENbFnj*Ya!]JG+<1M$@\\`:g[jD$8YY&*natU=mt$93R?'8Y]oA(3A[`nj"7uDZ%:bFtb7sp[fGe"8`iGQ/'!"1H@)&a>ch=\jd84@UW-^N;Y&N0I9l1iH,X7#ge/Ar\,C&`GfMoj5MO+(p$c:kb1_E0FYol(U'i^C7g%p"H0b;V19p`QXpcOHH$7_+0U;57pq_An;L]<[KFH%L4$s752K<riD"YOe.`2(JDY8DUPr,`c%Et2R8D@nh\-9NUOuk*9+AaM+#+I%I4%GU/Xb;H\ouQ_YHNBhNLsKCT_";-k-i:UkW$e_MrE&B+5bSP,Ibsbag3\X6WG=SA9p3O_U'=u`VUIr_jB!:9'[g[V:U@AjOr5:%[sJI07:W`@HZs'\H.cPki:A"<r56J+c2kQjh/Lpj'CRRjDl93Zs4AtMV:3%sf(JooU\)gtFnm\baY^/5B@?OXmgC(!?GBjCU-*I@%hUa,iqfcDh6B=Y;9>[rH>23p3jU%>aA92@-\UR]m\D;P4h:Rl1_hB-LH+*Cua;qtUfULnScXmFJ1ALgn<e#SdE.i^7]q*9ZnNn*7%]D7gobYbkrQ8CYlDK#t%b1l),h(N*s!c?=up?UCQ00I[TNJA$71DB$.bq32Xc.RY,c&F0[IXX(nn=oAVf)1!$54[?eF%VSQafkCJ%g:?>$7(R_f<4`daE'M(kGqH>YAMS:NGAqu&oj/,&5HfK43eg3_*PMH-b#Usf?CdW-58#/I]j'7k2>qhN]u1$FJ0cA29eGqWbGC'G%BB-9N7me*c;+R35HZrb&-dlV-$Nd$:7p^3V>oZPle,=^0Z2S;Z%BlX8:E=r=mt-;E2?*0;fq)MPGhH(XMsl-Bo%<;(hotl:QZWm%%_n4kq5Pq]5>lNc_gpr2A'CX9&AfDE?q(R7Rpn;JLiJeGTn".1<N1h"nqj!4NmH`Rs8$B:i)P''4^?ame]?_jRm)RJ3BL,!MAm`jO%jj[E'ViinP4=TH'2n;hkdPj9L*kJ3d4!5441)3ja040SnIatd\XGiW%p@n=4?KdrRQ-$A0>+>EYn\^(IbO&hOc&5<QDXZH,If"/0%N+e,ul:0$VB5<eP;;^^CQ2BQY*'S:Yb/UUq9O-p*h3>RSXiG:,c9&6GA'rlpL'Y!;GCmW4?=@X<m]+#k)V^ca>7YKam]t=3mu+LB%o?B1W-*[;a;m*("jCTT]q=^h#'.'q2qd6L#&"Pi?HhhJn@<*Q?2NRk6:1Pq=X//)R1X$Z)P=p-V,"t`!9e7s1L:d(k$[C$8;gR%A%Qc$Y;Oe'b?n"RKZTD@>*4-NsAb\Vbg?5J@Fgj5dl2o!*)l$L]a(2#l3[-u\agQB[I4[8-WQNd[j_SuGb@;+ZpXjQUuhHu`=(NSs>%37HYTO!a7kC"@J-AGb'-`7jk.OT2Sio4h6HirN#[?E3_hb$Kfljh0ro3$"RhEjF5$,IF`uWqCDqSH#Yuo5<i<I(q[)Il=][n&eGu%]?f<>!t1<lm*!PlB:$%!\(STGaVdjHJ%D'([2E%c`jV!o6?%1_:P3du+o.MQV?.dk,l?seQPVG>hnD=E\9QP+RJf&57H6(LSpo-J%9WI=lI=L&oR9tFAhS8ii^+3tZR*A&f+gmhE]Le,opI3:FPQ<u"D>!lspQsbE/TTOriL-P$9MXF51H@g<2`#ejYGJ;m^8miAIHFI(%G-i\ZZHVYmm..:GM7)BW>KlX;Ng3Ifm@eOKbbD1/qV@3kS)B>XB0-n7^D/KEB\WhIK*VumR@aB"B]J@#s'3KOB_R-qeJ"Q-?!^e(%*FE0F+&q,NS.r6U[?08=O+/supSj;F#WlMMR0A%bnZJHCm2mE-I^jcMG]Rgc.s%;l^AZC>ok@+cbG/L:rtV9Z:<j>MlX@&Z21IZ@%mjIGtA^9%+^=/HRT'4L>H6?b[o'BoUn,"j)O*qnT!i^J^[s9W,#cH8ApF1m&mM!4!78j-bC`h4\YC=1P7EXl5hY$!ucL'W:hf:R-%PJ`uhdi-J1K_k<j6#&VkjAWB2If9b@^981:IV1a?/hcooE0BAXAQqq?:Pts.hk7ZTkN>%R8)!KTs"OKD?p2(W^W9#lXKsAq1kmSH%RZqc`+8nZ\_CmkE0c"Gp`#-SdkEL\kfh^#:g@`S`da%OMk/%(\2L`nNjDqmr\KF(bT:sauWc8"1-i)LsIol%;B;Yjrf"YNc:1b;l%`Q[NAMOrNJQHMJ%#-&cBdbalZWJp2A:;FR/X<O;bmm%;fF*k-7I!<;OZ#ar/oBXBVVdliplLEq*7,7X`!KeLK?^Y-hoMpb@[,7*J%SWq1KYMSYU7kZN5hh,lsn,@h'^cf+*5Ip%DFRVA9chs29Z+#+/*&S60,?$[*Z1>`Q_/F-UEGg9$l&'G5q2</6ZK9EY6rC8LGFR1&%Su8G.8$b,,VjUqg?TF=b4,M[n2R%?Ukj9(Im(>JFkhM6,niLcI>j_P2+'`pE`,recMb\**+?mtmU(b/l\T<D<<J`4pSl1J<I((*S%L7bkrqtK2XkESTeS\k(2ig+TtZ-T29PDd_M$\$Z0g\b]T12QdbKe0.np(I>j*H[n.aqpU1SS(%^lu/[jm9IV@A6^`GG`HbKC$rhi%:Q@'-^>cYB1r8"=bkUb5Ra&rKkM=*+?;>>8r#REAnD<i[e\bPkO0Sr"qDJk-2bjk^oBVBr<D6.?:4M)A\Z!74lR@oW:[VIPI4TJ&%6%[:4VbarO%PIK8g#&XHhn)BZDg*i-bL.!b(J!Ikp8rV'%mHjeh%rJr:P@9UXI(d4WCFdr[9#:/,Gr/tZa5:tp8_G?<gd\:Y,9@V%kGo9h\Xr@ljhaH8>Kcni.]KJrB[#7C.rQcL2R^WFbk1Mgf@e73:@Il>jQb]%pS&ONgLsi1-B14dqYg2Ijmh*lA9R5/5O%aih=5==%gu?jKs8:>Z%"=[`1ktk=)NB;,>ogVX>F\jqVtrnQC$>*QGOnFUkde^:CD5[Md@'pZqbI.@Q-N*a+3\^gIE2,p)rLG]@o.X<n)pl1%htH3ii7AS?3bd$)=86nu2I?9jpB&+tn^iWiS[jn*#.i1UbDC?&qk<pE3/V(p3dTuc>8,?Dk92\IH9^#.qUW_`ced[IRAlC>[HI=M%'6Vd+pWXZQTrIh=fr9Vi+8Bt!^G]`=NVs^0%m0?cbY@B_h/!#4[:D$Kn'7uKcV>L0)?%U*oN0'h]5(!im*"Y*M3_:l2.S&+2ch?W%IbaS@c:e^^_=bU1RGFGNT9']542#TG[YZa`drb3pq83m%NFP+7DjL$;c_hT$[gi$0T7?^?HEP<%IrfYkf:#ncoh;,@q>C#8Cq/,Y%NaDXQ>E$g25Kl')kk&?ff)FBE/Z@q%!hP1^&h%)ppl-i2IplQsV^FpfXr#`]jfe6Aq=iEU"0#l&h<M&jI"'gJF-BfMhbUoBJ(6J<%o=Wge4p.p^+5=]^A#H(XI?u%1jsE=iDj.(Pp7I?EfK,G%O]'`qZHsKcXY#%;n+=Z=q;p#[m*")XAa^H/OMU\f`UM+"U4Q/`%*pKM%^@eAdDXX3IStE`"BFKsX?ABLf(N3Uo-M[PoNo"aSH)q1M<LET,3'0]emIQ%L@2mKVWV(VE=W3^CH+c>HRln<P=P2n&Pb%_94P@s8%IA/Ha@BO6To$$dp[b8*p0/t"Yn(u.,MjG*XGE(YAaVfLd2kdCDaPbgtmEEi$ApSK3C$bhb`kD;*2#L.EHVcR=h9Yi@)dW?E^Gd([%RoX4rHE,A;p#[%]m)o';E9KqrA+8l@+,us1faqkfq^O2g'0G[e^NIj4>c,V-I^=;X4FT)2Pi>J5cuu1fdFJ!Q7AKb5o\2ir*o:c+%#!'8CUWZDG^]-_Xf,/aTp8Kc+Z[1:A=r:s2L>R,J2P+c%D`!oTB>-<.]?S13o:qMs7WQ66Y+]aM6,Rg%p,("L\o5*mQZ!fA=nd(a%W3=g4FF;1eZ<@(9nRB2:h&+h_lc>(5^<P"A)gepHGdT8Pe/5qs_i;bS6dq$o:Yf@s1O[k<NS0R=j,M[(=.^H'b?*MZL$%2Z@r\F@%CZFf_iPEN+T:^&7gRU<<XNiKP`d72a]s2SO]rU\^o%?^sj4D[g)<LIFp!D??GP8T;D9Y4Zlu'ICD<ub^l=h7+O"E8M06_:QVgZ\Q%`qbOp+-"J*em.7UhWBm=m5+^PX"hA1f@>:,\^].gg"k7;E;X.XCO#,Edac"prRR5bm>Q-)[<19QgZ?/aGghqlm2tO1H#`AbCTN$K%A_6_MerQu5j7fT[ZeGkrC];NT=kDZrf?7ICqb+B`rRnf@Y4^P/[B?W"qY<6nf%'G9[ILY?pKU0O*1>Da-gT3sH2#jUY,dh0?:MKm%?h`A^X4KMjIJ232pYa0]Ap8=H^[>-7/+%M.B"0ochmr!#q/,2sHi3j:O589'h^iud?;5%D(H5,[]2q22Ze]ES8"8==h1P[^?a?`8%m[]W6lgBD#ear4tHJs3@Dth6JWT3E9^58VVY2r`?4oN^(Nd?GhkDjnPObN6eY-EH4PC<H,UM"E%WmNU[XnmBNRu(b'ddX."H2m5C%ZtH`<@]nnco8T$,SJU+SH4H8WNdFO9h;%[.h9NES)^BR%*PK.7+5SXD%c?r/mT"1L/pdK``,P1g[s_c"PKDcun(dHFj5-VddD=\i%cl2B/lFQr@]7"l!UNcb8M=:EBp"N+-e`#A1?XnT+p@Y'G^[#\.SR;'Cco'8G@RY_1)aB`-kihE'o,A'c9-6n^qUYM7NV7dJ2n.PN%PFU:>UBC7imp^ULeT]Ubh!FLAfkg@@&"\:7[i8[Xr?Lc#55.i*>h]2Qjjj>/Q-WsDqDV1SY55WrNgKSQrRPrfq;V>(rnGol=2P"6%a$q!MXi'MCJC".OJ^NrNmD-s4aG5<miJI_Q(TVrdT0Mf2%ICj?=r]Mk9`2]nj?hI+s5_#Qi:Er,Q,0]73&^PHqkc51pLF&3E2@]g%5PX3^eE5\ubJqEWak3&@1AKl\F[Njk5DFqsI@n*+r0QXi6a'hNe"PBjk@!LZhrW/1f&aaAd-fT4kFp@g0;!u:0>DrS*ZR<=19AsJ%YJVTg]68t-^EnZQDkBar%<!kI\/sMk]'177^6H'\DnFk]No"CN?b7\Xl.PmAcX&L_5<YLHR6>i(]Q_j'D!T9%H+*IlbWIuE4l'pt%?*'STS%W=Lc1%Gfd@>IYA$`^bG'M]qE1]krgZQhXk%X/[EV&V^A'u9er3XuEICj-on`),;V7!N^Yh@`4I+d!&=]g103dYpfp:T^N%H25,Krr)9VFMHQnT=TB_rI"F[Xa0ncrQY%W+[l)&a3+*n1,(EP1,8+NVo^Hu1Rl%f?0P*BNi"b!h06jb(G`/YSKCu#kZ-p8i,^ce%3d@agGEO8[IMoNH<E#7Liq:HKmeq,\U%N+!YTCEH3R\@7gKXNl:hrhp+05\FA$NZ'$r4!4(iKYoR47lIh5l:O2s*ca1N'o[*i6;\%F#iLK[EichL@+3JctD6P%<pJ96TqpP@&rJ1hO'lR2gdZ.la"d^jlWG;HJSGhj[$B-4A+CiB1'KG%8FS-WVZ>BcV?Z2okX"t^\Zcm%JM[<NgZf/6T</XWi;Th5B62f8+2Z$b4q7D@QUB_D+*YoVnn.ahp$8Z#@;=5f+3-k-VC)c3hm;b4ELl?HKp?J[DrW<o2fnmPqf^=2%k<47hm)@>nf"2_OB"JtuZX1nifK)"+H?$5K3o/1Fd^*n93F\oKAk/_rqensTVS=[Blu0W&+1^3!2I@d5h<sD"eG#/n/'!#.06bjj%K.h]oIf)+XI'kgh3]=?03;Rg]G]36?7aJs8eJi/@T$8ilO,Zp'IMmLE0Jl#fp#D5%rn,cC<SsihF6`DJf\>^FYEl@-='k:<5+@"D%IC58u5@:"/5!BQPs7kkEDe"1pr:F`uZ2Nd+_X)Y2R@)[b3h"\`g,to#hS4+og&LX8qdfEgmX0'6._2/+St,,<]Xlr=mc^3V]cAk,%'7+Y7CA%;oc.(_?gr=H^LV*NLYl+3,qTX&]2>q+XG[gO7gX>B2o=hJnRE9PaE+]&i@q+S2k^70SJ+NQ^m)\eYD"d84l2'c7o'O\,%j2Ks?S85"VF7Y$&AX'_Y]mECn5DBEH?ROODeEc@aldOH-Nb?@<T+@J5bs,E:(n7-7*;i"8rb6:crd-PIrFYOo^O7n]coq;=Fm\tI%S)]K\Z%[bj:H&ZV+1F0E7/+iW?_6%*%]%]\MkaYPA4Q+JCB)6!ipk$dmn8;5Z*?-/1-)bL[XOs;^/'bGh@>=9j0o\Nk0r'ZfDYF1%q9.+5bH7VoOlbip6na&T\pLm`A*1.J73Cu?YKXcXI(/\>G5Lu=j3-E;]6*bPleQS>d+ctFmVpeh^)qU6P.Z9U^5)G%l18!Fcekn?%=abbG\%Xotr;H'Kp@@.l>,1ETn63EslK-aBMh0utUYE]BoqB'Yme+[t$SU'qY)^8$^Kqj>h/M,DC1HLQCh_q6Ds$rZi8gp*khVag%3aCS?R.b]??6>3PI.4>SI/gE54>??bk]CNWC\V+0fUDfF^:X("P>4>#G"rN3^,TGHol9BPMp%1E1P:UXeD\[!VZh.KrFpb.GO4qZ%k[*<@<:@rLc_#Eb`kF:D[/)h0^PogRZ28,2h<O!dbI+[\D0LC%p2]3RiV#h[>6!;[?_@-T5G5mF]ar0$hZiKGh7'?kFo#tPe*Z!e%ci!4oSQFhjRl__4=&sP5k#^F,NkA_%g"k<<=P:A/g3p`&^:i@dkhTIV;4mP7(Zor8rNi9fqsX6Ali$F7:P/oG:#ZX`7R'WhS5#!U%5;]Qnll@]sI^hI%4WHCN7[s4Kjjh)K8#J;4NFVSJ@cVdqq>&&#g$/2&M>]OrEq4,H`M\oX[u2GYIeP@>oA<V6&"e?d3gq-Rc2,`Z%:H,-u_Wf>>X.?S`1[ibuXZLZEhY#iTm!S`mlM:7aSpb\-5EPPFbk.s^(OOJldE?0rFaNrH[Fr2ThAprgV3C$/X-M5=hl\Se)fIc`%J#(uAglK_USZ_:5BcUH>\%ZZ`IiSl;2hSf!=dpN,J\G;JA(sTo8^iOlcFN83r=cQp\_,56#Z"GXMB=FeY;^GA5@Wa(#G-[YO]:Mf%b3K"OW;+n]N)_MCFE(HK983<O:8#e"PM=N+n>d1!>i69,U"YEkU2U`]j:eb[Q\OUJ),U%IMOd\V5O*Zd5O*^HjkO^a>'HG_5ARZ-%H=Ydre4>ee$@9Dum3e+l.aGI[?+sBJp3-jX@;gT69kaG44N/@k%oKV!UR8'V+Z=ZK&'7WE>^PDnY+"-5euo,k*jKg8^YE\2Mk.2\%SbBolO5$o6_9UHEp!1P('2Dag]/`$b&g=TcCd)I16aQ(\\<%1Scg.K5_L>N$Qi#<JI^Ou@[C(]&<M&EG5njX<"gq6(s,0cQ(hra*%p3[+br&.mOW;ZARkkqfq$fgL5iF-N2k#HZUKu`?=E%'L[rYTh4428Bf-k*]K=o2RY0-;.sk4YmA],[uJ]C2`D5jQ)9`@j?DCjNL=%I^srIG4F<c\9^tWn:&RU/n<T(Z&QE-]$?d.JRE2U&"4;Qb9$=:UL!6rZ./'2[Aq!4VUD*E@VNs8=_2LN7EaH&Z/n;s]&e&lI%%"3%gXaJb5U]3kf7)oNhjr6J-\!.As+I3;q*giS59+,#*kHgWW/du-]"4]Tqj3l0C\D/Ffnrf/T&s5RoLV2D-1FdW[@=q)oi-ug=F5qd%a`]a)OoP?:+1CRR_o83Q\'F:CefSb6a)HQ5e:N'W$#!I67WLf]4`NdS?156TY9Br0;Q'D@_aCu?O"[^:abfmBXXJicc%b8W8$+-f%/oU>_bp375X.-enZ\,!U?afjtkr%>a?(F.??]T't/oI8T>\S7`Ma$q3qIGr<G-6:RLV2FVF6DY+E.K5+:N9OE\j>lYVoY.*+u?A3%_%TOs]PgS`c[HH4`2:Dc+a(3!RjW+%?aSLuY/Lr7h?:^F8NeQ^nRgB-W94tp+:\b9mr$tUq^Xt-\iP;8na2NK&aaFNpW%1X0\&"/%UN&;Rhe65``a`ZDnD^maJ+b^GMf#W"%kf#(8&*sJk&.XfI?1qFYARmEo`l3QCU$NVmLpOfe%.Lug:8fmD#-_u]daHU([^9Q\Tk]h%1UT^`qu[E(?Fu]e*>.D*$Jn(DK3L=f04\rH+s--R^"&nGqYtWeC3.N^*Yfg"Y3ubWO2kX#bG.SGouGeJ2r<$BaAohhJc'U_\\t'Z%&s7,pD9D0?)I?b;4i(.Ni9#k:B7p/pT?Ae6i9'HbjRo/*PM:`L5lM;29VmZFjUT\aDLR"NYgq^g`SM9('\h\\Jt"-1>W1EK\@?oA%%[=)EV%W-cf>OP;p"!lYF7WeKF6ZZqf_s+A"07p7/"[&.s3a,1\^!X$X,2.`m=Vcsp/K$8rF?tg,<gJ;Im55u<=LU"Nt:N0dn@r1%U1iEZaEo_@#CiqsZIfD,+D9^!l<red3h%?)p#_BshMM'plcd=s@5*A*YbS[/+=s=I^Up\5EW]W%7_M03`rA]ms6sC_>\D.Is%0*j%E,i?s@/$TkZ5i49]]e:S3k(0_$G&Dc/\6>3EEm8L<LU*--*5Xl"lD>,[^,?t[G*[O_/hMOm:GBd4-Ikqq;6u-aJpSijJV+"UbaHd%VE+r?j2CHaLXV8/?akFR\,>edIeYOgs)b9:F/ec[Q_\[Eh7`:HC!m@6L<f'ujn"Mte`[@O=G%Ng=umouJE?Nd_<PALFt?D./WpS'%@[kVLCmi:Ljh"RJZ7FlWB>:oa7FV9dgNA8no*oJLm1U3qPElT5Fg@rH86(gUq'#8Xnb?$:!D?0k2C'nLjTh>&.eB25mmiZ@4u]K`%dQ'<+m/LP$Q#7ITF_B18<_t92^%U*fKJ:kQ>5:p]8Lq(&$7'=sg8CK*8R#nDZHf>jYR&jkfAVq?ZGst00!nS%X)XPE.>Lr)+>2;A%-\UCjUBI;qhK[j:ePX/Ar8;rL[,G9DZAI.n_sjca.:C`9=J!6`+1,;EcDXc7PRskdXYb8U&=IsD6[c+4Vm6jW_mlG&G07k-+QLC/%Ml?*ODg;e\/Pn7r#eE:@$!)WYj9Lt6'RSrL9,70CVUhO]S*&fS[*dMrCpc/rb>ueEHL.@bZACao2pj.D8J&7R=bo_VHu"s@*1(-J%c=A/1h%m>=[[!9)$,g;5BHuE89OZcZe#<k2-&<He6j&iPbBG*U6lD[G5Z09!`KhjVD[B5mW,kOl/N#-K1IZtp+VDYh5TJ+YD0_&c%!)eC^Juf^hGH#N6%#[Cr*<Cb(1i]gs1k'%J1PJFd/dA7o+[_TfF-=@M1O[h0ZC;Rs^6:^%9%R8R1=FB8_Fm3F4TQGS>)nr"g>k=P%\"&WZ-nCG;PmWN_P@`rJ[@B0&:-0&j,@=Si]r[D78=Zd#A28UCM5;I0j9S2_iouOG;^$rG;Ol3-Us%!*Fuh2qAKe*4GiRbS8,@7H%XEa;g:5%]M-3=AO>;\#6">lETBgQL-K67Ns-3'PU'lk)h:f<S])(0I/jfJ5."_A8kWrXWfGlp;;9*$0&1^!r`,="e6O5J#42F<)<%SW^Z#)X9.EUsPi7Eb'f![un#XXl2cjnq,"F%JNtD/9cnHPk9Pl@+-un]Et-0#nr7Wf0YXP<ugc22BldtW,k4tr5TX_%75\R\#aV=%gE_.H#9sM7K)?EA@=sYj&->\V]aM^?XKa&OoIcX[;'c?]cH?g[3$H7\PB-_A+lh8"OX8)2eFJT8[E638[1S]V$P\aqP#M`QiB[67%"b7/JHpj&9&D?J.'j:Y]ab4jFiQ8fK@C].#E"G&@/[2WG%O=_?W(d&-_SlKd,fme8PR=8@:9Z)fKPHqoX@RVc-;ue=MOK,aRt-o2%6&a4pA25m"V1_7*1@kVR!FL+\:U3'4R7q:T&F]+V/0d+p+kdQ:XDAk?F01C.$2lqo_O-Im_<A07D`oggI2rBrVfGJHSuPfl`!hHl%Q;!;h(nHV($*h?baju-%UptF*42Hnh.i_VBK4o.pZ>t0[(.je5a23g.=Q[[YAWsqTRR5%1(FpZ_AqW,]56!7@:a,8bJugPD/V=G@%.Fa-Rg*a`V'q7TV,cF+(#6dYE';>RJOD[sSK9gf<+"@a)MA9`c#p,U4fui?N!g4kdYp5#]\L_TcTE)e[X%;jaP<L3bVr5i%ECgcd%?jUXY;aZ'd_<7F.EbBq,)2bP<!!a<2as/5EV-J[a3hBoNPf5Xs)GlNTCEW]a5V>pm)Asq)2eE*,B6%OqYJG0daL='F<$pW,Oq7`$%h865Pr;b-B%EV7^ORa1/;AG$D`GskeUMq/d>\A(*"Ih]=JR&C0PFZbi[bes:KmCl$KQ514E.e@rE+]5!K]44-P8O?E-f'p?XMueC%Ufk,4QjEMJZrTcV;@MVD-fR`&*_l!u#1nJt8%+#jGCg4G9;H;Kk<.4-KP4W)ZM241@iO)4bO:+*@*;(F@%S:f.M@UICBtJk9G8U+%,!X>*T;FU`)KlPr"Y11@nNJ6E(`ZLG<+(/p0Fp@*`Hdt99M'Jt%&Y6\6KjUC/C#/W8V96%nN1HU`gnnWhRgW6%9?nW)p4;N`fpJI%;NRp5g3A^\,sXl7G_aEF'"?V0;O;nHT1#,E(;u0Hi>)VRPLEr\#j=u*$M#FU"3a3J.&Yt/<Q5DM+<oAS%OZ'3P>mnf2ZWc3ZjRrC%E&%S3)NA^B-/-E*b(?"7pHh]Ei`?J&C4\Z3#d,pR_"okV640A^!b=JMPXn`CUC+f=TUc.mif1##nFLP6c&:mF%79*,]@7,SVKh-I%*!o0GR>SJZS;3%'Ts.:69+!6N(eIc)dnjg)LBr+8/C$52eW:V)"U5QSCb?63*@N'J8<!a#q3[[HB`!A=Yt+?H?daNo70(pU5pFB6%aDhqLa+Bl('L`<!%f?CFY!>$:lo,,iQ652cV>p`B"3QsNOs'Q3"G62r$X>sta=5j,L_)R_phq@C[&>;_iDL6u"f*9+6$*i8)LRf]%Z536ekdV:;RfMU9Wd_Ct]k%.[0pqSaieb\)b4u=Y#$]@JDt6M[Nf.J*.OG67/DPO[+JQO\B8)j(@9=rEEe6+6,Apq`1>PNYU\_A)%OXCU(=)\2h=>&[9'WdZ\Ng"Me@P&@%6A-a-,TWH+>(LF%@DHTVrE9Y2_IPj)1.7t`@Y[6FL<T,CQ@ltPkOcM36\BI>&rTp/Ba]5<%6mW-;\5aO@<!ZU3+AUOHM!Lll!>uCq6,G/[&@NBa7'IuY"UHOSasPJH;@&H&Hpe;6c;gm.YS.&Je6'j$5*/0cj$gf*B0:cdZ0RA'%/`.ttS-^$7TKqZr>$-;eaF"1c8q%>>72qeUPIt6Gi2&'KS1,.&#GF9s6:KT3O0W;kHVnX7LbBl$S1fbR)*"Cq;[42.S3hZQ!0J0U%,n.%nUHg7G7M:D2,=$.*'Q`6h'gG<`E.Iee=-Uf`O="a9Z2_[T^a[BW1uoNF>GAP03As^]'Q01pr)E_4'8E$>[Ua#N-hIs`c+pi>%+S,StfI4Xn!fl/,.Z]``MMnhA7(q61R*sPT5q.KJXl[uk,*'_d'YC,6QU2r0#tdH,87cT^=/Z*eHLW$uM514-Je3DE=+i@H6s>i0%=[@uO'+qCl"U2+4-WcKOf/S,pHP7O4L#_5ZXT0d&aE"]j&G8]J=6-)><&I5jY-SE<.KBT7>`]:>IZm+<9*#Y/1M%NQpXgh370%iL%2J0!HAMHu,$!<7%"Zj*s"d?lQ']Ppk0'kIu>"%Q?U]Lf?dh#kW*K[N?9I%%Z6S<Jb%;nQ[q[/(PY_rZ-aqGY3<j`P5)\bLlb![C@%V@Xpo8nF)S5pu_!(]qLM)2A^3eHo'X'G1tNI)U"\mNr*G'J%O<I=_\+OT5I)4eBRGPK_:mC,9f^T`Yhf-$U+^-U/Fk>@+9qa)Xph%FqTqna:C$e=9^BS62KB81n,Jm[JMc!eIK3K!qg(X%`2=\+\E%_nD)q%K1q($=I-b)81"0@`\L\#!3&:^:sdNRZN3s5#5Ld77#8KQ%`7I8)Fu2GB<XftIOeN]uf=#KBUeGkUJctMJ"EkO#iG>M%W_@CsF&LpX+K15>M>!1^ecU=Mf;>r!1')G-l`";s.LH2KT-?\eg-u@M%A0Q<P1mn2&f\$8!2?JEuV)V-#9`ab/7Y'i9.*e<:=o]d.AT1o*R?$QZ!&"LRP(\.<BIl?=;\,%cTId=s``@?12F9/c1742/"kfXj%Tq&6o_S(QC?j:WRaC`STbLMkuSsc75r!.W%.Di$7';E&#,&4#!6J<jlUj8<=-?.-R,X%Qk8P#Es"Y3om.[=Rt.cYB8^]FaV@KLNQ%`b4)A&FU%'4-e<odmB6n40ao%YFJZ:-lE_&@:dAB\5=!k9!B4rV$d:1d0,oGWnM!;:/pj`!/cp.;%?J1p`HYt]GJ-"<!JL97OeD#%PB/W^Rs_q]0DF'$1rA0!m*aE#>(AS$k_^.B9sINNKFS5mW2'D]F/OfTZYBT5.>4^f!`3*7!K'f4SRjIaZ)_=.)mnLM*q?GQ1s:sK%0-tWm+VI9Q>G*2#PDo'sK*b3]9``+97*9!YOYe9_G4n\)6^*nI83'$U$lo*O83sD4N&qcI9LS!7DMeLG=j*q$l`k7Nb7M);<P;LJ%SoX#F7`&?%e5;/+G8B"$']oCG_<e7.B,SsC=\\r4"u\Ip$8O8f0pi/5]#?WqopXbtLhAIV=c1>Ad2"7T@&CB&>d/er)#5ou6*[-c%&CI0?_KFB56d""l048>KBXNu<'-40;`G>[=b'>S:$e$sIK\DT^81DSJe#Wb(W/55*fC&%m'PKN`0IqkRFpgk7a]0Ep0JBJ'D0H1=%&mJLU67*m!>WUt9ARHK#aC6ZF%PaSj]4"oq;l4:S$O$2QH]`A?-*T9?KPjmPbO&'@!eMl1)dEuRXs"&:e5tj,+aQ1RiE$"Ca9>r*%K2f'_Z(PQu;V40"D't5FeTP0$THQLbD$61kf/aLp(1LZgSBO?$eC@f3W)NBB$6UK@<pRkXQIJm'S\_Utg=i.SgK/4bHA;bDK:O)B%rrjuJUlQ'\[!#<+4K#D,,#0t?3X+2'KFO:1L0:,e7u5A6d(#?O;9]X@>/3S&Ts'&$_KQ"O0l1(6k2%IF]a2aAB##sN%Dj5l!2=nu%$ML(T[B]sh-8>Pc<8VIZ)a[b!;:qfX-YLl\[Rn:87Di+[Dh/arA8S@\=JBqA_Z>I+YA/<6Y\n-/c*8.SJu)sV@+s'Y-:0\_<&?b$%V$\L/I@CfH07[W@ZbmIdh$-3-j`j+5ODc;Z#F[+EMudpDE[3b+'Kd8bZ%ntUCTWE/JQAS&bn)$anTY6l4;Vb7KFBUsXim;h=CgBn%D7l*bQ)c5XkM/G.X6'kIna3@Z/CV%^".XK9&ZEXs"58^b/u&OH6jZ[!'i08aZCufi)-,)*<B,n*WX!a5*t8.*_KmO6_*V6_FdKjj%<B:$:grc8s1]ojBdcib`5SP#?_-j*[S59BAd-Y4jCjPkQ+l/Cp@1a"45DnS,/4fo=Up;Ah0SXbC@_;at<L[%j>NEWD'F;JO&ge1b%lDi]VOE(gWXIO"X;n8>%G\H82G=7rl5L>]>WMWK8(dER*!ZV_QFngUI*no9%W!Yf(gtRkp>aPpP[m5.KE!cZ9al#jC;:iWs/:U7n%eCTqV75$4HdYS3=#(-LZ/0Forf]ia*o4amKda&!@S)A"UK-6OgE=[\X(-=&]?4D*063CaU(946OCa3se^h;#8X\lJaYT_pCbPTuX%+NUB^3LY%1>m[[&&Y'<1Re5JXU<uW[>#bs:YXj]O$m@-`P@bgd3X.R*)jR!8lfmKXZogYN(H)<^83&Fj5pub.(`"s1*&X*31,;^h%P%=-*2ShZ]1`&e<+nAd!LOk[DP<rX",+j"fmq\#*\.T!!CFU<+=GQs1B,KK7[e%>Tj1mktOYe39b)0MCC@QY7P7r:iGN\EJlT#?3%*Qf*GS&!Wbi?SVq)PJZiF=gW+fUf;afYC$l!?i,69EVWLOl87X6&*\!-Yn:(&<1cGaA&<T9,7s5"Je[(!mD#"7Mo)S]F&IUfO%Tt%4jDJA'Ks^*mOZc*!"@t`%8"9abQ&;8e9^@]Fr_PdiRT?kon-iS*,BMhaf5)!XB>r*&a6;_(BOm%SWKTs;C;Tu!aQpE&TV_/?.Qo?%94(AQ0.V6CVW!C_n7@=&Qm?CdQOWH*]+SBb$GBG'U<=bUaJPYc/h>O#bc2tti,d+i%9rR.onTbO'@NW'/lJ%WP%91L^97\28i<b#%&YOh:Jo<tLK4;#^$[Y;k[gB)D]VU369'o57M'JK4)FFft+oTKRGZ_'fKiJ<*VtHFe/610U/S?0!9u&X!QBk1P0_QYDa?[U;i]^P=%"6MkIh,`#P8EY`t?/.h-87a1%%5'+<b?jIJB9Z3-OF4_!&Peui]J*e6IKDN/#b6':)HL])isN7k&`\J,#?E)D4ok*1Tj*XI<!4&l%oobPO;aQWY'ol*KE=<,p(kr,XO9("?9m$BRIP]T4l,,tn%KptscjtY]$!n13d,IWQL2A$g_mL]hj/!2PXUr)HCU+!G"d#R#FuGer%EQ'H%!CN8G,UhW3(>]0-,IL2md,M?i+$lu%W.Y?[`ZS_%eRPo`#a"?t!1+l=jl7VZ(./jGfd*"q/>t1?*!=I:0^?iC$ObF;YKMM?%;_k"F/ne\mLcLY6MV+39p"B`Ng_"N-;-%:C@6&rT=_'Ata,GYbj>ej1`=N5];d[`X%MT:H3Mn&%j^g[WA6E,V-Ac3mO+sit][5WO%cCNC'.Sr`A<iM0VKpFVW#:W/Di2?4rM3\s51!1`"#i<HY'd#fpi)c(j\;.B'R[mRI:BouFS9i$tX?iX+5q[VNcnGTQ>_N=AT0QZ#%Y8P;.FR.niT[bp9`;tH2\<j-6!G;f**[4QGiio^F59Uo]*P@<=H\4Qu#T4\g*@^bH>d^ike0I/5MZ-jA<"jqc=Er%Y<9k6dh*Os@%)\g[9g9.Bu+j((p3\iHbBFc%7,:N$o_a"YI!Q%:aU!C=52_ZBmS16(K%1o+_K+I]4rsj=CSg864:Z--PI?;B*8k3rq6Wbll!tV.9%/RqXU_q)WrDren<<KbZOH4GL:n<t!j?S*f;cK=GTMppW]$000>SnM$/#YB9V/"_tOZlF"Nr"c2sm79%g[kYULk#b`;BSBGcAqZ2\%h3I4!<6/L3FjrR-aQ>rjQss@5mZCQ@YD&Gl6Q@C_>/WCkPPM*'!\R\oE*n3(,)uqj"?2:!&M#b+ZCGW]dAE?d]#lQKWK\dK#d5$M%KZ$7j,5Y&KTjGa;%(WPm,f(&d*aot]H-0dh;'FKq&.Ke(O5dOm(l>+tJ<jod@LmAf3hk[Fc\#/97VRfAZ+RkPS2hU+J=%m[[g:<9%As?NDk3E0NT>>(NikuMRc\1[^2FSkL%K[5W@pBG.Rq;-fBEW%hc8,PT"e!j``Yl*^WTJCS9;2e:9sS4jn$oqk,RGrT`^SCQ3slNe%^SKLE>[NA>3-+3E&i3o*G;Omk>ollYi*rt`?6ub+i&eGsYj#^Lfd\!EXWY+\(-sK@AQeGeLj1X,L?8N6e%A\8WrfF2"`(n@,5_+?%%W,Aje-KJc\0XR[9EM'\*!DfG(BLm*O%:+$3f3'o!eKqs%2D9sRqQ&Rog\H;#]$C8aT9@_pa?Am8DM(.MI$k*#fg+/;?=Qlq/iVp%q1PeDmOd]7BeYWP;oB@#OB$h88D)6>0C6Ug&'@2MUc"\)_AojOrDFl[\nYea8[GSbVuY>O<Ih;M"<!Q^!#<0CMm3ThL<:lC[E5=O%ol=tRIgB?[WX+V5!D'h[*6s[,Vhf4L,m`^4nTPEC!5CU/,mkf1jELqK8Q.[!;XeKF1ehN_LhFnoLeuaCMr4&!*gKPZJO^='ij'5r%4XOq`#Tb;4q`'4G%ui!RU_NT-l3YNCVgqF1OY,-=h2%MG!eZ-4KR?@W#i7kNPu%gamJ)OZL<`9oO+7r--3>;1$$+_"C-DC]&I1LX%Y,0dh:dP[m-cX'"'^>c<7aCdD1=@Mk*GUtCJVQ3$8b+NRErg+dS&H0EJJko)?2(dLlHbP8C^I=pe4Cs;3=J5G0fJ$*TIuS<P!HNX%D8_S[\\Qbh=]GBN_cBY:R?b7(C.Vfp2-I&@@+PW`lNO^MA_KV*),$kB[GV:CHBco'NDo$r'n53!WJ_49aU.NQ\Nt2d)Xm!]#T:lK%?Z!/hedQan8IFR2.WS,=Kn-Y<Cm.+-<+R]eZ.TIZjDlN%e%o&66LbspL,`=`&J3MpXp06=AFTqf=o`LI%4ubi_63b\C8kDKrd[S*%8fFf!<G!.+/nX(,R;#VMTp:n2Bi(HXNR6f;gP\*Fr9Ip+)K6gkkpeIunrcSM[`l)c`ctK%<uIn6#b]=3,86hlXiO)/HD'2W.<<if%UJ*IFT;@6nPg]&mkG5pFR_VO"-DajB`=u"*[A:/7Lg'^DQOr3F26Ir3i\\Pm;_OY!UH9Yer%q=/-o/U@SVIsEdUS(-*8+LaFeQOU%nei.p>%S__(9X/_ZOO?2%GP$Rf`pJpAW1r#f`mfG$'goqKJ9^1aD@X!7T>q)At*3M>:m)hLJ^>u0Cmi4ItZ5&>$`.50cdC;CW!\A%b*?[XPd$h5f@&AdDiVrCH!20JE(4r9$#>Wo*<Or1Bl-[gFI(H]_3:_.Y0u$K"X/9(QI^e[3+4dCOk9ko8Dh-RC_PAJRQN]j<FQoM%^]`m6ARZSeD[&g^RFl*`,!_c$Q.\Wd3E'(Gfg[Ki@[^hqg%KC6rtq0H@EYAq=fB4dP,U_MWpH[nnHWDH>oL_q,nr.g/WiZAJ5Tob%3rLja)V%@SJoT,)K[sZCqZrsnEYt<"n8\>/4/eAe@,^Y(E&@o7=%,bN$"NTIHjF:Z!P/Z#?]J2QVJ>]P@$h$oFjdAj-'C&Lh,WnI%Uc*u@<mJ)=WEd[M4?W,2rE#/Nj_>I^*0)0f2c)>._DXOcaRD!<%MUH_8i)jk_""LN>(l4Z_Bo6'RK9]b.0Knp&-*'*_#V8?[)"Y@%Jbj'.12qo'4:j*`0FkoeWXMTq$@kMnj92EK@$Xi1@$lNL0(3DQK+J0](5#3)8:!Q5Fu^^V@,QfLd^"+_+1-&s#tuc:_r^\;+r7ut%=^l$I,D0hG2I],fgWn$^4C5SX1lt`8hF%Po*4o,i'aV6]#Y;1;;!XJ0B*m\RI+]fV9$da.MQaJrLjR9cr\><,C63JG&r%hY4%][p%1C'^#Gjs#aHX>1r'gaMnGUqQ(FE]5pEY'>G'Rmo06;e(/lqKr-"1`HE#"?uQ@WQ2f<Iq\kNm8]H)<_HpQ07ZLi`%UH_e57^fn1P4%:.@&oUr+@e9fOaN843HrE1*Yt^`/Ln=NMuFFqs$0jcY3h(uSn($u7a87NJ3j+"ZdA.OK:'3C^d&2?b>H9N6.fiRl1=Yl\@,X'f];%MH0sf`tq'kE`XHiL$1"'CkXE.=#o%[2-cu:F\YS/V7>1k?_T$F;H1[N]S'GW'rGZgLe;!leGU-\+\^_dN'10P6fFbmq],AC-:G3b%a:CR71&2:._l.nue&WM&YpcF,R'7'+-I<A7Qn^4>E\euq!Kn?;Y7chA>iCk8\bf:FN'Nmtbn(eJ>m`@5#SU(0J2(I@ThI(^:)3H<%e=XT"XHeT*q(;(.^NLoRrQ#<hTHF9*&aDW!A5X1'<2/X!nmOk_;]LBf+qe^FAT2l]![eXMG**pni;-BCIh?T?b$YnQPDGi4aRbEt%+ids"U@;Y)R$9An6U$mk),l[5X&)))AZ%5[dMdjC#6\:uYf.O)&/W!(b&8AS<Sni52C+\0@uN14"ko-f9MT@[Z8(&A>9QnYCC<%X%5<q;'<"WqWZO6/W%6uR(#p-=(=gl[E@^I<X#^lo#*u=ruUL]%F,[S7elFi&Y/0**cKcQ!%_BKd'Y*#g$\Z9[5`C1a,Io&1\SJi?S%Pd:aRllQ^>>&+4p&p/!b[Q:>sB=6\RUt;m7Hq"uYB#nYfVOa^M(+e('.2iMneRo-mE&Dobl4LBTrk%-OU^Wi/A2`YEac;aIa[dmK%$_G2&+9IXam/_cCJ[mij7uSP.l/5!;2M*2FDb\UiS-h03U2dEY_gKPrXB%BuKn%!s9eO>fAjkVKf"o%l0sM_QjA6)3$+"T6TbX,8%bW.p"J7>qro1X1\I-5If:kHr#EY'6b,H:qM3@W4c#PRR7.JhP\F0KpsJZ^-@e4'YaaM;gJ&((4Bq]HTJ]>25@QV/Rla?_R7'51uN%&01f#^Q-,jMU>_4"9?D[*m6uNJBiE>1D6J\9Q&?:btRKVe,XK-mVj*nj(2/@(_HjC?kTRuYbWG.1_(SLh]nft+6-T3P&B8/D"Uf=%FS;as+5gVs+aV4PR=qG3*G5PS`0nf4c-+)D<WcuY%;31>&URHo)9gP8TIW75ONi36111#%LF//7+VA,dUqg'ue5\#["1KF):/BIR%(73s[ccUAH#eQ.R]na*XX6u!4c&FP1B/nO*;o;^S#adFWk7G2JQr'<<&;:0U+cVf<KP2k9b_kMr'Hjmn&U.;u!q),2JRY#+pShm[%"UN^3Ep-d4;Q(k&8(u"$$UARm&l_Q.kbVP"rDcXU+sG'2>=Sj<@n]qD"cP7ReW:r[KH*fqNE-+\)&8fbejV7R\r)VbkU>Rl6\iut%a32eB`RHar(P(5t-)d2=d7_$'q^ZTo*t6s[?(8\6.S-9!1dq-@Rk2Dc*%6\gB*j/uc/T-<n;JNV?A)PH^X2a,DJWEQZUjRDch<?4%es[CXL5=@[0/n7`82roZ*HSQ$_\7#X#"@;loFdk`/=3U^lD-ra,YOfU%Es[*<YQC\.KbUQT>=j2;"_o(a96r\VFe%[W=B7H+Y?d.%=@!MT/?B$4(t&uuRH<$ONL;^8#(IN>1<Yjk&hF<PauKokEqt'>-m%EDMP%+r"fpu8YT9&Q\eO/P!YTfuJ#6Q9#ZY4KAW&t,PU!6I%[ZVIqDc>q3be!A0I_DJf$R(kDPin,kb/g[$;)LZ\"IB3i.>^GAR\`6%<Xjt2q"@af%^+ZNMr@n5d4F>;dTS.3bH@kkRl-m+qq?X6%G^4uCaK."/;`Tjf8:eiqcOe&Y/()%4JVkJ!X[*mHat6OXY`0prC0+!g#\>GC^,d5o@6?M$;gDh+G_%S!Q;M++ni<gT=s\H**CL;a%H@'.iQ%18EAV=>EIfr%X2JSL(c)^J6bX5R"@A'\H,UTXuU_$LT5`G:0DUi0]eh_tSW>LEM2!mg>Sh'm;^:U`Rlub^Xc.^oS7e@8M%C=H-Ho$?5iD/[BEQ[2.qh.Ra$a"3^[%A!$+;eAaSEa`smFVsimd7Fq<-(84kJ;^Eq,skKAm9)q=Z?]DUm3lk1:1O*MC?H-]n$9=S%h^I,+cX7b]\]Lra"c$(p.INW3!;E81=M(C0iKQfC[=f[6Nl%GT.Q`U+nm@&ST_]GHH5$@<Xl0kq5Z"bG%rdKK6oDN*@M1s(4c7pQ%Ok=pe-s[UNcT6d_nHM:86NN!DZP\U'[Rjs7TM.98bl0-n#(`eeiX/LeFeHZP^iIpQMLeOSOSA5M6,k!Ms)04S.!knfeBV1^jIEfK%NOF`b[Rb2?,K1EP&5Yp^d6n$NfL#s2S738CXFt;,0EbRD4XoMQgWjQH!]!cF<rlMNO&-#bMs<r's,r2]h?ukk%OJ3HC"ZFqRKn)I%ms)q>i;VtW*hC,(`Mo6G?-YN"Gsn2h=2>Yf0KH#H3='TS[u\A*DbGpK5TaO!#*dc8Pt&e2+?Hjmo7P@HGI=<EY%Sts,BR=6<3(nD%6t\crP\kKL6@MRBL5@\eR2D%_-k+'O&Y/ndVU,4p)8n+dic;ls2_*7NVdt'DLBYH#Lnde(94g;=,qM\;])a6>F*kN\`P?)3+:YMJ%NB<S`Q!-7FAt6:%a7;bmHTMuonY)DD^aq"fVR9F^mQk52r0N75dMeoHa5/&./F@_4K][#[!MLdKFu%6LFY_u/@R;#*4U.t$/]fP0%V7(&bL!YDN$J3k)ZF!Hjmf.gZCN(j&HP6@]-6KNqo+K&BjtFg:;7FQ_oRiSdE6)feX>o@HkFi0U7W_;_,6;?n<>!"TK-cUD&*BiI%UsGtfh??jh!Q6FhMN(X6cK(h[+p!dsOIY?Q[F[F0"F@W%Al'+R`^(#@(([a(eL%+id$oPHBF<iWZ2Y.g3BA7b3Mq"tU&e.J2PQ#S%XI:!Ek48_BoRP@W;31E)#QhIVFCF*^<cEJRW.d/>1\&QFJ-;c+"R_@6&L`677Yi=12E*mr@aRXM%OZ\o\A3'5C4tk.$pn"?/r?kF%O,T(+O@5Iq_,X4Ld%r-'QcAk^0T4C]-9T[Cj5Z7&O[CL,m?2]<4n;6(Gkue#ior7t,cD="O"uRIDO7"!)U>Wsf!EC8K(")kikJ'p%:O$/!*Kbhg4M_<8O(Ti8Q2hb`6jNn?i>@50&!.KfFb$89[5c_,?m01L9(@"Wk^N_#\>X"SYsC[qNLY34$h=ofB0:glBN;GB`$>;_%K_uQ\C1,$%Z5(9YX#\+&8?petVM`MjnVAt3S*T$^K#Ach4''DD#Y@]2H'B.LNX0.?@"Bo#B$i1L+l5\EY=%A4^llpN[n7\.`5")9%/:]![NoQ?I$H*?SK=EiTNu*\Q_VKoX:bHgV<V[sc4q/'gdX5CUB$\j"XFa.94-bJGXchlY_*h5Zq2djNiK6>:VT/IF_B*+nG'*M9%hM]fWW71i/MrtMs4cCW,[F$GYIOJs#!sH._=o^r)TX0dobHDlk.qQ1@pS/=1"N@#N)Ri[PV8@`pJTjH8b@nj/<f/A9"TX71kn4[E%Q8"-<0Sj6*(`n@)_/_5K-tP!EK#F^]#n7'Zd'b#0h@3Gd&l=QfJ62m^'1J$:Y\g=#\-a9"Zt<5q$#1'']YH&)9-UsPHT2olQA"0[%`*O>sX#>5;Y<eeH/d@CCLtU-0@:T*^32m@%M_a+R-+KZDBS7J+-tTHDkpQa98s(:7>+Gr7e1?<iJ5a?.2:U8T0gIXA'?:0#K8r6f%a<H9eKh<#7j[:\_8(R?gSC\\TUfhfRQPe2MXM]XK3Q<mBj\S(J`#*/<,Y;0,R5Rl+<J<1KeH/aE9XE5tQISj0+o7ok<.Qe6595`j%&S%ItO,U=NA(p'6/ddPGJeg-p0_WT!rj]T?mba+j;AO&C6S,R"!J$u!HDrf7%g>pNe,akYgku`\@;V*A!`^m_nd__P"^\)JnUq1K%8WifkpB6)?=E#23VN=kuPW`dr,Ibap]IT$M!UsVSqW?bDE9R]Q`),[oA:nO:okLXD?Mgoi=1n*T7+#bPLdG_LO_V$]\24MXF3S)0%Z>FYO\JpbtXQK@e<e!=>62O_gDd_V)@F`N=5YX>D5e*a9/7i?q0c8:^d>;>"ODb<Uj2.ckQS=hEbG%*thG<ro0bcgo6'2+86L67M%6'qqJ6fh,J!-`iTT;kULiM)YDMo%1MK5_+aX0&`/EJCu_!n%eSQ"$p?n"lHiboni+0/&gG>'][c>P;"n?B&<D3(MK+.XL&'E*!`@%'nEuXE^!KmI)9GJpD:5=.7C,pc30W0]VV#CA/_`VZY8A#>SP^#(6)4LSTNc*Sd\PX&EqoJm)A%ao51?E?aD#N643Vs@!%4U5Nbp3%meS.6!"Jf[Wh6.&Armn#d4oBG;$!=7;_]_O,t!?kEO]+s9#6,iN@*&XFIJ(>FYF3$A%AVl#-mZV4Xtbdjf\<>LpE8E!Zjcf2'RWp%9KdBsf)[lT7)u*3TE&*%\!`,M42;sAi0)1*;_SQ+UjRP$JLJK-8.Kf"Bm\>ocn(mSl01eP@9kH6#=LZW'e?iVD/elE?1ehG0^JR+%*i7\_WFc6d3_;Xq?Xu*B?!ichYo5FRf#[9THH8(cEng#!/W<W<k&&0q@H)ar&;r$>9+V(-ALEB6VC:Asml0,-_ihEAD5WK/TOZO@%\<f>R_:A9!V>-1<?F>>`'_>N!?4bB02A2AXK=&i#c8>,bMXA^Y*^X?$\:OA5<"47PEELtg5VT4%q9ZPV)9Z^C2@>-RR#tBbA\"OU%]><r6'j[pE75;r_AM5C8cstMX8<="gNG3'r%0/#;'am$/I,mkYjdH0YW(Pi^N0B.O;;8I))r#7f<<%u@V;3V8=^7R]^`mg\]EVhJ%*8;>3#XF,9)o[;p'+K^r8F\%E<0ZWt98KMjRDI@jBH(J?f7$6#r?TY4?j`2kpe7?aS41U<$BiDT5*k5>\>bSYLK&2O+&XF^7K?Bt%C_9A9aBaRY#"oH-kV`rl7gk<L0A,oV,C/j,<_5QrMlTm7ia'V`W;sAlP?J8Yi,dQs#*L<hc@(48g^DUunmLMu^D/0;DZo9#i"r,;%OthE_^b=1G3e)rmUD9DfajF>l>%/;0"G%I+G%%LQW+B1@fC3L?&sWY595sW)\-9sjE)toJ+OAipE/PKGLsDP2[f@;bJfkZ7jm!3.%<e(7\'dUh:Kq]Qr&(()a'4h+^R3.mJDCr1P;SJD!&Qgj./4*`XFKfBl!"gbjMY*-924T^B"=B+]`>g?E8d_=SEnLo%_SBATNDr0?%C@`l^1-TGM;OoDS6oc$s\5@EU6>BFI@HBo#T(8`5>Q)HU&*"9p:85U:=eJ\;00Ln"_QoP^.jB=/e4gd5>,s&[:jP/smoPaPnN+U'%C?EMQ\AD\1@u,#1ffiHr9;?bf#A!pJ+&O(/Qpj8t_c&kBEoO,_Q3U"/L8bgj%&;ahU<*GO$p;:]Jd=25=XYCLM87,?A+!;QJ*?[_%R='b=>X!@aKHA;F6[063ZtT8e;\C0o8XO=Kg0DoW4VUp2Q3ra<E'q6N=@oe(Z;JMgJ.%8#)%SuKjtmW[:q55!.)at.6UB!;D3:bk%%R\fS*N3sEXcFe9</t[eE'C=#)ubtg,T_=?22Fq,0Z?)f[:V=TO)kU5(&DA4JTU*X!>,fMbNc-&(6rI88C31@iN&(8J07hQ(R[[7%>ns?!aOO5!ese5/aJkj)&V>3<U5^X"[)FB&%Wrj6J,^s-++d<@kK2>F@O.Y).jJA/Hkl=kV$nhN+]l!YVrP[8!9k=o#SRM[fgd/Q%OsWf)\tYb4P7\aIk7r*U-9-K?fn%*P(iG_d9OQ#pWt^_$Z5f+&Ei"/b=;<9l[Gr[<f&'L5JLETZNP%ei7Z2(?6hs+Qm'O26fdT,4%Pkb*4nVWE"Eba&sm)6l+OnoIHJ`tQF?d^&PhjN\6e1`F1%?r*WrfiLHgBkm?$A]UFWR#&C7%3Y*5?qgSf9&s_jF0M.\#P!]d%>2L%aF\X_UP.,dXC-k[L+8op;j,mhb#6I+IR#$&A^l2pZq=)Yf(-oo#d-)^#Ej>5&U'tFIt74Rq$)PN:D?sU$&!6<cR>?Z,0ViX,B`N,%(ci,pBKhnW2N^5A@JFXIX!9sG[4IW`-hh.Cq2rVuCiKP?hTC_aBoRo>nqAm4)Wb]RW="Y.7Sl<Oh36t\<8:QiFjm+WX,2mk<HnTt%H%lQhLkFG.1X&QD0F&5IO.fR@K0R[;-S/_emZc(Q3qrtcTJaC!*OqE4h5`qM1KM"c2=*&eR'1M\d)ToG96:Vm9aGgA0j#XhO`gXH%$l11MJ)d,4Z!5I3n<g>R?m=[,>(!^Xih+8\)9qsO-(1;j9f,hCkOWN&/HS%pHQB&E(5WeV*fLhYJW!=O+r\9_jjae4AU.TeU+A$Y%Eu;(ufj+[^!6PA3(m'Q:BUURW,q;6/%/PSZ`e%Fbf'sHM@&2q&0^5*?)\75`/O1#(LVrj>?@Q-7L]oEB<5f[3P#u1^jZ4*c.UJNc%X9m)fg^nNN9d%jQ_+9P9N4dBHI(B_'!b8T$hNA-l9$!i=<O=S8+p>oPh#lY&(m(G]7R">8'"fhZ!6)"K!a;).mUoAsMf6T)V:o&E%ptceLYBKlV<Q(!@iL-Nnqqn(3e2^!Pf>pJ(M5Bg;(:ct-'W*_#.!"^bOMc/k<S'XH(+KK@-EQ&13oQ?T@Wr^IKiC%TA?KS\o1YYK%algRA,hAYHYrt?Gb(JMC7fa<Y.GetkBLq/FC?N.kk=1+QWLOHDk)WGq@UC0/?-3Cs66RMma`u@Hk_i#BO_Yc*`MDa'P8.`3>ESI)%%#0mRDFk7L%?.fU$fHB)8b!-4ef!@uar_*F(69jg<^O,RDo_E,!1Ar2+Igel"(4qP`t=NZq+@6aV$L^SOH%f'l'KK+bkUfNOHd][%l3bipko=Vh.oGKk=:%S/PtBP79-ZTm:/IPYUDUSYasVT5'KM2Ph,AmoBbIK1[("Lu>'rs!^js;3.QAhZj/E@BQn<i9,8u<0/BR'`%@#I_r:`/b'q1K_?6$Ztk#%9)P6bAE[,&;k$(ic71OT+)Y%5qs&Y9Me#h*=Cl-I[TTGSugO`>U:9IFQ74ViQA.0E9jE6rG8)GKT[F%+buq7&r94PB`HQ/I1>QQ'fT@%\e_\;D&D?qW?PmcQLLG8fc=BNQ?>l",RcS.febHWc$7j-7;HC6-p\nZ*LY&]ZTsdGOl9p>h*J8%%0u=Ca$T>_k)\3cNGY9%T+XT42^#Ll,0pJaNT#Gip-,?*VXF>cl+i0P-X-PRF2.P%Q4QIki>X!$NC\-bfW-/r4S9g"G`IC%g%1u9r%)[+eD22fFR0S=1*'VH5<LjUK/YLTIsbLP,ca@j;piG1-d=$(N+V]$g&%oKS8N0-l><0oc,Q:9W?C:jU7!m5.U^oEe=4[!$l%QA5+%cF'dc#3/rEl;];@-uhQCeVCs7:.l.#C5>2D]cCi*]<'jn%9-*!#)k?u523`Z\?*,9$P73fEcu$+EX?;i%i/@C_u2)P.TFd9kuf\b%6m3<<29:U^+AX$Vn:pCOApN`kX<.s3]$#"QVD7rrY.=<K/-:d)&;Kc]D$^4p]^SQ*0SD=T-7[d/]j/T.\*ORo1[moCNQTThTBd9D%lMQoYQfaa)$[Ea&Q:^#4=enY*ieUB(o0#pINsAbu66'"e2*Gc_r-3lURPZ*Cf_D+\(8"^LHo6g))'hH:196^EJ0L;RH)#,ocsTlB%/94515,d&;p1cHD=P-O.rT++UA>1gG$O(#K&\YL5Gt\:Wk%_O+J/Xf;a!qk9ZVD`%M:W^;_>?P\<\Ys(q$joPVrG%I[Ja(cH$/+;%q<EQIUCA%lXfmomlXiQEbBlQIf"b?cX5S;n$:6(F_"81\Q\$bb4PhCOaC:Tooei6h7%:*W_E1]1Mi$W/"+`iR<brre)Y3kWGIgsa%71ZY0:n;D:/gqX\MOs#<.F=6=#FX1Z?^h`Z:8`5D7UgS_m]?sfX:%a-e+mYiS(0Ih_2dE&XQ[FX?>-X75Hg$1YA;OuNM=18;Qp9j%r$n:C.=mS'%:<rP8@,*_%0V$=,4DH2iS)L3?AdTYn*BlXa*cAV1t=M!*%4a:JMA<2Pok@_hT;A3+_mZb.Q(Tgj]ZTA_B*1J&^Nhc%:pp@e0Ds'_.;B4J(*JX*di[So+9u3u@C`U1ed1[k7AYToakW]5"L#)&1M>%0Hj;h)0r@sU+q[BX-@Iij[[?7>>dS2*5Xj7qjR#'E%)$+7bCJGEdh'mdkc$AtoU6p[^S^@RE6C9QD.&N;/6hn*dZ+*oP?QH(oLb'u9+;1&1:rXmQ1^e9KFZTjehT3fR5[<1j1LrO"UMX-A%>)(8r%'#@$B?E$Rpk0KgO2p,hKokB3X%cPH[0YGUc7%]_lLH87G%mJL$(OO9VWYVc/]qlul+J(Qe$@uuo0DT<brChp[`nQsP]D[.%eNqa6CVU!?+jCDc<JZ#n1!qs)JdkEt<`F)hAR74[,Wbt364db^6k+<3ji3BM*A[\YRaWE/$JH=\h3G:g9u8`%M@V$t@#Dn;^rK'$%'g_da9ErrqF9JT<$8-([\JV3%:Q^>H$O!:4RB^@<9#WP'RH6LjG``pjk[Da[muQ.(`"P7>KNULDUmQOBisT$E\aXl3"T?</+*VIk%/'br"S?o+Aafb,NWQVsUI(-\=K_uQ;I$hfRC=Y14%n09^kb7cdQd$&02`8r]X=Fo.lO.+?a"Q[H0[.eB+LN@C)!``)l4MH<b@E@'%%!b.G`)LN*jX.]\<hKNYeS13$0,7g^IUms&I[0Gb0dVa%+KAu#m"tqj/FF#)R1'@8_=L?j&rI5D1%I!KIn?UJ!pE39E60Q_T.D'H%M.k3=NI67YW[E_hd]g^;&O:gn=Z=Sno#JLINZg]oHkX=(%^J)=`Jr.La2*H%E!8HbG9b+/iLQ4jX]tW,/d<$b8Y\PC6Kl=pSE94A%=*$PM/;]G*iP"KC.iD\07)^-joDW3jWR'eE1+F3.*l7@'`,M0-U"_EX)=a[]WN"1u?Y"s>V=LHs)Dk-W22pI*Ce)?g4J(OO5\Y=P%P;=SFfk9)'?>tJ=gZ;Y3TqMD&Q,a1.5@4p(&^;f&"'(YV$E0(GP/WYnc"@[Y@SakR@T7AZ2AY[?(i?9$^6UkOq$7;4GD2ZiBLnio%nLnLnC\eSJ7#4&m.c+8-Bg1:O@@bY-Fn#V=!)pe*-JE2OEX/4&RY-4cn^ERfgCd1b8M!sI:I/fpi`f099Z@l@jL#8B`GIE9C/tcF%atiWCVdc?hTP\P)`<\ljR+be%Wu&>CN,a.WI;`]$oQ[7hPo,$[/5^+%:H[a<WSoX6CC2NZB9q:=3%0@eUW`a%NK9i%<D&u[N_]g-%11UCLZ5'$bDh!nbp^/l_3^ufZ?uL,@=5^,-LnZXJmk9U<#$;2E(cI<@-_[!"Y7\oX7m"rA7#;:O)b+^!@)J.-)]EJ\arT$2)Pe^b%4J:^2<PAA75Jh9:q1L0]Ok[ZF5a8d#2Vre:T)tn*e5L6'Se)3*Q:s%H"X*>H*#9#X$H&b'X0a:QT#O#1a9=b.qM:Cpq!K#cS#%i[%N&R\e6mjN3<<XX:(/#*gJ>UO\``'Z>HnG^/#4S'7GC`uE1-I@E'/(]/Ytc$?+ged2ai)Pn*$,b$=_^$.YpQ#2]&[?i>bfVP'-oF`%]Lf<jJLpqT3/ottS8B:&Vb=fti8j"kV0o(m%fnlLPGt'Pr]:/B<%-sY6FghL`6MLRehP4K"L8;q0tD5?V_0$&k:+7jS^sVi5P.NH%jooG2M9I:Q'J'i[)s_F9r$dUR)9R$?W[(d.f#g-4Jh'R@V1Qs_)]!TY7:B*UcE9RsZmQkUT=_]jcnDC1fHcL"-gqL;7Dt))E2iU`%es!ulBII):2Aq.*(rg7cP2<9M>WH-5M!dJDUF5dapR!6&h;D1?>unJfdX2?PUC[@lH&_CN6Fr"nU`AFcclGg[nW[V(TR9=p[u)b&%C#WA]BUV"1H#Nhaf6EKtQVR/+3;K>J$$gVD5m!0CkIX>R[F)N(X4lcm"9Ait'rC\l&H@n:biP?`+r&K^9;(8PR;(O'+_$F4!=OV^%ai`c?")-BMRq>BNA`dHV2t1;OO?H69q])FUM8`H$ML6T,3TK`#]'st99ejYKUJ?[r>[oD;5_7\:k1cRsLtAD_<+08j/!V(Yo$K0/%j#')3?55<ZisU_^8rK.J/@hB_3>/=oUaBYHXr_/jkAc/)o9$uP^@JP8QjLQd>N^+!`):h&]2[mMB,VfaT+;1HV0g?"I%E3n6_0Q[%ATasLK[G-:E?W&^bX],;&3!:S=[BmL(W;`A_OVZRIR%FsB']NRaY"3=nVAr9c)H(i;>G7AW(KCX]4#1T6,L2a.M=+e<W^4fpc3?B%Z9^h:ZgFD\emkdplQH_ce;DC:Rbm>HS#^U*#)O_._#R&9/5F3/*>D'rjl90"gcFUf6F*T4Z+r<D$*k_P!1i6$)+"?25$fqI$m`fk%9&``N7Ni!Sa/"Rg;@)":)9\cH;RM-qV>Si]ZD8?Ic\*R@W2>fo$%P<eX'$4VbZUUJ\b)==;\63nPg+Dc9Yl%j!Ps&U;'4u*'M=QG%kCCXfN8"f.8WI+FBTVXuP4(_.#u^:rn^tu&T<g8L:;q'XEGeU]pN\;V'(E\mAZ[n`cU2>6JT[6=MJ&-Gn1ls\DJDE;c%r0WAi\&V%n?QXW9k,_S,a;M#Qj*p>-2ElgZ167^d<GrZS4)3?_a]q+A.re?&kNKX@e`3i_X'(B(??7S70+5T)FW[JJ=OAEQ1p)Y.M`1kVqV,Y%^Veq^9/A1">Q363Jg.Uo&j:Vh.?#M7D*ZDUfOuXhX>6TV;ufO_R[EtXJ5DI:c`/[BTk`bPT97ZNX+Bh=pH%S)K\E\oB%`["_^]Dr%(8/;q?^tETY-s(Z[tea1E(#;B;i3=f'\%Z'F;eqWekr*=X<]O!VuT-OKI+R*[WX(VRq?NN<M0[&2'=7UAYn`F0!0!?!jpQVRpF^M%[YCNcLMJJiW$mSiUV-Y=/"fG'':=$JC-YHJ5<%FhM&@END$V0t%.Yn/=K9Q>*-KJ2K4pK2:)J_bMR'c--l+"bH+LD,.*!/,7uPY*%4R-s::acB:@;')o4'(uq\[_h]4fh>fM]'h&S:hM9LN3oI!Zs0_0e==gR1@FFobhEWTGu5SO:S<'Qb-[kB-%f3[Q\n1-<dsgL$#%!%.N.*.Xg^[#]F"8f1kY0_ql%ltPtgSN6c;JC4R6tnXS]/*qbiPa&>Hqda60/s8f/UMmIC?oLuh,iSgMb:M8V,pU$Zn@k!Wj),!kUH%(lD/EY@sVDgK.Kj1@+5;cU/f.M1k?`Ap)7I.G@4o7bJYG08lqb`^ENC(!Xc&O]_+EkePE!"BeSS9A;0kq+.o%fUDRh;f*WGHB.Oi%p<-A5CYMpKq?CZgmT0duLrA!Ab%\O,%.RZU4/6^Nkk7;>5Y8AI0V4+,7F5[P!il:_<*_'jjm5;GU_8LeH+u!'D;4u=*<(Gt6<UZO%?H@BU#u\cg'EY#+<<*i7o#=Sr,nO']I2_.\61Zp]<?Pt:H"9\S`2Z+B[GG/iqH4mt#>MVN0*fL`?kSbsX$4N:IS&LsNC22\ePp;!%@`l+8MM443b!T7o^RAqq67?O`'5I"<4)5Bs?p*=el@O11TqZ!)1gd@\/JARV$X:L;S]42#POO-8q@QQ/QGm2rV[VA=bHaGlRa4iD%Gq5HT-!JQKa*FTP_-1HPiD-Y'WX5:cAMG3hj_h7YNV1*h,(V1:QgMH%!Mn`j21SCP/3j;H/.f]%.i-tr/rr?.GjSZZE]PeXIeY1k%Nqlm9eE^4!'WDc9jciN/f2Y'G28];sjO,)h$bd+&Mp]RsEto7`"4T-T;)P2a6,+Wo[ii&C[TC+o&k`P;AcMou@-%_l-W'odB$oI:%J=ot!#b$L[4NUdsQ$/MgLH,6IpG3S8C',1Rn`T0d-$^O^r>casdl:tl1KHDPU&^6`U*@IF@gjts/CmL#PWLgZkkJ[-J3)dk!Q5r;%9PKFo&0NB))_nDAVn$^r214KlQ)bnt3tiVAL8;eD*r0dWCWlu=3Gj_XY1dlWXOc90#D&K:>/eR@"S*^hg'fFol2""K4T]?<-I`gt%80Km#`PC32km4+^=^WlumR\W70-;H5S5q?s*"8GsZUt3=ilh,$?jYkoFpJOE`<Es]`CI-U<E8fB5uT=2V[^<X"d"SV[+h60$QE7Q%Wf:-`HEr3!jG2(m:U_eq=arsds-8NGE$QIa1n]8s=:,b1LfWW''il(a8I3l-EcVg$`IPH8X@@7SD1_g<(TgI]5K?*,:lu.?7LJ<<%5WT)g!gL!6R83R(8ZppV:`D[Ng"\-/nq%#/(i"nRM(((uV#4g_NX@_Y-Nd(Ke;SC9>qE7Eql1:[09#_L_WPVNi*2$DFTJ0?YOXsR%'VU=j1oW+oKJ&]7!-G'Z!iG$\aitP.@%AL#RH+`emS0e6+lliQ9/+?Be%1uX2fX,2&*kZ`!TB?IG9*^hjuE+$71*2m^.Ju4,:G#-%ami[A/Bs/tOK#nQ#`6]EAdkXM&>Mp:f`d#Of9pn"(IbtEfDpl!d3s`aDBW=]4@03ZO*-b1Hq(DV,o#C^G,UQ6:s'nOJp^mh%i-.K%"(QV*B"Oo8,f#.+J!ht`S<&\oR$Gt[T7EC5A.k4J@6@kVI"^SPpm-D0i(.s;g+2_mk@-SOpjQ^n/3"e+2(4/(5MTX;_a84./.1se%Vm2bZMRP:2i'KI)C6t@P*/E&O)=P)9XYmXmk^C[`L[W,k\NlH',RsFhZDb(MPS=7WX]T0Z%g8X$a2N(s0pi.?H:#2I]O!Bg;[DsF%U#di2l@W/,FCp&kmfAOCkZ!L.as!]&7o3/,!MU#(6AfFk-F.t+(CGg5qKXNZ-ks";"NQ!M`ror:U.7A!c-GB=3ISOW$K,A6Qp>HL%gBZ9\O27iWl#$=ZZYZ:alf1V?AY]?W$$@Z>>?5f#GcWNm9+O<aXFV%HPSE!t?oEZ_iDFWr5+Nn8M<0jM5O]m"kAs,')cZZ!,,iC(%f$Q#7$B&9,M.*DXN-AoV4+)WNH'GXFZC8kQg">L4Fmrn[,*XP6Qj&T1)?>%P!@&&l+WciD.Wq="'(nH>))F"S!q-N$F:_7\IH(m0%;&TXY054V.!Ep[t%n8;ZKiJ_%XR"nV_M`"kDCgq49rtF(@qCf#e*&o%45<+)\PRgh@8U5g@7(&@]*!l7)1lh'+t+mEW@T..Ps[P+%[iV5nX[iILeQE+BUJtBR9&5_bMI#"nr.mehCKh1s-?g-QJU#U!"tNRlmf^R+EoRPt5g(CA(b;kfq;[=n;U0>ko)GY8[iO;1j>u`9%nf@;L&<N`651%Z1Q'<Qq$-Td8ZKe`XCkrPhh%[qB)?'88hhZP]q.E^:^qEAp0A)Ppf0@kLXa,_Y0h+6oN6.o#a2%I]q3A8g?]>7`%GF@:7@Km4h6pTr`Hd7=m%U>;q/"a_;anE>0$Z[8@%"#:!J[,lV1FcD*d4t0qNO4p14Y[+c;V*0(P!4o8D@-Yd.rShh-5N4j@U#1W%cnb9@[OFV#.eWM[<r(goh8oPo=dI*u'p"9'oikStCU<AI#_1>-r^3XB'/'1N(,197.n\SXEiOq<n>LN$)lE#Gbm(^F0UBO!>mg?g%1AWNt<%YC:9uc^'6dN7)p01U4+"Lg,Sukq/9=*@7+`3*W(r+jb'H+70nA;?#ZY:=]3_dV2(R)*rXQT:mB46iYq<_kuaYh-q<g)MZ%_rq=lD&BgRj^o'ZDS#M.,^i04hfX[\F"t/8EP\Yc,iJ=YC#6B_.3JDj#GbgrN+10D5NI,C>E7`H)CrXWI*J#;rTns^Xi*Nig3jj`%Wo?UqA1BICG`k_Dq%<m%7:X`pC>r_BQe)@'Ti!%1FC$E@IYkBX%c;RI)_u4?G3-U6e(_!uB!ED?8BH=<s%V`Y'H/5Sp\QJO3<U/E%Wl[?R_bkpI6].T%Fu)GLp_b2H?GqM2dO=H*I[CI31e?Ul0=Mf3'n>r?Y<*Z_Xdp-$j&.H,5$2&&HKs[dOpVfm3V*%/UVG+d>Y<kn%gN12?c"CIZl:<"'lG<2GF+uqm4uaMD$u%[:rJ)iM(rLTA0fKsp?=2`C_Q]kZ*91U8L#j<+:;13'a5A$k>uO,ll$?#B]">t*(+!k=%14p+tQ#HshT?aHn'XG_aI1/U.J$]h(aD++5F,"'0]u=K?5FDlY,@(%hcDDBX1n9j_335RfQ.af*j,>T#)`Qni=mQP,\Qaig6"?"9%0RXo!gQOR*("SiD2&u(TVUr.pe+b8!k,P6(rF=6^/,HY[EL:oL[W,;mQaYW@Yt%"0Y9D4mJhP_`8)%8kd$)5%e6;%CQ#n\_ijC,F%Co(BDj&76R<4O7O!mE*U(YNnm,\OfHh`&@pCTAb40/g('YY3*Pn>ZU.s#Ku[$X'1#Ae5NDI--C)"YN4l#CEKQ8nc7P$PnO9h[Rq#%'!2d/8@Wb1=Xm0nQ[_as/4@<ejgm*H22D=^Pn5!@YWE.<UlPQ%:TcD9Rd\'.)UdGm?9bmi="sp2Vr,;Gr&VjU?[qk4a1nHtOIlLF%s7uQLI<kgaIeSW4q3um.ji\bFgHYZ9DuO>aoY:=o^OH!lQ0+_=omco"T0>C3+92+k5Q0Pb?iH+9rnZK1j7!!B-[RTbPYUMA"omJ0%pq&ch]fjrj^OMfQ5C;nmpOE+in,Mo*HPFmXEqMVCn3?jM&-)=ka.&QA#q"ae(\qG);>9<"s8*mes.B>`]79b-dI(@hnDF37n*]$'%Du\c<*a\[(+5[$is7['(1`lLcm@W;8nFQ,KoABT9^JW;Frpb2>s2k95r95rE++E`%IeUmtqssW6r82ttobRs`+B81Q5*@1IQ-QD>%(5`7=PB8P_:r^nD]O_e8]&H]!O!,)HZ$IDI;^Es`qC7(,1M%K"4m)uOn_#T&5O't%Lm)`tc0i%gZJMYXZ2$ZTDilmt/3=805F;"H%2p`'30g>\hX14dnA.0V%07K,4.EJ`n#LS_ciFp6=4unS4+3de(Z]f`q1f8d&:nqPGr0i%XD3>>cEUDTh:+j1#39]D@NX%<d%TDHj%CQXB`1lj.=;b"DPmNfE.n$r7*R9lMML>Mmr3UY5DZ6fa\bD5>,lX;?-"7+RE"eh,hTu^V]NVd7X/8&6\kRa_kg&J^4>:F7m*"b4B%GUAh7E+"4X85*P!..YlPf;s[k.As<l`W/5",+$/SiR^PcOQ]:"W@1@J]0mI>2p(UYk38&gZiDb<IcL?E$[5sQTr[0q>;2HM,sj!s%Q84+CI@NSDdJ6QVqJ@+u^<=fk'FHe.25*ZKA_BP2=B9DY"h[Q;0"Q&tM0p8N?M;",F85[t28_F`=E4]X#1A^GR9%MWO%T/_`'qV*%*j&\/Y8LZqL]VN2cHmu'-.<&[imeH"eEAJp5Nmn1nPh]P-rEAEC;Q'pE"Yc2'KWL4;'+;Cl]`MC>UO=f9<f2=Ziq+@BIjUe-'ho.%1I8FRQ:r*K'bnN6Ia[#Y9WL4;A!24E3au.j`n0Lr@7Gq"@6E^0@9IsT?rEra&H)1md?qp`Br'um-Dd+W#=HbY/P[WB9MJoP,rI1f%L"I)9k^[C%o-`Q\Kkp\]>AY-L)Pn3bQj]!DqTac:7.&IA$k7o[*,nH0K(NV7OC5"QR1QsBQ6$[;j?gX1[9cP3ROB87&26l;WRGI1%.DY/`:\h6<!)"b43/Igo*/:D4,1mcu6N/NlOT6ISQ.)UeYFUH."@\EuD-kZR5d^=LlO5d=@,mo:GJI$j`"CZO8<ujil3fR\+Pr2;%%CW$:+&<u\-i.R\`\-(n8bqq/6a#9F-rP/(X3V72;NIO19?$%jYs:r1YeV6q.].+sP^>P*n#nY!k%`^)8/Xjs[XN$>(QVXF1/$Ig%o/?U>Ocp2j>S&%64"a/q3TXBNY:FuWVpuJ:%J+<_i-JkP(0lfP)dta?S4Im=q/j.#fuBjN*4i84\QOfQkfK&:aMA9[blmhB@4J^C%Z%Y<5P56;4l>;okrjU4X=?I:nXkgNFLRS>DPXlj<WUS2b8]1chq>DKF&4'4C:ZVQs;\%59/CEGZ3X`0%"$s6hJkeV$lhVnU[GV7(%<Fh*=d[)YXa<ci;7'uQ=mO5Lc_TcL/ea'b]mUm3:?DT[0S&Y>0*F\21cIsFmd-RO!D/bG.:\U_I@m3#d7%$R$OI`0,'KNX9h<n[I%51mn?#=9Q34NC:9AU'Y(Jn%mtI9(0-%DNC"1NI&J"JENgqi?g!EItlP2UcN'J*5SuXTZZ""=f+%aB'7=2#q`P(.l(/-K6Qm9Q;g]%FoA)[SN(>;OQV1%79qeg*(eOEp'j\fS#2L9]V#9rQFoJa\bKf!D3TV.n>O-28q','Z8$F,l<SW,OYIFkU.\rQ/H[fZW1B$Xc:t6,%=5XqRD_kE1KKHgVp:VBS!cij-J^\I#c>"WrC'e47idbV(g4Liofm&%J3h6ONXG1o#Bc%(n(<1*MC$qrO&gbY..gqIS8_iE_@YP^_%?KQ=c=BW!tf3oQtZ>>tJp/BQikbU!Y0o:@s3\AG)JOK:W].$2&A@-g\MZq5@Z,,!<5:H+bZ9da`%9apPM9_)F83m1R>ikHkVM$FC%Z7HKlKKS[T;(71N*,%opb,s,PV3GS5Z;-KYi^!-RdlF3[a[SQV5<q\,(RiB)Iq\M'Vo[EEP80@odd6I)]p(`W,:Ojb4Rapqih!LI%281X%E%"h5C7&,j!W*eDA3HihI_D#T:#iAE:T%(*0/f%p)UUnX2NG7APO1*"G3c]6%C<F^[S!J$VnUuXFr-Z<.NRoP<0&Y>l#EMp%pNW'A"%c*I3hC,;lcQ?:D;&97(nD!2*i5iMmIo+FZG!.W?%?V1d=tNP-Z)"uESosUk1GUOaJsGZPlDS+EW%R@9r1XQN9"5d>TKDb%OR#MH`japI]b[Ck7hu(S2KOc*lD+4>g9AG&ihmD?0":!D)ROlB%FQCEVHIh;G+P1B!CE>.e(G:Qgguj\!orD4_dZPCVdD[1pj8>X%7aT8>F4@]/.X*MhR#*=RNd&d1T/ZBSeLe4P&981?f;t95PKgor.];;ecn6o@V;Y<I4l+tPYus26eddmh]4M_ZS*LS:9SCN$C(c6$%*uL<pZn8e]!.'Uq_gK7\Y7kMQ8_mmFi5dE'T0KeYKmHK-]^-jQ\u,iuDf]3fJH_dr<hrX2cY>50@=+Gn66=?=o=7EgQhP-,On5B"%Zh@Ug:7K_(-6uQT*oetLF=><_nUGXe'Y=>2@oS&[:ZjtkA&IL,JDiRoS:<H$=*:R_?e=f9Q6+L#M+btJSuY'm1#"1:H[-+qG@%_\%%$+[QS4f^8>(@..LsM-:8ua/UF-])A1MB/-0L&6drt/*fdVX@_,Gs"aq=uKn9ers!1ihK.HbZ.JE]Uak"Z&c*qtDoJ_CTl7fg_-O%$,mm\i?)UE*H)sqf3A3.&P"\%Upls_*gYj^K#=rGEYrGC=';k,O$3%>VYS4g8%0.)n[^oDNP-^%D'-cr3EMiVA#Z"P7I=/qU1OsA%`X"7mmn]>ep=#<>H;U-l.dSk6QbGY#,ATRf$/k3NM/p&Z0,Q\^PTHa-)+eV_dpE"Eff!`U.&/p`GGOMZK"hFp*Vfg$A+)lVYs:_4%e-=ATT7I1lFM).Qs,FqTFhafSpT5u:C!]$_n:r.Kf;G.W9W#TJaro=2A\R.\UQM-PpN=$$ge5pnJ;BqNab&+_l/FCGH-5'XK#54e%`uUTtf8`oHjTG.&<9=)C]"eEpPc#:.YKB*XPMrn-!o$fslZO.cf4=GK(qjY/(M@rb,2jKk%QG(-bD3(VU_:[f)mo_,R_8(a"$3/L%'-C%OWdQlYf,Og"@bue2=EI#KD1N/E8[mr/l!\*WjO/t.Nt]?C6A@rjCCf;s`TRcq1:ne:E1]%f8&mb&[EYdkr:O[c>)]@RX>8V/%PkKoB4g-qG/gshj#RUMGcp;9Vqa`.`OoB)\_=_9DVfA-+-mA2MAAbtn[O)G9#W"i.NVEGMPf_-h\f.n=E*CFflic;Jjab-cOK5.e%fFaK\gWCLRMWoZm8P/*<OXu,uc(DD4PWk/&KaaDGgAgb'ddY.5ig&P/$g]e^OqhL(^?Xde.O9&sP.ZdGj?!T\*h+<gJ;<MR9+Bf]%!eAWlKoecui\b''mZjb[Te@KdE`3Ppd=W<IL1LLV/=S3lf?CQ?)i-;%)OSN=N)rij9Y;ZT^'?t,$63GqbK5pMm_#,iL;^n*,\3jZ%0I+L.:o*!2M_sgUS"\jJ@X2]5a!@(ObdCP-cGM0lRdbYa'8;p],hEppqI3$9F&UO41IndU_L8lB(uV^<ndK:9D/.R10#h<Kkuo_q%&Xjc\09*K1<MHt%l&iS!@u]imf2HY=o?1AcPUDlr4Dbo`"C-rM\RZ'd:0*hG[5+#pO(P)Dn?*OV5"1q-'`%7`D,N]jRm.<B-Es?`%j#?%a\C@hR2dr_10N"3+`=cOO'eqPQ<m<TaGnS%uR,$$n@F)Q/LrThsrOjDciRSml#9:0Z:D7ITf4U?fOs=J)%YuQF7'K/SlnD_I%,WaRE4J1r$r02@?G*qW]f.XU-R;A.4Y/882],()"S\r;pB?f!pZgt`$%kXSUZS\?'^"nI'\m?%76Z'@QIbe;8"P]eUKM5'/2cDTc%F0)Ms[^33UZl6YqW\;h@(T'*qM=$X)e+M0i\,Fro^ae]ES]gJa1H1[\(]sg^d'#3ZjprCgXF<bK+M&aq1k6P^`>ED'\@1@/7?*RI%75LH<&Q&PU3]sqo%hm212qY:-lT&iWXdl4Zof&`E.n.Ji-8dk>g+7@Z2tCg^jMWLMf.aKa/Q!LWO#'Y"mirLK1$Y#J;5:'38rm47%$]#Aa9B=%ReI`?L[;@BWMd<QZm@5Nh+)b5Moj!MEJTR/GCAAEsfWWLIdI_`cNHF5>0;kiMAT?k%hQ>#Dd';jEf<m;*<3b<bpgG4_%ZcQM2Y'-EYh+pPsqK[93$@9pW%S3Skqd?gLT[%%D8Xp[IH4E*q\G,qc76o&ladk2Yisb+gXYccRotsE)@*sAIOQI%nPg,<P-<Jjf%]=h\"*bN7V1Gcn&TluVR^C;!i/jV4I3N>e9F17k#m6%7:,IuN^o/SdQSI\5!g_d'%+SIl'J]&,G\e+u]bUT@g884oLCF*3`U>N3n%K()j4oIFF-+/Zo-;rW/[ati4SdEjk\.hnMKLkQ%r#O";U=-Jm`K0*ru9EtDr'[bT%MGUEZJC'EVDVo1NM$oi/R3D40=)%_TQ6Kpo%_s$0Q,RKl[>&?a0n<m/<Um\Rmp8P=tA)\WU"G/H6PVdn42\RD.1Ft[>9c.]B@*gm1!9-_)`*3IOV[5[WifI7_p%hh[]mZppq"7A(%6%4eS*@+,YJAlONlJX>HR2[fiQc)W[Db9$&h[jfd_Eh6IqE]4k$sfi\,a^R@+'>/q+E#H.VS?kOO&ao:!O;]#K`pQjcNQ%tWa4F2%4^j_j;Ms.$9WXJ/QjA[-QfD1;AdTuI=bL=":c9,&SeTc*+kK/S0bZ;M&%B'499?,s6V!k!)8]M0]dTA5ALAhL^6WD[74+sCXL"^j%@:Fe>gI0Z]oc2Y9hK6JfS?oT-6D[iD2@^b/GB$G697S'Vl@!\46Q]_%jD';.?*b0a60o"J+gI2m(R#(R;j+t#<EpKI4[klJFT]&M%O6Kt9/)]Xt(<5.naA4/$2k.2+VEbuO$dl@8EdqmZ"=nlWMmpZ>cJblL(\tg/LSZ12dkCMlYHC4O;tje$-Y_TDV%]jnN7XdH()aY5%VD4hPTG9^E9<p0G'8K68.Lr4nJY%Qaq]=%L`q>0.eJh!//3bF$f8lUF0q\>j_dV453K1;]7q&`,O+$RZLuDR6]A5=OM0#p6H"BfO%M#]%f3lc)a4)BUr0@Td^-`6jcmjq>gNW)]^D:anGn8kA72Kj;+;H<No`gKNc"S/o&>.jX8'jW1M+F>?9/Sq#?S3lF+9<s9]N;uL-%+WW76H==+(-Ah?+5DqeV)*;\EqB5jA9<K(d)Q,gc-2paWbJ;$F_M>&9i1M+Bd[oqF9j<r5.KGK>N>GrA[p'gV3(GZYQ0D;`W\,1F%Y/d5P,n[AH$(h4__+lQ(*Sl<`Q9LloAT/r0N3^J[_3WYX%'2_!lrVld;B/-+8oJ=BV&o:6.XGlu%"1)7opCEEQS9<Sn*WmC$>;0?%a)F8!jDp4'Rm_qk2-n,o,6+UfH]4'u(.dST#VSRf`G%Kub)9(YiARC6jkc##pHkH2XG:S#U+i*X3+hXFj+Mk;[sgq/R[#[a5M@W$%jgr*PAU?9o=R?&a4Nl]1't(loCk1Q[`(;kfc\=Mm(ipK`QhX@FFd^>'4U5S=*]mkLB5HO*i)ciqf@]73"et=:Y4,lPZI`p0r=a!n%>mH2UP`efg^I8++Z2#QQMj@9qro=EiN%>-mE@esI1;0MkL;esUA1RM(nUB0;RP2YnhWC0Qm/'-'Bh6jMX4rU?^FAsrMrp?W;Dq!!%+f&hWf5[k4nc"aX0Ro=/=__[FpB=KL+13Tl!<HCA't4\sEX3Q-/)tiYQ9ICHhNuk\7RpTQipI]?3U<)ZY+sJ#q!LK:F'u)FS6ajd%B-1I$-')JP;4e@CbKUg@7^h$?U^;JA``R%I6aTb\>`%^T:d0Ff#!`i=$56G[d`0fWE/.n:@]P7p>]OR1j%5Jug+9Sq7IVR[O>)Bn%6u$t*nW3"7(0;o@dWeHp&/!6DnYK;3L;AM*bp7`HB]@eA!'EcnLTfjp'"bg?il9$gRIr]OV:%hZh6kJDga_dUF`QY$WDb7&g]sMO%'$Y1b!T6&ek66R.32$^;K06eeDBp>P3CF_XiI=FVi4j4KL2=h%HiQs)L_jGS,;Q"G*_RGT.7&M7$']Hl^^YZC'SQ)=l@Wa6H6!h]%o8e<5h62E(+Q7Bke[ZDLaV*(UCOEK-nC_NI(bT1qln]DgKL(VNMr_%JUW4Xr<-Nh340Io[]=S]lGG`IJ/TNh\#-Z;ZA<`]l"g\d*%j/](Ke0G)O46iM&hl*/h$tHGFD=c(>Gq+t>@n(SQS"r*nXk=!%hh5=OPIHJ4Ea`Ot;M$*TfHRAQCf)+-f=-a<Z7Nr0J(.DWBF5^[%hIoC+8.6mj#Mo6NQ<>o91,KIFf+7Ba[WFV7O:@!E.d8<0L+D_2^$uP9/5QlDH=aBY;r4q^o+Of`V:=<h8=K@3<\KR08J]P8.Td[!%.he].+A2hgGa7T[?c_,r[5pQ6PDZWm_&C412WKqK%Zc9u(cnUm+s#:N2kVllF$P:YfS?adIf3F!&'Yr1K6TFiO"JPUQI5"0gQ/7o%*>;BH.#2`M6MGl?N.X\%6+q%*@a=5];";%A)6PRWl7FAQ4fpCJS-LG'C'rm(rmbqnG9/-dqp<[i+n:!O$==q$.!hZ7:5\?t)^0Dj%d88[^c<XEp)ho#fDBTZ1qQaRcbq/)bkf[WC.rQ3:nQ9Ea<6S]p?0UqHbZn:/8fG3]E#?rWG`o%Zn`EM:CUcC8U3l']_A1I3KW@KG%Uo)+SP6jgMfJYjXaXd]I>e`).@C@aANOmAdd5,Ko0!\OF_-LTtY)?4cMXrk>9.qICnYGK@Rj:#BFa([T_04*2J^5!thVN'MXpQgS%IKFa7^T1E^Y0nW1(oq@f8A,&^Pa>K'XD^-K,7kNIj;GeSf-cYO"Rr@%UF5QPi5CDn3g&ic:PFl:[*!CX%&(EWbsJ?2!nF5bWeV)H%1)/:L'=JTZ-q%<`N^@,Gq]@dD`eAE7`%AHlR4=5Fq++3K!P!7LkdoU/,7E+/5pe&^582rjO=-Q1p`_2?'_1TXYQo[Z&iskk*hOsh%ZS87c8ENF4gV=eL:OuJ(3RcE-bS+/o*Z:Uj^oO9["GL2t[*#>4@Y>qJ,d9OGUPKPt2l''i&CJB0#YA1h#Sh-+ARG>&m4-(38?]Dr%iV-t2"j+RD&05@QV%BjJY><]_<[7QS.Vb8?o)[j@,W?h"*dSCLeXu^&'VRT!mg%(ZE[/Qg@e@K.'TJ&2Eq=UQg<[j[a/b'!Lq>po%i5$7g9O+/G5]'L,@lW:M(kW%/0Z;c_a(Mqm$ckr)'JR=_<YV+O'BQ<jPj3!@&*?n?JRcDiDJ%B\=<.-B;0J8nNP/Ir2Z"N;J?5,k%Yc:U@n?!2++*.k).-6Tg=<;8i*::7sWKu<jPU=1BZVb='e2ap^K'P_];Z)SY%acW?Y/J_LjXW?RgN$:"[]5O9!RhFm6fCOkV274]%FB"hrY-8ZrrEELBFE%HF<:+?b]Fk!s+:0Q>mi%ZN"HX0Q4X8c(O=J$E_L5r2,CGO\4@"%t>bijQ$PJY0f4VOmU$3N377L3D@a3Fn%#t>:T0`kggS!epFZ_+mkW)B'5;G<9LMaV3lC_M%qA0#Y,='R0H.bI=em&CSofkHNZ2oiIPNS!bp=4h'_q=E'n"YoTGGPK7m[Z4a!%TmsMrK&UV"<gQ^F@&UYNTs@NmWlL/"@\P<d9&1oA8ab/]Jdg(/44-WS$doY'UDK+PX<uEY\7#H^8NJ4T%u#cF>+^G-cI[>mB3ZS(%#=Bm07GOSr_f[n;o*b2XS=*qug&5BFntW#+2%E:B9VShh4n__B?TTCBFO_Z8<<qURRn:J9BeP_s<"tVY1)6MGSho>'r'@:=Yc$t&%F/bd],H&?e5&ZW;rk"!^kBI<Gr"ur)UfnAL[GM3$ijSN;p%S@4XMls>HEKRUg;4-"SgG'VNYWZoe^)h/XQa4(BQd^E!njrJ6_I"0%CHWu\q03U\%''le2!PsM=#$I!a30e1qUqsun^ON20'T'L.oGA]NKm0`SW+)P5YV<C9[!-=kYaIUE&FTJaunm;/9u[XSEAbiEk62Z%<&;7C+:L2[+->'(30o7F:s\KhV]pNG:_^*r#`lP-mu,<KMlC?sY^_sl-\`ca!')SXJEpj>_r&'9SImG-CsBKc@<mS;&l)1hJ.P+e%Wf_B.p_deZZjnr7UD1Rn90_Bplh\2*l__XI79Gl9WMEq<;%a8Lf\MS^&XF."qlH#%aM&_g('K_)j_,[[!NqZ#hJ``c-@sBk@k^+W%\\qjLSFacXJ9/Dj@i""3"!tH(!IG$X-HDJrJaW+a"hIs3AWNr1^AU(k\2WnA/e]%['`0LN$aWXlMb$6QlCB['X;'b5H>1[i]3'I`%XPu8rLY[U.kYYt/HdV-!Eu<Q#@<u0g72g))`dG4-O#Yn/C,AXE77_E$AU%(FVXlql8mErbUFNkLoj(Qqc,i76g>dln/ShEg`,[$V%,PGPBmr>m"^>ZZU"Oj0]:+Fs2XtQG`h]P9hP20AuKlaG`0RZbuP'#I=S[("#:;`cfn3bd#.Pa3!1*Dm>D]qY^1tcRrW*:0f^<kZQ%A)WE??J9DD9HnOpF<\n5(AUc<q_!(/De+qp6Jb,JG&;Fl2@&I83dAR9SP:D_'BbEcYnt%<nJ&?M3_kaAIPP4j6mL;6ho%M+aEQMV%dfHE@<I7YY&7T$+&ag]`!kKOH76rID9_-k>"SS2d*.-(ZimuC<.SD+eG@PCF(8AE,oG$&G704.@&K/8%f/RSkhs?)/+b$3Qq;Wnq%TI9k4E\OI#gTo_GD8HhD9'#'nFG9rs#`m!CA.Y[)<=:2-:la*m^_bDq")<oG-=P(N@Ms$&KJGTTn1S8$Xchc`E3u8Pm&AgYJb`q9%.?W"1msgq)Q$mo'WUuh%pt0>m^[\"0?`(_G9T80Jic>_eOV)A0elgl3/-9(CnO7DUeFgOIg*/8Ra-feH+S[]+W2deu3M$BO!sBVe%n0+l[S^`.N8'1@.PU^%3gf-8qU>5pjqkNTeY"'lU(mO*hU_!M\*>cG2SZ!_DFP+?2,)C0[_q4eWA)k:c$Q%sU$<ZHS2;Qf6`3!>R%dVt7;[u$k_;g3F)pGXPbXDYrM-#0%%D#r'M@Mq\F"m$Qbi&1?_&-kq`eOI=Dn^JE%I`(Ku8=a&b7Q'<%>Q+9J]Pl>=h&3i8NtQ?/%itJt>D;3nW>8Fo`<i>WFcYWKf/'m/nj(*a`6a_m[km%WFgH855p+)Y#KV/EUZ<BsoWK81./26h(q6R6,V_SV`9<L+K=B;KX9k@O:%A]9;c&"DcZ4_"tOM3H8e)D1Wfn?LnA@Tci0iFUUZ6Ilhr/)0':S$Pn:fKB':9L&mLME]td5oto@P+8`GpUbMfjJeSDO@JASZ:c03%=Tf#&BBqG<9pQ))Js4^)l`q2"j-&M/CChQ?Id>7tjU=`r7/0&N\Uu=]g?i..1C'-I)^4'DeH!@C)r/Qras>_7]0Z]nRNkfRQU&JJ%8CjN'_`@qrAPf='p&TAb%RtG!8SMe!nA]L<H@\cbd4k*i3^mfYkVF-Z>lk:X=&<:5(uG#J_?=euisbk=7&bW((IE3fjs0?uhFnYN%BJSB$TemF0.-=\UkU>8L6p*'dGKpnY`R[0,%</WBGEERmS7tml!?oIWAeo;I_H[=d1>C?5?`[":r_Nhp$$B8>l8/g6IB<2C03en7%3bM08KStg(GhXKl@epY8B)=h]VTh<]P&B-onub\hNq6gl2tIU<XHF(:Gi/DI@2ld%X!CCYG)Z+.AU/c/[5sm_2'4,-[a2JMdB?GY%D7=iG<7bg/h4rN\MabC,=cAc]PB*t$+phMWYZ9,[XBHT%eMTOoP"'eYpFV:X^AF\UrV<Df/ErjVbN6NuG?nROnf4.m1XX:nD52+l%T/BiU,7Gg.okJ-+m"ZpONnW%CdCLCW`'u844&;g#]^I`.D0X[Kd2]7b+dR%O[]:NZea@@N:"oO(g^):OZ7\!r.S/_P%u7/Ok&(ak%POIM5W($t]:s;h(<HP/SCr"S+XHp6sX!QriC:DYAi<t`kMM?X(<OcTtDA]HN;B4;&HO0%kW5d)65SZ<(jo%58h,6@=Q%DDD]%=%C%cooGpIPe56e7X1P,W_5"QKoC3O$ddfohfF[k<tC3&`Nr:B!ga=l)0@<b-cb/36"G.DqJIk!-WJ$LPNYL=^Q,$\#I1)'/>[K&7LCG%c[ptCVK/.5?$Qq=QjQ!<K^&51!)B9sg<iuPB9^?FHBb?cY4g];lt%ksS7;ZJZFFrYqZ*&Q;;SEZF+IZ>\r'7PLur45]-O>\X6"H)%pZ^s@GFeLjKUd5!q,Od.]3:!7`SgJai,(p7l91RXa8@19j;X^V\VQ,eo160PpgR+cQ*BFg87kG+R1m]mFutgHZ]mFEKZ'@4SXcD:%6b"XJD^iRYF52#M?+t('*P(Fq>[Ad%4/OJbGZfK]:m=;uql)?$Co]*$`>C1nO#OohV7Z`*'W8'fkh&aRC^"J2C*/bo.;8DU('85@%53HG==[M:qipaNCKi;'8L_OUK:%SSZ$rgX6/T0=4>W:#./edUNRFiL'b+r.T[_tb0G1b$Npq-udIpS/*osS:S4_lokDc5>*XIT0S%9fVrl'YZ02$JRHh\kAKOH0Bt>.(>eI/o<R$C#[(jN'i.!/"J/I5'4YGUj3;bXh=qYT4jPQNUi;a%2gO:"NR9'/dlV<:'V8f2)bYp%$@![@QC]N(CaG3%nO-a!M^ErL6>f.g!5=G?'<_9cQ&uP`Pj>E(3V'I!2C8p.:?5USfXbuh)Z=.0QMoBQ"QHVM.i^^MW&p?hh0#OI%F:"EVIJ73nKh(#LV6M+JpHj0l;HEAV3t`mZKtBG873MQYNnu":?@ZK*]r-P-;KhNVUkZ&8m_2J#q9/^Q"ab=LYNnEc1#TQJK#jMD%0mMZgNLoVt^7E:%%E%g]rqo^TrqVM&OYDG=i!%`)"4H^>&Y^li2k5WQ)nQT5&(+)Acb4Q8gF<#U>b#Wj`C:/<jt_C2.KoJ!q-,uU%?$Y5s"iU8.#(P3VD4duk.?Y]ngu'/@4p8amKUV#qe(!MN=2u>KmnKRWN+VMDA91V!,&YSC=?=gjACp]e,B'9<b/,/i\MZ&2JL!l;%LD"tP/<@=F,rs;,'$=C8CQVfQ"MC5$j+W8nE+0BIOW:<K<rN9*0'O/lD8b'p<ASuRjH"nfJ+qMAKDSs,?q@$OJH*J@^37O:P04(?%54-\5AKV5UVarupQAK6$a8eoOQo`m`@0aa5%9H6C-/_`Kr/lg1e(&ie,`$]NCJ/AHaG%&s7>Vu1E(P@J7c?sl-s#WH4CojRm&tJ!%;9C\DkVb##?@Pua1c27k-o&Z@@>o>DBGW$g_Y5^k(=I]D5tXZR%'!XfU3TEl(:V9UNlk$U3qDs-cCJ.,ha_==n>Ngq%YYW0VQ\-[%(Mie(^0)SH/,hH@OHJ2Z%K&&ZR3(]MJ`:G\]&#p?HAs7cPm7*)=<lF%L["J4^L;LG/-4@aj2]"\hd:AjG#]%4XR]6BCtN7$-u/*C%KihPOosWU86!HrAXMQ^!>.*<`,70dgfphN8LRY.(E2a1^@n(I.HL8SrTrcDugi"4Af<]qDp84>m,0/G-Hrfason()el>bIX[RWWY%7??8E5HV'SiGZ@/n_#m9\?\Q8f^71nN:I>_Tp^[H/'60c(_OR3$Z\$tmpeqmjn9Z9S@1T5LMV0frO\!jTo\cQ^T_p<j%$9=Cmu/B%j>nlSG#un`mB9A1+\'SQbYg2p]EYR^$h8"qjCD/Q<"L8\HnCO.gsp#]T?iWD%'c<rKs\!!3+m7OVUd$$FW$ld$Wa_Z;JT73Hl*;h%\gL(&P-$_`)AP#$B87$;O&<<Sr>([bH<RIeeR]*iIne\PPG!uk`Z:_IH(W+G$%KB7F-Nk2\S]3X*Y0,emk\MA@cj28pEuo3`0!)T%nHU"0rY/-B=jZ3dC\F'!.4if4m\YGmrg?]]RhOW+$Z[%PgGd>=d?']ri3&QoM<IBa\hksi=og=8bo\:P<>b5[@tNhY1C:16ac97.%oU3Bil+Q+UQ/Edq3n<O)7N5n^GpXW!G9,1SoAt43ImfPi?&8tSHu(<ke2P!4ldY=Bl.&GA@SCTL-BfsMR^EP^7ch1-6VZ26WReU<%Ve!iTBN.t_`.A#O>S]`lIXJuL`9`.#,b.=BQ\pfeW76qHJuRfbRW?XZI>C`l9VZl)A96@SB7l_S3-/-P9p=\B?(5XoTB"oW,%?Ok%[ee#cdQUQX&AJ[X'IlTX-u5%sH_!I7;Sr$A&c*FCgKG&!!R7I57W=sm^T/$)YI&QCl_L@sN61a,P@KPrLfK&FH0W_Rm^2+6_GX[<%$2RXp*mI@[MPobZ[$=9<KQqm!e"SE?41gji)bXaJSaVj@s.O477t0gT"JGfe%PM,k/U1j$kR%Sq$pbAR`Gm]?huL9!piZ'4])TA]%qP9%17dpr1ruO'iB<_nY./@7L&usS',pc)&+Yn$]<D.rkB3SC1:r3HBPOn*O)R'iB0Tc2BiBYRSk45?Y0e"IinK3/]J(F#U=rPDI%RS5gHa/aA3pl_-[HZ[6JRLW?6bG6XXWbG-Pc]nCMO=q5qi?`K@MN=VZ"l+!]d6S^=q0dX"HrR(uZ/*CbE&[>DVbp>t9ks`4/>N&5%l%7:Lg3aqg9=:k8hO]Y$nYCJsG*p9RD+0j^L]qp3h5*D=1r+>,Xhutn+@khMF1Vmf[)]W']u4-ke=AaAfLD.,'Z\\M/s6KEkdT\E%+[km0,C=pML.4aiA_#eENQN:gN><Q'>7Ef32/Ge-7nJd/44rl6ZTcJ=q2\ZrLZ"ipb/Fk[f/=f(;@o`hmL00`=["oV$.l#2QKhM9%c'4sYo8(Z4!J8_"7tT)-hFp\62.)gYjRgqmPgq3t]HNYkoX3e@o!A%U#b>rQV75_!RfZ8NQX'"!eH29RJg$J;K1.P[VC,MI-:r6:%'1UU@;FD%!-YW&F+_`\_29r$qf4qm?(erXUD:cHG#Ri\nY=a+.AXY',Ao^0F_rsPJ(;dS"@>[+=!uDUSY.E@I`0:9R&"_c@EfL:.%FRp?L.'c]Jmt,G-%cirK&OpKgdmo;Wkbh1Zn<;rNU^1rHR<geKN_Yi8<tE5A49f?EW.EWL"+u!:+!tJCaQC/uT*ocYUas6=;OYpB%6Y)s\0mXC3:c/rc?'GWqA/-fa>4)P&[EMh%eMDQodiM4`O:!+$OSGLFUr+5Gg"[Z#e@u"jq[:7EdV^=\eq"$ReW/l^(qkk42ss[E%@N'B_&rUj.3)-=/D'Ec?gW44Vhl;_3]/9G`nbIR3=^H$S1Y\B1c-c+&k:_Z7At*J?pqsJ>E>W>2O2>M(*dct1K\^cjCH1io^ucf+%Z<0Obf-W"e/.PM_rb;4TK%QVT8"O)75PC8)ZNZ@f\)buN%dI6%^r/$qa=VQ*f5pC2b":+i>jcP`DbUQa)"S#[kk7n*677LVng$gI%_7hI`;k3hI>7s(Q#*V-GX.?aN^u*7L#;s#2Lle'V6,9J"KQ+48D=J@G*,&QD41r9>/^9$n[Yo*dmRZRDYgso_Q,Z@(+Oh[WSel7.%Tn9&KaTKOZ>,@aiS581_m'%)fJd>+a/;;rD=h>A2kfDHl9OeSi"^AA8@XI"sX#*.88[p<pAs#@B+,`.&OJ.o)!lcA_C)8RLKKOe@%kiu",o`g:erA'L?($t"KJJ</58588p\5b+G"HY#A;^BD8qC[(,eD/4Q%4Y0RqUX:$Q-)_9\6KQ4']Q4j[NIm\\Z;")%4\M`Ud-3g%n_$%]_$j4#Uj"g.bDAOq.Lb0S8VpQ;),T8DoSOZ5S^O^ukjm#5?pYq)M6;4]W9_CN8K>6sC.W.&MT(-)2JMsPQqS13X9>IS.=8Wt%F]=u$,c?VICIn\S_@f<:'P;c4]"i!7,_+,B6e'56XcJES%e!:%i10o@-a#LD(!?;_LXcp;QrHT+M@b"B'XaGBf<$0P`^fbjMp)l6%?ka]X%es+t'uFh>1G3@L5_s/#Q]6tk+0AB.f;_dR+Oopf8Ib@'L&"Dn)dBdOZB0bfB4gAe%107%`AN[ZVui-i].h&K3O06fpLtU2%4W=e(b[t0>ggSgKaIuEX.V<DcP,W7A:eLFMGg[+1BHn*ihesfmgt>]f=CI\A.%IBso^uKN0L;9fbVo$s*IC0S'[5"1J1^L6$'&'H%?iVi/X,+3"HR8\\T)7PoBa<7.&;d:a]3Q,eqaTt5qO0n#$ir3cG,,G&A5LtXXr5sNS5[Z.g4f&3%@>=GJ_?e]k7s&>l.XCcgS-ER%.<Gu[S[@go-f.m@cADKdW>EFla`-&SMgd.IZMb=qUZ,!T7K)l>9mj;g0?#$h%'P"WNj*]7:MVf(2Q3WHaDS)GDJHU4\^kjAdHo<7%Fmi*MR[;bf911Ks0,Z)PR)gFt>9JF9g\L]QCdFbE177lZD(d9hVc@n_a"joOkQlZbY-;9t-jT!kn;,80]_!n8NPATDX#Ch5N;%A,%5>De8<<(Lu?4RiO[@L<4>t%";?;jA@fSM0gL#Q\d:Gn/./X1*iIQi&3E!pI932T3oJ2)>rf(qF#91J$/]'XRh=P)D0PqI:"HL?]M%dFEV,aeII0T!*YmlB>9HC9$aqJ)RT+dJQBDek\TaDt@B>Iibl-VMma-5fK*&nNiS=7jo$p0:AUH/ZOOLAn6oM?Mh1H;ar/;AVR?$%$Mb/qR@&(^P8^]hoU2>nJl#=SX(V.=DF7171ZUk!-.W,aV%C@SAhPB]"Vh*r0ES;$mAEEN[3RD81i7?JV@k?J7a'Mf/n/Jb^_-31%_;jUpe)hBkf0MQV(?,,@X'!*;rEeP7:(Bn2qM?;'/$n]E+[4*eAfh][)lC,=AX_?E)3M<=CT$]>)#N^@B$09e5*#[/k:4CpWTfnt%4AgtET94'#V#YO,G1qUj@ANMXW7@IqHBe^NL%.!?FeYQsK\ml#An8mafMY&W#a&C-2<k8sIg)=UPWedj@(nB/Rj%hBJXu-1b(3=s%9,5:geE.Aq?!Ikce"+U``'sj`6-:Faa^>43D>crg:!>R;6>sOc(#k\.?A*!hg7`*OU15LLpKf,u<]N:C'>$%DTA>9ES9YHb(H/Oe%V5":+"\:7RF^PGu>s@m&kJuq-rTC&FmI%a0<dph9VBaL=*.6Z;6Hf0\>O3!B+Ik](AQ0SWmNZ$Cn-Z:1Z3,,J?79cYVMMf=dtC?1%kTiKN;*%0?5bX6LE`>iKE3ZKcq.TOP?gRu/&M@P<S3"^@A6_<U>m./^?,#f8Xbbq,(C)Pb\hBiJla_R=l^"T+L'YesXJDMVeg8N8%&MFhPkZVKt+"2u#eNMo;&@=q+Bsr_m:i=<fD]MeN)i^ed"\9#?qJ5sU:YR?0nIk#)rN9?i=TUcY:Gn'6<se>]B@?o#GnVW_EMSe3%SS!bMT&RK2`gp*)\[83")0f,D^q5#/3K.W)H,hm_Wjs^p79R;\\^V"1B1_-fEIDiST%!@6=0E4[+N#DU!I1P;lc6l`Z/7EQO__Qt%]#.2?h"T3)`W;t3O<hFe05rl1ZK7P2KWe2'%8OEB.4o'g!dqlZ&>?j3p55e2D!8lTA`g!EFF+TTFBm.bT]MN)X3=2=l/Lt2eP\!I%Rn]T:Il$LL#-*G56P6#O8h0r/bl%euGHjD>Z8fTs-+gI':o-_RCNA\.G/M(RJHS!QUO`lY%Q6ehLQD!&9E#4,/PRa]Y*;AcIi>pn%1_5hsOr$3q=aDN\R;Cj3@=jdF<jA*2c[gJU(UbmTSaT@0%6[H5gb&s69M)]p:(tBI<Emci%@EtT2H7LP3J)Um\,S/U_36;Wn>#qJ%G?gKZcf>lo!uISkdd9&(8,'ldA[d0D<9*\"'P6[C]lKS:jf7$`DDtsgp<_/2DY/pt'u=21=E\GFN'0W8?.CjU2.R3^jt&8=i'?Zc%5Gd"I7.f)k/6,Sm4BG3g=GJ;QZp#GVq)7b95h:fUmH5$2M!\4[/C6P0Gc?#,Ro)]omf\+t95jG9&KY.(Rh8q>eZGo$A#6+lM7af]%BdUa]GHn'NJ.E\DhWX;F&A82XG5-n_T<De;!]0Dpc=+"mB2OQbS?u1rS[1.Np\[,tcF6+_Y2o"J[30q2Gh-1HAA6i'.DX-J==A!s%P-V%c*8nkoT^3,D(nA?:%ro+eG5dqTIYm7S!(kh[I@N'lW:`'?n>bVMc;E390sd#)m)\a9jkFiSI7S!b$--0;pU?<0XR([)4)c8'%G+0OEA1[]9EA3b_(A$g!\D*bg:,W=.mnte\"q$(B;JuXEhjlBAHe=C6mcac6SsZC9k7B9unLRC&KJhWDM??9sg7rE<'qu_=BC0+k%[)m^&&g1lSjd7,T`I4r!&cOa%5,,Y=4.;BQ>p]#3fHh-/._7OhUG?C$gY2$-BoaO^s4_=Kg&Z%KQ(770gi3[9]n\n^k&Is#pas6o%>:HZb@r^>uO=o*]Y1\i1dbU]tiVV(O`\45%&[I^^`ACS#ZpdpWNC5TO=_=)YjV[3E!+/3:rR>i#T0L?oC:W!_(#*i[mq.OB$%9?%%!Ih7K.iVi8I2i^Odl_'51+^SB[RIWT-rZa-e0;ZK(lR0G3)dG>@VAQZf:XDYg/!p\hM&3sNMC''2^8Zn1#7iO=b*]-+[4Zo%n>P&%"E3bKrM%18%rbA.gl.h+.Oo$Z$$#D!O-An=M\$QlMoHK%r/fk0=*^4;]e1Br*7U!fRm2jhp]O<7#Fi$39\VtT8@El]2!RskK()d/%Y3rG0gsOui9WptbQBA1(k#JtjQmdt1R/MnV3id9<B9cP4]4$c6ni7i\2q%"m/;M^(WRi_F:a\CeZ-3J+",@DegX>DJi@ps$Kg.rp%S+YPLingL`dsC?W+kWpAZlo&T-%;S=75A!BId8b_!*t]WLkkM6fIZER[dJbpI<]&\]R4ZI,$?ogF)rd[nB>0N_7O=iV5PSD8p4H.%<=pI7O;H#gTZ!o[=Zr[Q>YH;3U[PenC0MuR6fKld8`!PT\+.WTC0s1#gM]OR<7:Ss.(YC[eAS`D7GM_<>];9n,Wg_"[1UmbR#7g`%\SNT?D\E3Rc\?;PPpD8=''1s#)C=5k_@A'sAfJQqaj#u/HPDB9FLr<^*L<bSFf+Er.77*5NA#5fOnp\)0J4st8=4;Dn^bU6P62%H%_UN!T#m*5sKkOiD,rnWr2!^LbLo"H<eJ+rr$`E,$o?hKKN:cjAkEbF16d&od5i2iF[]Vo[Mmo'5E&'BS/m_YaZdPoAJ54=McUlQ*%o6T0$\,9C$>oYg,.?3k&13^Wbld(aY9?e`5Y25>qDRD*_N14A;M\0"'BYB>DM+EHCKo$"Sl?N*@m=#OC1nk'p1;GT+3[C\RdeLSu%G_:HNP0St`_42'QLt.Ie:/Gu48Kp6+T&a4E9K9A^?fnF!+*kC.Asru8'hQpZ*Cbie8MdPBl>J!eG#R/=K..XA+P#P2<DLudAjiL8%bb)AXJh.7N'-E_5lS5Y[D#7T&oDW>P>o((DC]=UJ,/dc>"gJh(oe:8'lgaRBN=XrJh>,l'=]55ErhE.@OnSDrjHq;QY#qhd9o)\h%Pk:,'76Ank9R__8%-u!!lP:&#?q4`rF0maa6p#/K$R^8Y*<F53iI(_JV4'$!^]U5XeT@Wi/\iU3?YsAB"F*<H?&;&bmRU,s#rnNQ%iL$unn3B'I&[9bHg^u^-4ofR)m[/.l<FY3G4!J>UMa9-7g_$:p`+$P'[1il[Yi(OG&+Kq/IF?)hGl6anVA"uc7+B@J(km4lf-fkr%J(TK4oM!1I&JX3aDZ1%K4F?s_J[3opjc$"+rO;VeP0kf617WV@LqQJ%KKtUC%.3T?>![@Hf1KiBalBK3ej.^idn<%^>"KKq?2u07%K$gp=*87$??uuk\H38(E(?_eNL\g?KN6Z=Ji&W-jn]i6oXo_&?\5183;%&J/L<fL+kqJO,pbd?Gq4.)f%A5UPb;2BGHn3g3BPE.+%G%aPCFL2&=TU,GfU#_fu.1ip+DZ(3([StNok(hVD25<O?jZZ8o3c+V>(6]S3N`j5$$@mVd(]1JuYkPYjkndek8"\)++!q<i>qsj`%@rV_MG%&5H485(n"`!"d,WMQ6:?Nm2[jn6140ON1U)\SdV``]P#0mXpT=p!f,Yp/marK!5\uCD<i9uEg3RZX&O5,eQ+0^I*0Ia=(%H@I@H70YnWPp>oIK(.<@/ua\RD^V<GC-O'P@SY%cgF,;1LAO,m#Hg61W':cP?ZduWXd<mOP88?^IVc?%&^so2HK.g`9h8D(e,)&O%mAq3r@Jh?46cV9dl1M.51qjF4luG:XQ"B7Hq20#MWcAqhQ$6rK>n9)mc\aEDBh%N>&sCA*]D@Ak'1:6oo&(r+k:;m-=)==+oli-k%Oo&uc&++*P4X;U0Im,<dqG@%aMJYC(EYrG3GA4BP%t3sj7@r6k`o\GG\d>a\;,3T$iFW^4,i?Hg^jkbM&B@EI']U2=ZeTGiQ[FVe%Q9Na-`P0HSB-P)VGF)ktOl+LoO>2]MpI["-`OKB(^R8I;PM#G7,9JuAkHcj\dG"2g_t88UhCuZ8q6uV-c6)A(BdfSKMSlf9EnFuX%O2=r(*r=qP49'Z=>_;1/gRVjW@kn$qeHQ!me$_j$`gM]\ZRZW(plZ%.0uoG+V[3F2'sj:I./b\KI7[E-r\TV$6BkK*bPX?+I8]0F%W-8-ag"PE?9pW,lPA\?bf\OWO<miQ^N8W<[G9/7+Z#ujeYG>B]>lgdiedCS@Y_^HI\M^-$C$Hr+(@&#"B>Q:VHQ'(CSf0VuOCOQD%:!5mlm9T?S;*TmNhH;[FkM0N?52@^/WP[kcG0V\pJ&ABEgDWLcQd2,U-nLeg/NXbK,er2@Bd;k#P2^@LfpQu0R!&]#2Qj\s#R<^F%B9MZMOsBE2VF@[_EBe(B4X6:nH+2OM]_*u(]Na1J@0"#2hX)\sjO\FIr];J"?V'",:XP6)pQ`=J/3pCQgln#7)fT(C"/dSjf8I)C%&$Xn_h8NJj@;_t1M?;7$pl&*k0e&ao9\gFtj1sWUe6V>uW-dZjR'$s25Q[4^qai=;;YS_VN[FZIMfSSErmQ'p/P%O3BqB(o==q$D%f\(7T!]",/RU.L59AhL?#'/UhJ4<YCI#aU%Le#5u!Skm&Pk:Jcd-Y@/.,59#3jJdepnV2V@kK8P&GLu>&F[mLA7l1ad^)D,TX_*U%G&-o(nbJBWI\V;+n&2f/8TGIa#VJ]G)r-9fiae:J/FkotjLS#-VM@YGDUi&&A2/OJqdR`PI#V>c8oC;t2UF6")V>gbGXu+C>o<HJ%b'=sZSG1);AFnIZ9DPX?)@]"/36F&*,^cqG`]@#&&dc)mFL=!<TZ1c>,,\"`L5ErsB**5+2M!uD=FS]PQIE@V4#F_*T!^;spj5tF%nUj]GY;5o;:!OFa?0a"_YN.e[#[3`LCJh+LETPiHG*4.4nh;uZB`1mk%WPH3hSA7tOV/@7jm=RXW'+'pLlk05i9eu@*ZTX&SrOHb%T\D<9[ZN*7=5,'2cA,8mU`s5&+?3o+LP`4:9,Mgi+YUKS=i51q1[1ZEHdXFWfQbAV2lj5X7eU/_L3c'3*oMBZgGIc%$7TRlom=:g%=$,OpNn-Ddb3QOj!KA,b].DPH[C@<N;*@I=MoPkKN%=!3G(,hp66db^`%G4AIJu[R*KH*$3[ii?k<XoV;q/3@Ek5*7JmYo[&N=#2%7hCHUUqCLfpI^9P-#/1+842&Do&/i0W18DE\[27!Uu+;*chK@cNA"Uq+OO=`Ws[EBTH)*JIXO89)mp9X\,;k*0MWn7Rn1_$9J_)B%%lI,6h+4+#:=>k-Qcd@\.kT">AQrlOS#-a%o"#D[?&\0Kk,-uuV'5=[*BhQ*<I3q#^MC?#\;u]0if[I)B[`]BA$A1c.Gnfbh_'hU%k]l`hLhg`Vnm-I09#VRI8_mGT]A9e!9d(n2JsDQ17!KpKA!Y^g/<#&5&TNd?K#3OWC`QD*1O5dSOB[$)I\`aKBZcD:6bC50_Kjg+%5R.m(*!D=K<ODf8TbnG\P#QWI6(+gGY%0SPA=4u4pd0=KYkaJ6Z4?,?nnlTV;k#6jTSFD>d(rs4mkZ+9%PmrM1AR;a/W0>UNSHjW%kdYVJE-?">8M/RLLqomnSG.)\8Jih.Pnq:u?@u&J[ut4hS3JMOQ,D8"-32$sZ.RH'afn0k\Vr/g(HtqF8&lJ`H,'),`aYRs*!Ze@%(r>;N/7U:+nM[6q5KV0_,E4jE:Gn76S0:k6>>l%Zb(n[CNNVlFAZpJ'W=;%gl""[7.[R&qUf3+ei$:,a42:t_)&VQHfe?,YJAnfD%VX]Sq@j@%;7ZmQEag0BpoP%3'm$r>[L9C*U&_r&#cf5c#E7e"L[Am@.jtI7uI(O`!UYXD)7=1p%liOjE5C_*]n"9:1QZ"Y^JjMMa%0"sj<0[>fkp5LoW%d(io<U5Y<@#^+:0XQ9J),ks&k886Q9l7WhqjU/Wd<bN&W0'*"@q>4hZY-B]krpY!j*i'c=r,DU*j)&eo%6V(%T68sK)O0]43CA8=Kb6S+lsqGi;-Sj3nP/is9cBVH.'WtLE5pWbBng25O<(g8`XNjs%;2sWUF8\#`ML:U3DH\ije`W&):I+8I$0t/%lGj:@@F\hV7TGLiApZ`+N,Ngj(u)d>FgFK*;QmQI%\SHsq&h;c;N1Wrf)7;i(*:KK&$)qb<Vr=W5O[;HrLDsj4eE.KrI'%1@G3S!%N3gO9[+2>"55F>2]AFqqQ>:sXP8%^Va5Sp6;RU-nGmN:Sq2gP[S8AiqP+j"9-9j:a:SY8?eQj)".cn/-[k?.q;86[!SVUH#AibF#%L1X\YY^48sg/U.lZc]>Uh6=q+H2S3F3g?m]ea<EiCdbQZVpRsZQe=VAl015K[#jGnE-%BLA&r.JbUE;9MMUdP%KBnGBZ,;a1;3,@%/_cb@eJjS6qX%kZhUV3,bB2=r0[:T?dWW5DqW&;^X!/`6'G)_>gYM&(_MUgifUu>=<Y_n\CmOr\8/>F#XE;&IAJVuFMn>jK98E')%1;`tM#PYe7OdR[5Y^YC:Y14d@>Alc\fEeG6k=VQJ7E[`G&'FL6jc2K^CSnN*#'ZF?89-A.IGu!p@Nn&hRuYjNOk`efV[5@9,CW[Z%jRis/<"5WdYtWb=8).Ale?hZahQhZD@>AR2o^sY*gg[R1"]Wq-:?-.[/E4"+M0SMb`$u4lBB>M+_?FnE,+=Y774X2I'[L;H63K&Q%l?*Sc*1kbN+Nc'Vh1ijXT8H,?FX.f9-3IQrqi;u<:^jMKYK;me#rbW[af$E,9QIYc-S^U!V\-HR<28?rT7:V259C2dO_BL6.jS'_%]T+a<^mVP4*5qN=!_N7<as]Snp%h(Z)m7:Zal4m4-_X&a/L,TZ^H<g4-8,&Q\)u7Yk6hDN;]>#(aAj5&MWXYcp537).XoNOA6`=*%RVH*E2,(^m/-J3!=;"-`7"hfm$.Q'!&JAQV4\QFRA;(2q0c8*aF!>S'<1G'nHOH:d`Rkg$l2!BT#$Pd#1e.8gbomC(0:eEhSVIg'%3'Mj@d^46U!/ie(R,--A,kb,s%Z0,6NSeJogZ't`VPh1H`r;=^4ji7+/C1Yi_T19+s7Ka5r$@.pg/S$,8^-o8iKU?@,nP=e&*9Pr%6sf%$s7lt2La$cLQFDhA4LlW9-1ZU.U`l:lA2t>Bk,;1\5p[>q8=L_G@q#6*'5LqBR]BL['lmO,2'=nSno%B$>ikMKk=Lpj>fJ/Y%q"ZSl)'o;!KJ)!h08qg9U:,UeK<KN]ZH,\mOK(tT!X*Rki2'umJ:la,^[nAI90$fa?c^u7Dk=6SWTJ!oT#H@`//'Bmk4LUaeZn=0%P]!?>GJ\&hr(,ZafJ_*"g^)YgSab>^Tas(VL6q2+N#FYn7;RKG)3&l.6&9%?.1ZBV[+qicTdjOQFV8s[KsK2BER4r!OYWea?;@m;%:qG0SPg)[%>AUlaa\q,CX?uP0dnj"p[nGLB19R_B8o33Tk!*XIchsQ09-p__?iMF9Dt?![aNS0i[:TgWp50RI:E^m2ra\@nA.p0]%1&BMBQ394Iobc'up!e,Mr%RikCU[8,(aU5Tbo80FdKLnTI-7S+GoT.OOp&'6[^.,aLU"k*_1m+mHNf>d$>/b?5+0grO0b0-H+sOc%b&;*ZjZ<YU;`t@$6]N8.+**jumphs-Y2m'4bbh>+[DmO=3fIKlP\kGMETU(=o/ChT+L`u?PUmG$]98pb(N%F^E(mgR4'>L65<euA%LW]>V%9RfmOh&QRN-JS:XOdm8Z)6.5kl#`fjo/<Kc,=94k6sAS7&RfVN;?e^24j/PQUf[>0VJso7`%;>moo?R]R2krmWe*-U:+dK%P$]gdl=_Hd*/,98BKtB7:&K*5D*>?IYY'7YW-q-Qpp&0=+%E@Tf6EE2]USBWJEE0+JkT6OM#&!`Hp?5\PfG7i>BU6fUT2NX=_1aJ%DXX)BI_"aPT3Db,Kfug7UeLdtg^a^I;/h/&2M,uH.\fX8Y>@\L,.4De-`I,?hYA<1;3G4aS>ZDlCORU._,jY&,Sc"n2bBaPUi#(G%&33IN"a`jUn+B_GB*h*N?3s,h<@hEg6S2`W:=F@"NR&U+/O`;([DPSnY9T<h0M:>Y-uVU%B$gGPG+J#B$1QECQH&gW;G.YY>r&83%OU`2KRm5Ud9f<T18bIJVF6(R,/58P$V&Z]29#5C8]eG]k_GU+3Xe(ULejt`K\'Z)FU(d1SO?B&.q`"tnc6\$e6bcD,p42Mpq=@Q5%6t8q$dZMOBp./IZ_bg2H7$U%qKm,B?>#"j1DF!",Ho`?9`3@4e,U.1&_pi(p1Tmc=3>+0%c/iGU,c(Reo^1=M^n0oP[/)_u2Vl[3%_,K#_f45f'oS,b9isEh9GILFVNBAOX.RTofGRQdI(='e"D)7-=4Pn.2dMSBR[1kH)C%nVi!PpLOG9be.MpLSI0RRlN%I_1k\3#1<%W7M*LrK_+D=%08E*6Jf@[4aoF&kubA(_`.V-Ai%ZDplkd-C@Yq+EJG%^Tja[V$4JKmro8Zl`G'B84=H\ceC*532L^IJ"(UE%caYZ%/o3H2Ys2R827"8q0.8lTE?QgXUum&i1%m:lcBZ.uad\HFM*`JYK541K-R':Nc7rXl^21f>T+$cN(QAhM-#:U/ihn4BkS^-7?8!\j%?lc7QSnM5LY8F,tK\(n3IL\LEj(Y`Xo](_KE;/.T]4nmM(4(D2l:=$>6]*&GE+4Wo=Msf)HA3Z:X0WSdgRa?>5RTs56/kh1@]a(i%5;jPXbYr#!d)ga*VLG2LW(0#6EZ(]B&dB$!9Yh0:.G:"p&i0(BU8q5+T(C2fgd<MG9L^K_Nmg1@C&2.XP&be$"ZtT[795T9\uebk%CYrsZ$Ri-D$ABAJ93mtu,R%8=DX-H7oI`'k15tMogjl//,$:*Q+cL\#)4.3g#b2CPQtJk[V0.e/^CS1uYqe*eK=B?J`SYM)6hs2h%<`DV?4_)VY\tVhY\g!cjr:aRHK)QQRQ#CR%>g"uTXuV6+7.(uOTnR!l@=((Pj>+!9^)auebdN#5c>Qd<.0=-Jk+&5Ni3fmQ!'5Tr%1_95a*!S]G+;sBHj:>^V-Ma#rq&N?77<=FilfnlioJoJ*SYMEO$Eh!M&ORaOUrfPj:`f,'f:^peU0%C@6?khYS'F>BM!g\+Ae_b0%SK5`r[`m#,/.o(RGSLmK>_&:U;)["(AtX%+$%am%K?9^nd*APF^B;Cc]m5hhWS+r3Y/Cq]-6:e'AF\1Y\JPcKW8cUVb'Yih.cG06%7JY'`_O#ehiV\kt)Gd+Cnad=n&2:LG8m`*/n`-cm$3X7U^W_.ml6ol%H8Abf.pbn,q.Q6cm+^rZ=&$QqTPiO*,t]ns1%"DACgNq[%O27VBk-$KrDh@4SZ'VWp"Nns?]nRDjLWEcrS.*c\<u=!]KRlUeE%3lFQ)GuS"u.K4-B">[BMHj4//GDD22trbBD1*Pa8UuG$9Duq%f5YQ$8ToZ4^#a$kPNC^'@TmEibd-^=k=S!LUtK,@Sfq]uklAk\6Pg,;Wsn'crMYM0CrOo^bC:2@/P?a]q!BeifG6.TmR]VMO6<?M%]cSF5SBR*ue5%9@8N<6k)rG2t`#a*0P_aP.r`/bYCZ%@_)nUr;U]Krr;aDs?M#Km/9n5mEMVuqh7#8TNr.kqR[#UOSCBlKED;emd%m'BhQP%1/OAMt;:eO3,e_fkaj1-kOW?IuW&7Ahab:kg(YHJQ$rf57"U7'8=';lV>n%Gq]npu>=5kY$IR#BiPpXmsO6n&;UDXY4l)%@B]dJ'Jr[%0dVBETTq?4&_D.G:#MBfRc32h#W3>=N(_aVU'D&<!BK5oE2-(jYs=h8K3>L?A3(D7*pbB[C(!d5g6j)h2@Z6c@,6DO%`&1PccmjcGcQ"=r%H7eWXnu,tluqdiIiV&b_LNIK3O?=lYl`"q<jsg47-_7mNFN(IJ>:jSB>uEan^23AK=ikLf.tAf1%DDQ]C&tV%!(]e,oNDa_&4gW0]a"@1J1UN_2.Mr18$>4TOD<Xcp<^<fe8#TA-F][CV3G@uVH79=H$Nk!quI,F0(&*BO.(iZC<)0H+mb530HgLH%I33eVe;)#cI'k`FmdX:BIXD4N*_9nf!XL+,0EU/gd,nV4)(7e54q/I?n'7<N1l,Y27_f-S.MoI#b1\RH:P(8(MiK-ioXU<dC'Q-7%TAT=RLtbKZ=BK+M^$;N%>MFK?o3/I'MYFC;#<RT)A"`ca-S).?PCdFZaHCXPdNK`o8i9j&FtE-XTZi]J[]pUG`ElX80'E+1NPtdj%,RDM$^V?rhg2tiEf^YZ51b3IaJ:atL1p;kqjW<1C"FFL1fO/fcQ#pl"IWjnUB<%`.dKa8d,)^OON0TWHr2ek`@n3pO!2J<PasO)-%g]k)NNAhfuK1q\hUp4$%MG:HO17:+%@Q3H:jJ#M#N%J-f/S0:O1G:3Sq?F5V*.^M,*eL*\TfIeh&KFgg-U\CR($4pCO-Z>1E-n\P%i,a;H>[;Ho!F]]>lcNq*]9%lQLZ19J.00;@h$d;Ln&8NFfY4LX?Rp<n8ijhT31S&j7'&_91,d:%AVF..7,hZ(o&p.qNo0)=06jCn%BDN0q(M^95;7Rt53/g2A<^r7q\_(;R![A[=BP"6?CPlaZefa(RpU(%7:U%*Cj;"k)MHW:4k(*]C(cqbS&J:RUqqg;6PHnC/+n/mF%_oEmo'4;jWR8s=/3P81O]Zs*XMo\aR6Fj%_8&-Q#26Q3W!:#ti)I,HcAPA2c)bGYu'ra)&cE'i\EV!0hjYZcSS0*)D/7M^R7c#T]%<G*"'c:On8R2F#WBI=/D4H3VePW8#_,a7fT4HB1iV_Gj+ja8rHYM5PG.B#$9LNT%Y$l=LlRO@lHYeX!abI(/7*>\L"A1rl%`qK2:%,'E-[N_$,jAXd0Vkm!R!1#MI]_IU@C,eE/h@aCGM%_c)4-s8!WU=WVY"gSJD7VQDpT:HE*KVRfN&]p>mA'@Ib_>ekBCfC8-+6--D%@]nl660MQ4]ON9S;pH(`dnOmEV*,t^/a>I--S8jc[BsFYMk27:Z_&;hWcWV5I5"K+b<\fS:@_Y).NusTdJi6Qo\Vfk12>aik[Zh2%iYsQ)M.nd*RrBAd[Z0]N!\l`M_4Lq6WnO(?)eZOQ*#rp&BD1)7jn5_*YeA`'%VO\u,sC/?0)PEj^42P?*Hr[5)%R`AH#<uPcEg`J%cU-^Olk[m\b&^nN8T4tQp3bs[ltW(L<IL2i)n4_5]4KT/G70fI0]28).W64Rkq)`hbSk<PW9,^F[cF+m54[HUCEcFaQ#^3tp^S$q%>.-\6"/d4n&fFhM!0<C%#nHhI-ELd`r?Gl+[d,Bj"Ro9OSE?SASf,kXh\L9aZ-sdj):[`8,f9VW9"n>Z$KQY=L<#9pq6Ca!KtUgU%K`eB27H1Cl/"AL5Lk,LsG<fB;8HO`?Uo%/gH.2=:QO4UUa$\BV=sV>7nn8eEJMLMEGLpS\I4>skSe_u<D?>[(1oR'fQ61bca5B,1%=r3I$T=\>>"]coJp,7J1T($;F.-NR3XgScdiUhZP>RZ5@'OaD[+XYnci&oV74SZGrVo2RN,:0F&P+RRW<ZZ90$`=#aF:Q1P//.9%%Ge>_$nkfH:/>npt3r;^rq_@?^WU)K*5>K,2bXfm*"jqje[o,O^Yl/0]WRmI`JQ88OTbiDk[ZHUs#,tRSIMPO*j%OH`0WcbN98PhH%.Q>J_U,jQk4VDST@N-?c.[!=SqEBF+M&EJJ2J`pLZ.MP1jgN!KpJCNi,pL%2Ss]LLJH'OWIs"K`Tt8=Mg"<JJgmQ>tjB!Beij(jb%'alXpRM>'K%"Rl#h,fpP*Es"6]-,V%FN%If)j]*^>/OsR<tu'rrC`=+E?FYt[q40"gI=VU6)uRZH\&U$?VQ@UpS>BP:,TWI0dQ&Z%<W&cJ:1D+1l]q@W9f/ogT-tRlDf(P<#>,gcbWjF56?a>(R7"?>!e:1Xi<U41?1RZ>"Zt]SbGuDRXI4Q;8La2=?]odRE8$4t_4Lq[%ah->qbD)W=#Rtq/OLVJ`Ztb<TA[0*b'rL*cBifH2hS]b*JR@bN((!XBU\&C@Fg0.H)_ta[f]Ib^PYY"DmC-qu?V0h8`F[V/NTj=;%2>0Q-8["9OgA5B9:=Yu5Dp,<^ZH\ti4)JIe<oIi4*i>Q`iVur;d.]0hHJ0"(+K$3bY;I`uj6W2"F7r;^Rs^/PT?gp`P@0]j/\@_"%Fu4<q!+]>iMd8Ac`V8UQ/a)bo[^W0jU@l^[l;d\hltQFF?Z.,d/K]`4lY2jUm)$0>UG)>jfY+emd-a=f;WW99bF"6poPN9p\84Yg%DVK!j.Xh!/?CLHF1d65*[:oMZ[<e+P/\;f@qMS\X=9$l(o)6nl&k1iNWIKiA[Wfna-8mi\\M=:YH?2qMSSc/h@(s%I"hAt@Z%8bX%ABRRDO0(ZD+[AsK1G[\L&Puod%CT"_N'Kiefkn842N4:lq+'7$Z3/K?!$i)A]JiAFS?7[ZJH=n`67Q<*<4tJDnj=JPpPo+CUcbL'%e#hZ5A#u#Wi9[t,mgW[DlF8,,,'D#m32(P<Xe-W#'Ieu2a'DoZ;5P<R#@sr.,^FPQW/TpSmhm.4$6$S;i]B12a;Kd+eSh7*eL%K>%m'hc4IK0)^\!YM&Ka0lDjC`[!Xe<%7*V:XL*+6q9'pq^SO50\)'#/<e"rf0?cFuN2Xd<nBOpSV@@VIks\83H+k]L5)4&l)Bq0OJ+%BF;Z7c"!;#[4jrBCU".npS/AKr3VH]n?YEt29Yhf\Ml*-))kn/6:G;,E)[7!6d/t?rm+3"/7*;[fk_;m;%uj\5.<rL%LGYil9D.Y%iKfgP4`/R#1LZhp2P=Br71U*6^l0hegT.>rKUTpS+pK/_F*%bO?Cs[ZWUF_,Q<,@<(KcfcN=S1fj"^uDb2m`Efl(Bn.CR(O2&iL4%(<0XPMpgYHQk'#N-BX_s![MPV.N2_hc%<%^ZFq-SOAt(JA,4B&06R#EX8T7*m\5.U.hA+79^VX(#m=com)F;-Ye6S#)R_S9UkoOo%f`[BBo&kt[&'Luj@2h'e8fFgWlj(]ZmZr0<oM1Q;\>s92O;[1Q3f;D>3VVR!gTi?<D6s)>T\73\[bWmS<kE:kQ6=P`InAPurp*kb%[d5J[gT9TkBf>+I(I!/iY0BjA,P#XhZ]L]QC:mFc-];Z::%NBoR!/=n#B*Y"/B.N[\E[aB/4V1XD,B1^_YJ6*8FbWJoU1]G:K.]%%7V-69-$^dN$&E&.Elq;-FdL&5U:VC_b;qn9rJ(q!4=!`;Z>@dK>0l@YfM]gj:@UGc#NXU2O+C&VjQJ-)<`1Qik@<kWc0sB"$'=4f%\'?>=$5Ec*qB3MuHrsuf]RS@j?bS8o)(ERkeCVTRUm1m&@OBRY2R0/*8]U4*IV.>!h9%3AZ84&g=!-^W3upgQg:['-r"#eK&69)M%<k850Xu^hqb!?USVs$`D*d3)?)3-XbB1WFrMJ@ck(FU`VMuurlQ/,qh`*bJ6`!qVH'+EkG[_5<$g24haPPfjq"/2-^i`>51E_<#f%Var.g`CaX\HP7<pj+\g*/qWU=/[sZP+p"j1hX]<2PCpG1R4@CBeYP\i[Onm62qN1XKhI-tPgQmfdTO03a4D[5n,LY?=^F7]D]S0V%b$j_#7Q&cFVFc\5[hqm+3n$#d]k.rVd1GM\h:"E9+R$M3fGu&o@(rn*X@M=H'_5"&g;FJr&sX5f_=]j`En@>cB5K-SOs@Nm0Z;]1%SUHc[.J9HaJm!trU2:,MV:8rn5gROLW0&NZB[rZLA:JFdTDt)/<Vb>g0D$-'UAcWH!#@((f3m]P=(Q:-fE*FW-(3`gFQ5EfSF-)\%gM2h0UHba-A9sA%/k%I7/q4ka(Oa/b%KXUcP)?mV@6>oB8]Pg*/O(3P7#1g8'ZV^m_IkG)KHTqAC0THfetpZp-H0Z.'g%/Lfkoef%9CZ>Ze+-&c%cAC/LWL0!&#MNG^=tQuO-Fs>53'c_P(>8X4#,uPWXo.%CAm.DV9j=?BuZhlekr?ZCl.J;Pr:D\'3Ntr3btC2FdeUt%)uLus\Xn[q[-fsZ5!Mf(hbFcI]>/QD[C!H"&&Rfk'a3I#).9>PS@8rcK_Y$MHQ7TlV#a6@@:\-.<7oMd6/>pla6SKAorQ`K),s)9%(Aiji'3G`Gfun>6@+eR<B0!"=+8at40J\f#o=23q_ImqMlTt1ZV[si&RtDF@al:<l9YDJR"riE'5noSp6j6HFOd04^3+29p<P;\F%FdnEFB.dC30g&Ze':qhU,k@*D--\39+k3a^2#%iWoro2('2[ehk`,)O:&@JMmn7L`5.o;_OKQBi.D1Se^hHIV;WdfePt?]V[g?o6%gnnnB."T"@>PgHsM3_hoI&]"Eb<Vsr(-u1D@STaadK2d@RP?X0L"+rlB.\ggJKVOESYNmM#9%019ou@Xm6oSBH6jMqbjcD+2K'lf%lX+\cW]cPDYQI'%ATbYH<'/JcOLbitaE:NB(n]hQW+Y0)2\]UgJP;gT2-7j6;LCm:LZc],p:a:BhhuBpT/.JPZ^JGTKLe+>A.M2J%3sI9s8kB$'-pEF#%A<MVKZN8b*Wj?ueTr%=/E:jW4<-8B/(p,18Q'.[?T/DkCt35`[-Kj_H>&kc]30KF$ae[$D,`A,*=N:Q1-a5A%`*n`sb)@kU3)6:*n#*s@`=^_+P."p\HJ>C!-kfWQ!d!/R2_9\^*jo0IXdZGV5.9q9,&TG]>M/??S.)ap"O5C3nPt#q>Ac?b&MTk<%.>L,AOb,FFQIaEIPu(quD@OiOc^gnF/qQ#T.?aO22D2P.0-b%Ies>tA5as*?9DbqFY9I?Ub-OcHc("gtQOSjO_Sn'Q=cOEUCk?6A%T<6!b(-%/q_jtW7-=E@I:\N<%WJ(8MPr-*jr+m)g/Y,9f*>s2YLb4o)1I,`o'es-]WbfI[?"Y4LU-0Bc,5ceV2bH.:>,@g2I%&9T%BsF(1cnsHP!Edi#%$Yf7@E1!0^OpO5%KpWMEbC$1O3n?*A1WV3;\k+V#*o<:c#G)?G-nbr"$WbqR=9u;!*Cc\.8!O&F#1*D=MUkI%ko$g<?UmEj"=792.5QsL7(\LZPrpX.H.(EQSrtY"0;I]N'cfqK_B8_\D.UeA)+Nn#oesuddNZ[rYsgj(0CL,NBTB3,=b[Dth62FY%GK>tm8OV*`HV0S'UVYbVZhJtZMbubGl*+tnZ=3tD;T2o1!f]e+pXt@#8<Qf`@*P/<X?7`]h9FiFS+jD>65N-Bq&V)Jhg%]:8a"[t%'s@a/]/WR9pXX)Ic3&*_8o`&OC1K[\gI*ZaVmpF6Q=c$mN'3!7no!M7me.?nHR4?nRprH3d(*8iZa6ot_/<c7)"t+L+2-;^K)W^t%$(fSO(J*5]^#-Ce)JtA/d!mb6ADs@:,I8^KE$$%sDXk8e3Ooqm3ir(cqT5Z6Wb%r)1$o';a\<gn0?3QRMQj.:jna4S-1`+b9%LEK%Y&Fm%W`YW,LdU<(:Ien?!B6G8eoc7rbBuiq;JX$G^/Z!/K1.!k8qklNmM83bm3VQu&MW@K79T/kr4FV9g*]O.gB^HID."lIFH2+=%k+S,j&JZ:hRpluqQC!odn?3]Xn.TnOm2s]+idWK;"pFY2XnNd%GM>%>GQ7@mgLie0n&-HJ4<T"_gQtQncaDOLY[B.b?2OCbAn&mG%L`Q7b06Tm1^k-]I0m(B"JeG?11#?<S.+9SMBq\/4"EHjk@DO'b%J):dWr/44<k!X]oHC;1a&=6)&k+s&_.I`nG#fAL$RWM%6WIUq%`W]j&e'C*p_.oCHLk4a.OCHn!?Z.Dg-S3p9C74\l+eNhf'r+e$J-Ckid?P@[N2[8^Z;hk,q7U?MSG!mO=Mm\Rpuj%a/uuUXK!AV9%md2`Ngi395W*lf%Bg5G1T)A_m^B55;=Yir<joUdQc5iQcaM55K*cm4C[I.@BifP7Bg@(K">uK5;"9^s5km7XpQ[eQ0G?26TJk<H<%aW5n>-?Nm=?>*L7"%aO=+P9=#V&b(o/9r@d#9[-GHK'JZ<(ct:qJ%p^g9L1`pujLP:A^^bU,Cit^p7s14n-8>Y4KV`#K@rY_1;i'%J?ol3<ssk`+>gLq^tt2^mV[8W,^([U])rPu"f"3,^rrt0\]Zh7^`$7UV\A2SHf2[@Z\5,R%NA0&CZRR\^tZ0P[VZZc/DlUeZP*`E%3"$3I0FN3cCit83i=6;CedZA*dPPAK-`E:s45#r*W0LB6Tu4T0XZ4N=OBJM_!o224'+:nNF?rt4W`<poV+ON_WuO0jg^dBMoqhX1%KrfuCV5k$?2GgN:XntRj+!+`,\PS<(j2;MOJH]YOeU+c^,;%]^m93!eR]!4<5l&W/=o,4"VW$3>,]%7oRm#=SXa#%,R=Pu948Ok#%K^T-QfSf'tC_ZAKZbBS.9Y[FEOGH50/ojBP@GgBY*%g:J]!a*T>6G@p^p:1j.a$-]P6fu()<>m\2n/0aZHZGA[,P$6ap1u%o#nSf%AN&]S*7!>eI7-g\c;Rl9*-`5KZ\L*)a-$RZ*G*h8/[D.8&4tnVP)+u]3VIIWh+br)3ZFJ_`MA<JAFo;Ii9";q@B.U8JJ*V<eldOG%nZsE).fMg,cW2qF]e7+3Ut=.Z%ik.X)bDf$;jDll/2?IKPuOnhP(Er*^,+TZ2quH;DBBjYRc(^fG$F5q7q2_."=o>;eo]icr%:=H%V:?s890jh&N+BYI;^M!>G-ou>omkLbN)$'!_n/Yc?"],h$mD9!Sl&0O_;8Y?A?Xo$HWWTO<%eV?SKUEk!>9/XFuW.U!E2S[?Lp7X%[:f*:qE3&=^=Z]=6MrOJ/<4bA?Wo@dH:d[p?Cti<44H.W:82[UA%Fd.f-b\-j7"VW]VMt\p`##0S*eN(`9sH>((Us<QDcZcK@i'O%g!1*>]6`#h'?%%@V%+[_`%HrXdM'Q:#L@VsZ0UaZlN(I],u2Omjud;(k&);b4.lAZ5jUOH[<R5SmC;G"+EgJAg(+b,SRL=T@b2c(%cDM+\QS#"\IjuR?Hn-WWhuE10D^Y)V@[ACZ"2qA&DbW/%]53p['?"dQkN)]Kb7`V?`,<WXFF`"d-Eck=Z-/kX`XQD?>P:WSqZUGa%ni@4^q7s4m"hV.$@HW#iqe0Ej0gn<*2hkTCBfV>'L)io&-c![)@tF@<"L2_[kiE"X++nWdf_M89L^>tqS]NLNap,+l;KXQ3+Eeg;%0&QtjrUIK[:-7>^]OCB-@<gj)@JkH(5[_\ML(@)GG2n6I1LRiGq-[C_FWd_rpeAe-FY*I&UhQ7cj*/\$f7X**-/k%h9$)D:[.(\1%X7at[bq/+QI0pg2=<M@,[X-W.XtUr[orqZFFc20AO93>jXqQ-@%Wsl;pO2@?8^h^eHJ;ENpq08*p71T@QM7:_X8UO_bpqsfq[TLW%lfR@F_moD0ZAXr9j;!r(X=fgC(+4Bk>8!P2i;W\i;>/J!@dm51"\QC+^<JTh&$G\EUTrJP3f%`8ZZt@Zr7$Y;hR_UM&)lJig>+m@%*5Rf3Q+TgJ[?"-L*W)Fh7_!b,"VF&%B0kn"+($BfHC:oLCY#1W7/C!sdC^rDrbt/f`iOe.ei1JlKuU+r(itA]P2PMdE?,&>lg'Jh%AK25'X:8LZONuPa%$%j\<o]LbVH7]1adGr014fnh,m?-&LBhh501[b1*OR*T>?s3<*]VC=Hu!'XK+Y4e;_5lHjI2]nq(Ulm'0uWO%*;4_'+HTISq-1RUh'1E<5i,<g+NMR];Og>J2LZbpB.V*C==Z_O9n[:J&@q)r&C-"CO+Lb:*@!W&QFMIVE_HV7Zuq+n'*6KZji&3&%V;mk+qig&@/`l3fKFUA[O3I:.!):KT5M4gt43)S&m[OP.>djaG(_6WO/`A)`"<FU+?O+cA^J.L3Bc;q1nVjnOo!dam3bh&TD'EN]%7!^j`oAc3fb`ViU&p1eI5.Qs.$k4m(:JrN3ShLh)[kjZM1m(C0'k=;uD;&\9p;a<`b>q3J0@*-SD5<Ha[ggOH=fGi)$>k$(p+LD$%Km8ot/@uDH2J]ls)NFRF#H#<0D:eX].3ARGgmq97.f\u'h,`Vp^d<&O(@u1]!cf;*<5f<B4%J32ALAM+/%fAp#[T,eETZV1-VAue%#<+h34Lj5j):]@#RrQ&JM876HQU5o$^eGh"370.RCi_Qacdue@K89_?,S&rY-0l)N;f"LN&U'lmiWW`e7H?8AIj*UheZb&9crmB\%:uSU&iE@==IK`C%8Wh13rut)3P:h2JCH!6?^t.+W."jn^pljL,,Q,H)J&%796.m!HBflMB/e(!)#A_L;*eBQ0kJomc(q'/dhHR]!%_XoK\gSRFcat=@+C\S(E@AdFj"VL\id[o4b99qu'jN^jj@;=,]K\2Y:/'@Mnn1G"X_G:i<PBap-&Ojob)"k"'2Z![=M9),MZgm',%=RD$@#]OObG2kc3@@G!ron#@Elh_&@hAjOr]"YuR"T>P^#i9#=Mr6BEK8oO-mj'NKeM"+e?%iYl)lu:jG[%SKOWF^0%?@mdN.[o3%\G1]PQgkesf<XR+bN4b0!Hl[9o&5Zgnq)Z(l":i0.KAr&7H-NK>13B3KhERlV!JXi9^,HXP+chj]mf%QBU3[$,AG_/bYM$?Up/]t%'hk-l=ZKM%cFWLJcPliZ)@U4uhMku9F+S<0_!m5U.Bbq/M2DQnP;;oQ`^uHg&7*3Q4:Nsc!d)YGA`Kq-/BK)nA[2m*QXZGVcO@uS%:<:Yp@m*Q_("DYK8?0S3?T(VX#kSesXGj1mZ#r7CO7VVl-JEqa.NTfuTWTj>^fXr,.5qR98?^a)Qqi%oVLV,[%'q&fRhe4NPsSD"%P@b(^4EkLmk03_q&qhtrlmT%+CDbFV!s'=6''J$Vn6G@>asNq4<EBgmh:)^X>L\iC)CZN<'-=E*>J?50QBC)L]t<JsTu<^a1kkQ.%c9?QJX.;)O<[[G!.O_QJksac9oS5mpnX\hkWpnP7qT][7SfPf@&1drp4f*j"bO4XF()htf_!ESOR(:MgcMH1pn)_QLRIj/Jgq+3O%Y+#F:6aibQjMkM7mRRVrh0mr`F16>eA\X&":-10o'7AET'S;%Il'2Hc-IeUu8\Eso+TlKuY&5H`2]RmoGn3WNo'rQA&;]NGAU&\K%0a03,C$Cf>!tg44)_\SCg\LU:F[X[fR[0U@[Qd9t!H%k]%WB)0Bd$+s8LPCkh!5aZI4@Rc*;A'WBHi)Yanl+s<?.]jGlmXt\JG6C%9^J6jA#eI,BW<QCb7a?c1F1Q2!ZKMj6*G\BNMchG90*W/$7gW#`pO1gLb4DL,nui#Ubl=4$^M)Rd;uiIir6X*;hRf&KU;n*+'='h%7)5/]poMTZU'#fh7pZBHBl=sqErN-'J!Poo+0a";B[V3X9<VEd$6@*uBm;k>$i)REU*$;_cehN&p4]/kfT]3)n=%)0*pCsZH""d&%4bS_L8pW"_Qc0Wi%8k5`lmR]d#_'rDGtsBAf@`Q[RhF56JsTgKVE?qKg5fJ`<sUL^6I9fs5'sq5;@lp?*2s6n]u]5,O7t.&0RVsb%=j^Gi[VK4,8)]uW*0tc8kbL:_@JAm0J?p,K^$kQ&,l._R8ij^,>)I8D"<<Ha9S<"($1WBiR6&eH"V1bQJGl2B\Ce!RE&r(*`_k2M%b`J7)>@Tr?H6?NU[M72nmRcX[YRb4nB*CBF[BAk97Q;WGAO'5Zg9T<YPHRTuc0fq?=%&D;n5S0Mf*=4S%g4Cnl$J(TKh9;jErp!`%R3cg%J5'amK11;j@h(06@,NNtn;9l#^s^UR\BW!N]6]IsY%&WaDA=T93H_C[NIQD<YFt!^XeD4YfqV2XAelZ6/.rh7WrR4U`T%C]%dagTsnGfn?0"Yt)5o>%P]n83EZ=2"98<N2[0iGr?Of!#X[]>"f#[&QM"dJ?rDdRtnS3p/Ze\FLMADrfMn[XjP1\[O=Odlut6Lf(:%^>DB?JeJ#\`Hi=0*pV_U]D,Qa=fftGA0X'W@aY>2W^<[N'sSQ1aTXFiKfQtrnCs9,"O]qT0/gU4:0P^Y8>2<i5c,q<\Jr#C:oBs7%i1F2W#,frk0CisC,)V%`1K#UV_b5^F61-Xr'G":DT9]%@4,I5dD&m9M2lR?[Iaa_30)W]W@bI$LN'ST7Kg4BnO92A##4s<DPuFM<%9!1o`2k"3J`kdS6'm[J`Ls8MmTS4)U8E&?E[W'SB#ib(6p2kD['R9Q'];[4h+j\B?6gZme12I#b>[\O@.HEetZ%[O!WeC<5-7$OP%*eH/D:(IpF_TJ`Ib]draDAo8-VCEmZa<VNoktGPp2[O9OehRVSP:sNm/Tqh7P`XKG*OJ_YBji7.jMJki,<h.P_GJl7kWoDG"7U:[%<#j\41YYE/=M7[)"cJCPLN[_O&!Ui[*l_CW%,NAnZ?'k=%?XGf.C('K?.13_aKLKW%T4)bej%]GO!"#E0(J)YLm#i;16,gHbk-Nf%^f/aHC?Y^YP)q$p6M-EOS-ZtT+]mG?kHn$a#F*)W;u0p"W=[,HWBK4;?_=6<_fQu18Me'sj&o!+)n.3eM`IH[",bue+1C(e_9![.%$>3`Arp&=N]drCLb:$H`q/phd/Xp<Wc0#o/[].sk?TrV)'B:0k(%aJtY0-T3qs/:-]&1`pZ1XLG#d]0s*pHW]gT(5.%6m%gCpoDY%>W/YMWiU]\0,JKYCoqOqc;GheB)ap]+4ced1.WK_2uRU$f\Te!XR+cTpiO-WeS9BqVLNaff4J=GF3,C`^[(Q@ZfqBs-Q&E,n+e@"%HA"d,TC_6a`Pg)/N8O>M?FKW^5,TH?q!9#T-`kVdM8j23fBXe2W7NtXIpR!IA,4Lj>cf'I?Z/U6^G"@4DW<)#l[1DdT[2Au=k$IK%Y.QhOlnBtEFpZ__]+(#TNu;TNDNPY)!='*2gak/$1Fl8b3SXY3*`.0kk_AbhZ_)QaDZ0ETlrNqeGeY4%&P[!#DUeZt?c`>Bh@\Q&%rJ5oHLM-261Kol%aOG]JZnIC3L!b@AN:qb>M[mf^O9^\',f27s]HO6#;=Me+J.D%);>=IZYSt`A9Z2J0;mIK+/fi-Bf@+\!&llI]%7j4.s.BtdtVd'X2jD!EWL_<1Xl8t_KOO(-M]Vc1(d*qiFqLREs%X)b3nSb/&loE&fe_`k+7IJ.[EJHJ*:._16(<Z8@U/0c"['Bq@%2o0'h;Ne)$6\(UrZ4sZjMOmAppC%Kb_=WSD!qR!M6KO"q<6lb=#>8WfWDG3hC70/OBq-pebG6?;<$Um/$&+[gl.\n:$k5]M$7FT#%.oHs(F/WZ4Y&fIW\=Emp,7l[_qBqTHaD!i\BQOJER!#',Qe3CC+X5sdO53[%[miu,OZAtk%p4W46%^P`pE[$&B9<pOWab)[@)'k9%R\i'g_&pJuiu;Fpaedq-JNf)<U/]UsXJD*@J,FO5p0?f_Y=FfJbOj+>c/Pc$;RJeERS;S)bN_H!Xu[ma>&MK<C0WY+G+%VopRgu]%XZ"pV>E(SNld&D=0#%-lo&f,-7fNI\2NCQ~>%AI9_PrivateDataEnd